/* eslint no-console: 0*/
const postcss = require('postcss');
const syntax = require('postcss-scss');
const { variablePages, mixinPages, types } = require('../../kss/builder/parser/constants');
const fs = require('fs');
const path = require('path');

const ignoreStart = '@tokenparserstartignore';
const ignoreEnd = '@tokenparserendignore';

const outputDir =  './src/sass/tmp'
const disclaimer = `/* This file is generated by ./build/grunt/parser.js. All changes to this file will be eaten.*/\n`;

const variableParser = require('../postcss/variableparser');
const mixinParser = require('../postcss/mixinparser');

const generateKssFiles = (page, parser) => {
	const sourceFileContent = fs.readFileSync(page.source, {encoding: 'utf8'});
	const trimFileRegex = new RegExp(`(${ignoreStart}(?:.|\n)*?${ignoreEnd})`, 'gm');
	const scss = sourceFileContent.replace(trimFileRegex, '');

	postcss()
		.process(scss, {syntax: syntax})
		.then(function (result) {
			const root = result.root;
			const output = parser(page, root, page.source, types);
			const outputFileName = path.join(outputDir,path.basename(page.source));

			if (!fs.existsSync(outputDir)) {
				fs.mkdirSync(outputDir);
			}
			fs.writeFileSync(outputFileName, disclaimer + output.join('\n'));
		}).catch(function (e) { console.log(e) });
}

variablePages.forEach(page => generateKssFiles(page, variableParser));
mixinPages.forEach(page => generateKssFiles(page, mixinParser));

