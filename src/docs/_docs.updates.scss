// 13.4.0 Release update (July 2018)
//
// XUI 13.4.0 adds enhancements, bug fixes and two robust React components for our consumers. Data visualisation can now be further celebrated by utilising the brand new [XUIBarChart](./react/#bar-chart) component. In addition, [Accordion](./react/#accordion) has been given a new breath of life with an improved visual style, responsive support and fully componentised flexibility.
//
// <a href="https://github.dev.xero.com/UXE/xui/releases/tag/13.4.0" class="xui-text-link">Full release notes on Github</a>
//
// Styleguide: Updates.97

// New features
//
// **XUIBarChart**
//
// <li>The [XUIBarChart](./react/#bar-chart) component enables users to display data visually in a variety of ways.</li>
// <li>XUI's overhauled the [Victory JS](https://formidable.com/open-source/victory/) chart library to create a component that fit the desired functionality and feel that our consumers expect of a bar chart.</li>
// <li>The component has has a large number of customisable features, such as color, labelling, Tooltip integration and more.</li>
// <li class="xui-margin-bottom-2xlarge">The component offers full responsive capabilities, with options for pagination and overflow scrolling.</li>
//
// **XUIAccordion**
//
// <li>The Accordion is a popular design pattern that has now been reimagined as a React component ([XUIAccordion](./react/#accordion)). The previous accordion model was overly basic and didn't cater to many use-cases. The new Accordion mimics the styling of our Content block. This enhances the visual consistency across experiences.</li>
// <li class="xui-margin-bottom-2xlarge">The component is adaptively responsive and provides a variety of layout options.</li>
//
// Styleguide: Updates.97.2

// Updated features
//
// <li>Added `isBlock` property on [XUIAutocompleterSecondarySearch](./react/#autocompleter-secondary-search) component [[#3401]](https://github.dev.xero.com/UXE/xui/pull/3401)</li>
// <li>Added `isMaxContentWidth` prop to [XUIPill](./react/#pill) so users can opt for no max width [[#3478]](https://github.dev.xero.com/UXE/xui/pull/3478)</li>
//
// Styleguide: Updates.97.3

// Documentation
//
// <li>Added a note about `aria-hidden` around modals, so that developers can best make modals work well for screen readers and assistive technology [[#3483]](https://github.dev.xero.com/UXE/xui/pull/3483)</li>
//
// Definitions:
// New:			  Bar chart:      	[Compounds > Displaying data > Bar chart](./section-compounds-displayingdata-barchart.html)
// Updated:		Accordion:      	[Compounds > Displaying data > Accordion](./section-compounds-displayingdata-accordion.html)
//
// Styleguide: Updates.97.4

// 13.3.0 Release update (June 2018)
//
// XUI 13.3.0 adds new ContentBlock and ContentBlockItem components, customisation options for Progress Indicator, new icon API and a service worker for offline caching of docs.
//
// <a href="https://github.dev.xero.com/UXE/xui/releases/tag/13.3.0" class="xui-text-link">Full release notes on Github</a>
//
// ### New features
//
// **XUIContentBlock & XUIContentBlockItem**
//
// <li><a href="./react/#content-block">XUIContentBlock & XUIContentBlockItem</a> components are typically used inside a Panel to display a simplified top-level view for a detailed sub page, often containing quick access to actions.</li>
//
// ### Updated Features
//
// **XUIProgressCircular & XUIProgressLinear**
//
// <li>You can now set a custom Progress Indicator track weight for more fine grained control of the component. Look for the `thickness` property in the <a href="./react/#progress-indicator">React docs</a>.</li>
//
// **XUIIcon**
//
// <li>We've introduced a new forward looking Icon API along side the existing API. This will give us more fine grained control over the icon sizing and positioning.</li>
//
//
// ### Documentation
//
// <li>We've added in a service worker for better offline support</li>
//
// Styleguide: Updates.98

// 13.2.0 Release update (April 2018)
//
// XUI 13.2.0 wraps up elements that provide a little bit of goodness for a range of our customers.
//
// We have broadened our component base without breaking changes, so product teams can upgrade easily and continue to benefit from XUI delivering regularly.
//
// <a href="https://github.dev.xero.com/UXE/xui/releases/tag/13.2.0" class="xui-text-link">Full release notes on Github</a>
//
// Styleguide: Updates.99

// New features
//
// **XUITable**
//
// <li>The [XUITable](./react/#tables) React component enables users to display tabular data in a consistent, semantically correct, and contextually appropriate method. It is designed to work alongside our existing content block listing layout.</li>
// <li class="xui-margin-bottom-2xlarge">The component offers full responsive capabilities, with a number of different view modes for wrapping, truncating and overflowing cells.</li>
//
// **XUIIsolationHeader**
//
// <li>The Isolation header is a popular design pattern that has now been realised as a React component ([XUIIsolationHeader](./react/#isolation-header)). There are some scenarios where we want to focus users on a specific task and not use the full header – the Isolation header caters for these situations.</li>
// <li class="xui-margin-bottom-2xlarge">Making Xero responsive is an expensive venture. Utilising the Isolation header component is one tool, products can use to help build a responsive experience.</li>
//
// **More**
//
// <li>New React components for [Row](./react/#rows), [Column](./react/#columns), [Pageheader](./react/#PageHeader), [Breadcrumb](./react/#breadcrumb), [Actions](./react/#actions), [OverviewBlock](./react/#OverviewBlock), [OverviewSection](./react/#OverviewSection), [Panel](./react/#Panel), [PanelSection](./react/#PanelSection), [PanelHeading](./react/#PanelHeading), and [PanelFooter](./react/#PanelFooter).</li>
// <li>Ability to use XUI React components  with a custom namespace. This enables more than one version of XUI to live on the same page without resorting to iframes.</li>
// <li>A11y evaluation tool now present on all Storybook tests.</li>
// <li>Updates to developer build tools.</li>
//
// Styleguide: Updates.99.2

// Updated features
//
// **XUITextInput**
//
// <li>XUIInput required a substantial overhaul because the previous version lacked flexibility in terms of placement, sizing & state in how it can be used by our product teams. There have also been a few specific bugs raised around the behaviour. Providing added flexibility in XUIInput further enables our product teams to build just what they want, while retaining consistency through the use of XUI.</li>
// <li>Reconciled XUIInput and XUITextArea to create [XUITextInput](./react/#text-input), as well as squashing XUIInput & XUIstatelessInput into a single stateless component. This enables consistency in how our product teams use these inputs.</li>
// <li>Built in flex positioning and provided the ability for more complex formats of inputs to be used with XUITextInput.</li>
//
// Styleguide: Updates.99.3

// Documentation
//
// <li>IA changes with clearer grouping structure</li>
// <li>Expandable navigation structure</span></li>
//
// Definitions:
// New:			Isolation header:	[Compounds > Navigation > Isolation header](./section-compounds-navigation-isolation-header.html)
// New:			Stepper:					[Compounds > Navigation > Stepper](./section-compounds-navigation-stepper.html)
// New:			Accessibility:		[About > Accessibility](./section-getting-started-accessibility.html)
// Updated:	Table: 						[Compounds > Displaying data > Table](./section-compounds-displayingdata-table.html)
//
// Styleguide: Updates.99.4

// XUI Release information
//
// We announce releases as they happen via Slack on [#platform-fed-releases](https://xero.slack.com/messages/C57H6G0RM)
//
// You can also talk to us on our respective slack channels #xui-development & #xui-design
//
// Styleguide: Updates.100

// Release schedule
//
// In order to provide predictability to teams, we’ve made the the following commitments to the XUI release schedule. You can read more about these in [Confluence](https://confluence.inside.xero.com/display/FED/The+UX+Engineering+Team+and+XUI#TheUXEngineeringTeamandXUI-SoftwareLovabilityObjectives).
//
// **Major**
// <span class='xui-margin-left-large'>
//  Once every 90 days maximum
// <span>
//
// **Minor**
// <span class='xui-margin-left-large'>
//   Once a month maximum
// <span>
//
// **Patch**
// <span class='xui-margin-left-large'>
//  Once a week maximum, unless the fix is critical or a security concern
// <span>
//
// Styleguide: Updates.100.1

// Github releases
//
// Our Github repository also holds the most detailed information on exactly what has been released and when.
//
// [uxe/xui/releases](https://github.dev.xero.com/UXE/xui/releases)
//
// Styleguide: Updates.100.2

// Sketch files
//
// There is a seperate Github repository managed by design, that holds the most recent Sketch file. The file name provides an indication of the XUI version it corresponds to.
//
// [designers/xui-toolkit/releases](https://github.dev.xero.com/designers/xui-toolkit/releases)
//
// Styleguide: Updates.100.3

// Deprecation
//
// You may find sections of code marked for deprecation. This means they are still available in our codebase, but will be removed in an upcoming major release. 
//
// Styleguide: Updates.100.4

// Experimental flags
//
// You’ll also find an experimental flag alongside newer sections of the design system. These patterns are available to use, but are not guaranteed to be in the next major release. At the very least, they may be subject to change. This gives us a way to test patterns and solidify them before they are fully endorsed.
//
// Styleguide: Updates.100.5
