
// Toast
//
// Components: Toast
//
// Teaser: Visual confirmation of user actions or system events.
//
// Introduction: Toasts are used for visual confirmation of user actions or system events.
//
// Styleguide: Building Blocks.Alerts.Toast


// Best Practice
//
// Tips:
// Do: Use a toast as a way to confirm user actions
// Do: Use a toast to surface timely actions related to the current context
// Dont: Don't use toasts for highlighting form errors, use inline validation instead
//
// Styleguide: Building Blocks.Alerts.Toast.1

// Anatomy
//
// To create a toast, apply the following classes.
// Note that layout is conditional of the presence of the close button, so this must come first in the markup.
//
// Tips:
// Do: Always include a description
// Do: Always include a close button
// Warning: Avoid long or complex descriptions
//
// Classes:
// xui-toast: Container for a toast
// xui-toast-layout: Recommended layout modifier for a toast
// xui-toast--message: Apply to text content
// xui-toast--close: Apply to close button
//
// Markup:
// <div class="xui-toast xui-toast-layout" role="status">
//   <button title="Close" class="xui-button xui-toast--close xui-button-icon xui-button-icon-medium" tabindex="0" type="button">
// 		 <div class="xui-iconwrapper xui-iconwrapper-medium">
// 			 <svg focusable="false" class="xui-icon" width="12" height="12" viewBox="0 0 12 12">
// 				 <use xlink:href="#xui-icon-cross" role="presentation" />
// 			 </svg>
// 		 </div>
// 	 </button>
//   <p class="xui-toast--message">Bill created</p>
// </div>
//
// Styleguide: Building Blocks.Alerts.Toast.2

// Layout
//
// To display toasts in the bottom left corner of the viewport, wrap them in the following class.
// Using this class will ensure consistent positioning if this changes in the future.
//
// Classes:
// xui-toastwrapper: Apply to toast parent
//
// Styleguide: Building Blocks.Alerts.Toast.3

// Actions
//
// Tips:
// Do: Actions that relate to the task at hand may be included
// Warning: Avoid more than two actions, excluding the close button
//
// Classes:
// xui-toast--actions: Layout container for actions
//
// Markup:
// <div class="xui-toast xui-toast-layout" role="status">
//   <button title="Close" class="xui-button xui-toast--close xui-button-icon xui-button-icon-medium" tabindex="0" type="button">
// 		 <div class="xui-iconwrapper xui-iconwrapper-medium">
// 			 <svg focusable="false" class="xui-icon" width="12" height="12" viewBox="0 0 12 12">
// 				 <use xlink:href="#xui-icon-cross" role="presentation" />
// 			 </svg>
// 		 </div>
// 	 </button>
//   <p class="xui-toast--message">Invoice deleted</p>
//   <div class="xui-actions xui-toast--actions">
//     <button type="button" class="xui-button xui-toast--action xui-button-borderless-main xui-button-small">Undo</button>
//   </div>
// </div>
//
// Styleguide: Building Blocks.Alerts.Toast.4

// Wrapping
//
// Tips:
// Do: Toast messages wrap by default if absolutely required
// Warning: Avoid including long or complex descriptions
//
// Markup:
// <div class="xui-toast xui-toast-layout" role="status">
//   <button title="Close" class="xui-button xui-toast--close xui-button-icon xui-button-icon-medium" tabindex="0" type="button">
// 		 <div class="xui-iconwrapper xui-iconwrapper-medium">
// 			 <svg focusable="false" class="xui-icon" width="12" height="12" viewBox="0 0 12 12">
// 				 <use xlink:href="#xui-icon-cross" role="presentation" />
// 			 </svg>
// 		 </div>
// 	 </button>
//   <p class="xui-toast--message">Smart invoicing has been set as your default view. Update this anytime from invoice settings.</p>
//   <div class="xui-toast--actions">
//     <button type="button" class="xui-button xui-toast--action xui-button-borderless-main xui-button-small">Invoice settings</button>
//   </div>
// </div>
//
// Styleguide: Building Blocks.Alerts.Toast.5

// Sentiment
//
// Tips:
// Do: When using sentiment, use descriptive text like "% increase"
// Do: Use sentiment classes for system messages
// Do: Don't include a close button, persist the toast until the issue is resolved
// Warning: Avoid using sentiment classes other than on blocking issues
// Dont: When using sentiment, avoid vague text like "%"
//
// To add sentiment, apply the following modifiers. Use descriptive text as well as colour to convey information so it’s still meaningful to people who can’t discern colour.
//
// Classes:
// xui-toast-negative: Negative modifier
// xui-toast-positive: Positive modifier
//
// Markup:
// <div class="xui-toast xui-toast-layout xui-toast-negative" role="status">
//   <p class="xui-toast--message">No connection</p>
// </div>
// <div class="xui-toast xui-toast-layout xui-toast-positive" role="status">
//   <p class="xui-toast--message">Connected</p>
// </div>
//
// Styleguide: Building Blocks.Alerts.Toast.6

// Hiding and showing
//
// Classes:
// xui-toast-is-hidden: Hide a toast from view
//
// Currently, choosing when to show and hide a toast is left up to the consumer.
// However, a modifier is available to toggle this visibility on or off.
//
// In this way, wait until the page has loaded before showing a toast, and only reveal one toast at a time.
// Automatically hide toasts after a minimum of five seconds, accommodating for the length of the text content.
//
// However, if the user’s mouse is positioned above the element or it has gained DOM focus, pause the timeout.
// Alternatively, toasts should be hidden immediately after a separate action has been taken by the user.
// This could be clicking a separate button, or navigating to a separate part of the app.
//
// If another toast is required, hide the current one from view, before showing the new one.
//
// For more guidance on how to use toasts, refer to the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_alert_role).
//
// Styleguide: Building Blocks.Alerts.Toast.7

// Accessibility
//
// It is recommended to use the `alert` role when using toasts with negative sentiment.
// This role is limited to important or time-sensitive messages, so only use it when you require the users' immediate attention.
// In all other contexts use the `status` role.
// For further information on roles, refer to the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_alert_role).
//
// Styleguide: Building Blocks.Alerts.Toast.9
