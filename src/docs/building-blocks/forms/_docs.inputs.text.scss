// Text Input
//
//
// Teaser: Standard and special purpose inputs for text and search
//
// Components: Text-Input
//
//
//
// Styleguide: Building Blocks.Controls.TextInput

// Usage
//
// Currently the `xui-textinput` CSS classes are highly optimised for usage with the `XUITextInput` React component. At this stage we're evaluating whether to create
// a more simplified CSS class solution for direct usage by consumers.
//
// Styleguide: Building Blocks.Controls.TextInput.1

// Standard inputs
//
// Use the correct type attribute on inputs so soft-keyboards display the best options for the content. XUI normalises the display of input types so browser specific up/down arrows will not display.
//
// Tips:
// Warning: Inputs in XUI do not currently adjust font-size for small screens – this can trigger page zooming on focus in some mobile browsers
//
// Definitions:
// Default: <div class="xui-container"><input class="xui-textinput xui-textinput--input" type="text" placeholder="Standard Input" aria-label="Standard input"/></div>
// Read-only: <div class="xui-container"><div class="xui-container"><input class="xui-textinput xui-textinput--input" type="text" value="Read-only" aria-label="Standard input" readonly/></div></div>
// Disabled: <div class="xui-container"><input class="xui-textinput xui-textinput--input" type="text" placeholder="Disabled input" aria-label="Disabled input" disabled /></div>
// Password: <div class="xui-container"><input class="xui-textinput xui-textinput--input" type="password" placeholder="Password Input" aria-label="Password"/></div>
// Number: <div class="xui-container"><input class="xui-textinput xui-textinput--input" type="number" placeholder="0.00" aria-label="Number input"/></div>
// Email: <div class="xui-container"><input class="xui-textinput xui-textinput--input" type="email" placeholder="example@xero.com" aria-label="Email"/></div>
// Tel: <div class="xui-container"><input class="xui-textinput xui-textinput--input" type="tel" placeholder="telephone #" aria-label="Telephone"/></div>
//
// Note: Avoid using type="date" due to severe browser inconsistency. Use type="text" aria-label="date" instead.
//
// exampleclass: ds-example-markuponly
//
// Markup:
// <input class="xui-textinput xui-textinput--input" type="text" placeholder="Standard Input" aria-label="Standard input"/>
//
// Styleguide: Building Blocks.Controls.TextInput.2



// Textarea
//
// The [textarea component](./react/#textarea-deprecated) can be set to **autogrow** within limits or a fixed height. It includes an
// optional character count — but be seriously skeptical about the need for one!
//
// Non-React implementations need `xui-u-resize-none` added if you want to prevent users resizing.
//
// Components: TextArea-Deprecated
//
// exampleClass: ds-example-inline
//
// Markup:
// <textarea class="xui-textinput xui-textinput--input xui-u-resize-none" aria-label="Standard textarea" placeholder="Standard textarea"></textarea>
//
// Styleguide: Building Blocks.Controls.TextInput.3



// Solid text inputs
//
// Add `xui-input-borderless` for inputs with a grey background and no borders.
//
// Tips:
// Do: Use for isolated secondary elements where a standard inputs are too prominent
// Dont: Avoid using for linear forms or where validation is required
// Warning: Full range of elements like selects are not yet supported
//
// Markup:
// <div class="xui-textinput xui-textinput-borderless">
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//     <div class="xui-iconwrapper">
//     	<svg focusable="false" class="xui-icon">
//         <use xlink:href="#xui-icon-search" role="presentation" />
//       </svg>
//     </div>
//   </div>
//   <input
//     class="xui-textinput--input xui-padding-horizontal-none"
//     type="search"
//     placeholder="Solid input with icons"
//     aria-label="Solid input with icons"/>
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//     <button type="button" class="xui-button xui-button-icon" title="Clear" aria-label="Clear">
//       <div class="xui-iconwrapper">
//         <svg focusable="false" class="xui-icon">
//           <use xlink:href="#xui-icon-clear" role="presentation"/>
//         </svg>
//       </div>
//     </button>
//   </div>
// </div>
//
// Styleguide: Building Blocks.Controls.TextInput.4




// Transparent text inputs
//
// Add `xui-input-borderless` and `xui-input-borderless-transparent` for inputs which only have a background on focus.
//
// Tips:
// Warning: Only use where it’s clear that it’s still a field and what it’s for
// Do: Include an icon and placeholder
// Do: Ensure the input has an aria-label
// Dont: Avoid using if validation is required
//
// exampleClass: ds-example-flush
//
// Markup:
// <!-- Inline styles for example purposes only -->
// <div class="xui-background-grey-6 xui-padding-left-xlarge" style="overflow: hidden;">
//  <div class="xui-row">
// 	<div class="xui-margin-top-xlarge xui-margin-bottom-small xui-column-6-of-12">
// 	 <div class="xui-textinput xui-textinput-borderless xui-textinput-borderless-transparent">
// 		<div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
// 			<div class="xui-iconwrapper">
//       <svg focusable="false" class="xui-icon">
// 	  			<use xlink:href="#xui-icon-search" role="presentation" />
// 	  		</svg>
// 		  </div>
//   </div>
// 		<input id="transparent-example" class="xui-textinput--input xui-padding-left-none" type="search" placeholder="Search all expenses" aria-label="Transparent input with icons" />
// 	 </div>
// 	</div>
//  </div>
//  <div class="xui-panel" style="height: 5rem; margin: 1px -20px -20px 1px"></div>
// </div>
//
// Styleguide: Building Blocks.Controls.TextInput.5


// Inverted inputs
//
// Both transparent and solid inputs can be used on dark backgrounds by adding `xui-inputwrapper-borderless-inverted`. Make sure your background color is dark enough!
//
// exampleClass: ds-example-flush
//
// Markup:
// <div class="xui-padding xui-background-grey-1">
//   <!-- Transparent + Inverted with icons-->
//   <div class="xui-textinput xui-textinput-borderless xui-textinput-borderless-transparent xui-textinput-borderless-inverted">
//     <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//       <div class="xui-iconwrapper">
//       <svg focusable="false" class="xui-icon">
//           <use xlink:href="#xui-icon-search" role="presentation" />
//         </svg>
//       </div>
//   </div>
//     <input
//       class="xui-textinput--input xui-padding-left-none"
//       type="search"
//       placeholder="Transparent inverted input with icons"
//       aria-label="Transparent inverted input with icons" />
//   </div>
//   <!-- Solid + Inverted -->
//   <div class="xui-margin-top">
//     <input
//       class="xui-textinput xui-textinput--input xui-textinput-borderless xui-textinput-borderless-solid xui-textinput-borderless-inverted"
//       type="text"
//       placeholder="Solid inverted input"
//       aria-label="Solid inverted input"/>
//   </div>
// </div>
//
// Styleguide: Building Blocks.Controls.TextInput.6


// Adding icons
//
//
// Styleguide: Building Blocks.Controls.TextInput.7

// Content prompts
//
// Tips:
// Do: Add to the left only
// Do: Use either XUI icon or text
// Do: Can be used instead of a label if content easily understood
// Warning: Ensure the input has an aria-label if not including a label
//
// exampleclass: ds-example-narrow
//
// Markup:
// <!-- Icon left -->
// <div class="xui-textinput xui-margin">
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//     <div class="xui-iconwrapper">
//       <svg focusable="false" class="xui-icon">
//         <use xlink:href="#xui-icon-url" role="presentation" />
//       </svg>
//     </div>
//   </div>
//   <input
//     class="xui-textinput--input xui-padding-left-none"
//     type="url"
//     placeholder="http://www.xero.com"
//     aria-label="URL"/>
// </div>
// <div class="xui-textinput xui-margin">
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//     <div class="xui-iconwrapper">
//       <svg focusable="false" class="xui-icon">
//         <use xlink:href="#xui-icon-search" role="presentation" />
//       </svg>
//     </div>
//   </div>
//   <input
//     class="xui-textinput--input xui-padding-left-none"
//     type="search"
//     placeholder="Search"
//     aria-label="Search"/>
// </div>
// <div class="xui-textinput xui-margin">
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-text">
//     €
//   </div>
//   <input
//     class="xui-textinput--input xui-padding-left-none"
//     type="text"
//     placeholder="0.00"
//     aria-label="Amount"/>
// </div>
// <div class="xui-textinput xui-margin">
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon xui-textinput--sideelement-has-background xui-textinput--sideelement-twitter">
//     <div class="xui-iconwrapper">
//       <svg focusable="false" class="xui-icon">
//          <use xlink:href="#xui-icon-social-twitter" role="presentation" />
//       </svg>
//     </div>
//   </div>
//   <input
//     class="xui-textinput--input xui-padding-left-none"
//     type="text"
//     placeholder="@username"
//     aria-label="Twitter username"/>
// </div>
//
// Styleguide: Building Blocks.Controls.TextInput.7.1

// Indicating actions
//
// Icons on the **right** are used to indicate actions. These can be either the main input behaviour (eg. a caret for a dropdown) or supplementary actions like clearing or picking a date.
//
// exampleclass: ds-example-narrow
//
// Markup:
// <div class="xui-textinput xui-margin">
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//     <div class="xui-iconwrapper">
//       <svg focusable="false" class="xui-icon">
//         <use xlink:href="#xui-icon-search" role="presentation" />
//       </svg>
//     </div>
//   </div>
//   <input
//     class="xui-textinput--input xui-padding-horizontal-none"
//     type="search"
//     placeholder="Search"
//     aria-label="Search"/>
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//     <button type="button" class="xui-button xui-button-icon" title="Clear" aria-label="Clear">
//       <div class="xui-iconwrapper">
//         <svg focusable="false" class="xui-icon">
//           <use xlink:href="#xui-icon-clear" role="presentation"/>
//         </svg>
//       </div>
//     </button>
//   </div>
// </div>
// <div class="xui-textinput xui-margin">
//   <input
//     class="xui-textinput--input xui-padding-right-none"
//     id="issue-date"
//     type="text"
//     placeholder="Try 'next month'"
//     aria-label="Issue date"/>
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-icon">
//     <button type="button" class="xui-button xui-button-icon" title="Select a date" aria-label="Select a date">
//       <div class="xui-iconwrapper">
//         <svg focusable="false" class="xui-icon">
//           <use xlink:href="#xui-icon-date-start" role="presentation"/>
//         </svg>
//       </div>
//     </button>
//   </div>
// </div>
// <div class="xui-textinput xui-margin">
//   <input
//     class="xui-textinput--input xui-padding-right-none"
//     id="issue-date"
//     type="text"
//     placeholder="Add something to submit"
//     aria-label="Issue date"/>
//   <div class="xui-textinput--sideelement xui-textinput--sideelement-button">
//     <button type="button" class="xui-button xui-button-main xui-button-small" title="Submit" aria-label="Submit">
//       Submit
//     </button>
//   </div>
// </div>
//
// Styleguide: Building Blocks.Controls.TextInput.7.2

// Class list
//
// Classes:
// xui-textinput: Should be applied to the top-level element, whether that is the input or the wrapping div
// xui-textinput-focus: Should be applied to the top-level element when the input is focused
// xui-textinput-is-disabled: Adds disabled styling
// xui-textinput--input: Applies input styling
// xui-textinput--sideelement: Adds side element wrapper styling
// xui-textinput--sideelement-icon: Adds padding for icon side elements
// xui-textinput--sideelement-text: Adds padding for text side elements
// xui-textinput--sideelement-avatar: Adds padding for avatar side elements
// xui-textinput--sideelement-button: Adds padding for button side elements
// xui-textinput--sideelement-has-background: Adds margins for icons with a background
// xui-textinput-borderless: Makes the input borderless
// xui-textinput-borderless-transparent: Makes the input borderless and transparent when unfocused
// xui-textinput-borderless-solid: Makes the input borderless with a light background
// xui-textinput-borderless-inverted: Adds borderless styling for using on an inverted background
//
// Styleguide: Building Blocks.Controls.TextInput.7.8

// Old implementation
//
// The old `xui-input` classes listed below are currently under review and may be removed in a future version of XUI.
//
// flag: under review
//
// Classes:
// xui-inputwrapper: Container for a text input with an icon
// xui-input--iconwrapper: Wrapper around the icon (use only if you want to apply a background color to the icon).
// xui-input--iconwrapper-left: Left-aligned icon wrapper
// xui-input--iconwrapper-right: Right-aligned icon wrapper
// xui-input--icon-left: Modifier for a left-aligned input icon
// xui-input--icon-right: Modifier for a right-aligned input icon
// xui-input--iconwrapper-facebook: Facebook color for icon wrapper
// xui-input--iconwrapper-twitter: Twitter background color for icon wrapper
// xui-input--iconwrapper-linkedin: LinkedIn background color for icon wrapper
//
// Styleguide: Building Blocks.Controls.TextInput.7.9
