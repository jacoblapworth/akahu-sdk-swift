// Range
//
// Teaser: Choose a number whose exact value is not important.
//
// Components: Range
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.gwx9ybn96p1v
//
// Introduction:
// XUI provides a custom range slider for consistency across platforms and visual alignment with other form elements.
//
// Styleguide: Components.Controls.Range

// Best practice
//
// Tips:
// Do: Use a range slider when adjusting a value on a finite spectrum
//
// Styleguide: Components.Controls.Range.1

// Anatomy
//
// To use the custom range slider, apply the following class.
//
// Classes:
// xui-rangeslider: Apply to the native input
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup:
// <input aria-label="Slider" class="xui-rangeslider xui-rangeslider-thumb-medium" type="range" value="0"/>
//
// Styleguide: Components.Controls.Range.2

// Size variants
//
// Range offers three size options that allow for greater control over visual hierarchy.
//
// Tips:
// Do: Always specify the size variant when using CSS only.
// Do: Use a smaller variant to reduce visual dominance of a range
// Warning: When using smaller variants, ensure the visual weight of the range still expresses its interactive nature within its context
//
// Definitions:
// Size variant:	**Height**: **Class**
// medium: 24px: <code>.xui-rangeslider-thumb-medium</code>
// small: 20px: <code>.xui-rangeslider-thumb-small</code>
// xsmall: 16px: <code>.xui-rangeslider-thumb-xsmall</code>
//
// ExampleClass: ds-example-transparent
//
// Markup:
// <label class='xui-u-flex xui-u-flex-align-center' for="range1" aria-label="medium sized range">
//    <input id="range1" class="xui-rangeslider xui-rangeslider xui-rangeslider-thumb-medium xui-margin-small" type="range" value="50%"/>
// </label>
// <label class='xui-u-flex xui-u-flex-align-center' for="range2" aria-label="small sized range">
//    <input id="range2" class="xui-rangeslider xui-rangeslider-thumb-small xui-margin-small" type="range" value="50%"/>
// </label>
// <label class='xui-u-flex xui-u-flex-align-center' for="range3" aria-label="xsmall sized range">
//    <input id="range3" class="xui-rangeslider xui-rangeslider-thumb-xsmall xui-margin-small" type="range" value="50%"/>
// </label>
//
// Styleguide: Components.Controls.Range.3

// Value
//
// To set a default value, add the `value` attribute.
// The `value` attribute accepts a number within the available range or a percentage, and must be expressed as a string.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup:
// <input aria-label="Slider" class="xui-rangeslider xui-rangeslider-thumb-medium" type="range" value="50%"/>
//
// Styleguide: Components.Controls.Range.4

// Steps
//
// To limit adjustments to increments only, simply alter the `step` attribute from the default value of `1`.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup:
// <input aria-label="Slider" class="xui-rangeslider xui-rangeslider-thumb-medium" type="range" step="25" value="50"/>
//
// Styleguide: Components.Controls.Range.5

// Limits
//
// To limit adjustments to a particular range, simply define your own `min` and `max` values.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup:
// <input aria-label="Slider" class="xui-rangeslider xui-rangeslider-thumb-medium" type="range" min="0" max="4" value="2"/>
//
// Styleguide: Components.Controls.Range.6

// Disabling
//
// To disable a range slider, simply apply the `disabled` attribute.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup:
// <input aria-label="Slider" class="xui-rangeslider xui-rangeslider-thumb-medium" type="range" value="50%" disabled/>
//
// Styleguide: Components.Controls.Range.7

// Labeling
//
// To add standard labels and validation to a range slider, use the following classes.
//
// Classes:
// xui-field-layout: Apply to wrapper to allow space for validation
// xui-text-label: Label styles
// xui-fieldlabel-layout: Apply to label for default layout options
// xui-validation: Validation styles
// xui-validation-layout: Apply to validation for default layout options
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup:
// <div class="xui-field-layout">
//   <label class="xui-text-label xui-fieldlabel-layout" for="range4">Label</label>
//   <input id="range4" class="xui-rangeslider xui-rangeslider-thumb-medium" type="range" value="50%"/>
//   <div class="xui-validation xui-validation-layout">Validation text</div>
// </div>
//
// Styleguide: Components.Controls.Range.8

// Invalid
//
// To indicate that a range slider is invalid, apply the following modifiers.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Classes:
// xui-rangeslider-is-invalid: Apply to native input
// xui-validation-is-invalid: Apply to validation
//
// Markup:
// <div class="xui-field-layout">
//   <label class="xui-text-label xui-fieldlabel-layout" for="range5">Label</label>
//   <input id="range5" class="xui-rangeslider xui-rangeslider-thumb-medium xui-rangeslider-is-invalid" type="range" value="50%"/>
//   <div class="xui-validation xui-validation-layout xui-validation-is-invalid">Invalid text</div>
// </div>
//
// Styleguide: Components.Controls.Range.9

// Layout
//
// Images or labels can be positioned either side of range sliders to provide additional context.
// To do this, XUI offers several helpful utility classes to aid in layout and alignment.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup:
// <label class='xui-u-flex xui-u-flex-align-center' for="range6" aria-label="Image size">
//    <svg class="xui-icon xui-icon-color-standard">
//      <use role="presentation" xlink:href="#xui-icon-image"/>
//    </svg>
//    <input id="range6" class="xui-rangeslider xui-rangeslider-thumb-medium xui-margin-horizontal-small" type="range" value="50%"/>
//    <svg class="xui-icon xui-icon-large xui-icon-color-standard">
//      <use role="presentation" xlink:href="#xui-icon-image"/>
//    </svg>
// </label>
//
// Styleguide: Components.Controls.Range.10
