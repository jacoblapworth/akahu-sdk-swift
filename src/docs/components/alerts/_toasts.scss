// Toast
//
// Components: Toast
//
// VisualExample: ./components/alerts/examples/toast/_toast-visual-example.html
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.exg1mc43btyk
//
// Teaser: Visual confirmation of user actions or system events.
//
// Introduction: Toasts are used to visually confirm a user action or system event.
//
// Styleguide: Components.Alerts.Toast

// When to use
//
// - To confirm user actions
// - To surface timely actions related to the current context
//
// Styleguide: Components.Alerts.Toast.1

// When not to use
//
// - Don’t use to highlight form errors – instead use [inline validation](./section-components-collectinginput-forms.html#components-collectinginput-forms-4-13)
//
// Styleguide: Components.Alerts.Toast.2

// Best practice
//
// Tips:
// Do: Display at the bottom left-hand corner of the page
// Do: Should relate to the action just performed
// Do: Keep content brief and to the point
//
// Styleguide: Components.Alerts.Toast.3

// Anatomy
//
// Layout of a toast is conditional on the presence of the close button, so this must come first in the markup.
//
// Tips:
// Do: Always include a description
// Do: Always include a close button
// Warning: Avoid long or complex descriptions
//
// To create a toast, apply the following classes:
//
// Classes:
// xui-toast: Container for a toast
// xui-toast-layout: Recommended layout modifier for a toast
// xui-toast--message: Apply to text content
// xui-toast--close: Apply to close button
//
// Markup: ./examples/toast/_toast.html
//
// Styleguide: Components.Alerts.Toast.4

// Layout
//
// To display toasts in the bottom-left corner of the viewport, wrap them in the following class:
//
// Classes:
// xui-toastwrapper: Apply to toast parent
//
// Styleguide: Components.Alerts.Toast.4.1

// Features of a toast
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.Alerts.Toast.5

// Actions
//
// Tips:
// Do: Actions that relate to the task at hand may be included
// Warning: Avoid more than two actions, excluding the close button
//
// Classes:
// xui-toast--actions: Layout container for actions
//
// Markup: ./examples/toast/_toast-actions.html
//
// Styleguide: Components.Alerts.Toast.5.1

// Wrapping
//
// Tips:
// Do: Toast messages wrap by default if absolutely required
// Warning: Avoid including long or complex descriptions
//
// Markup: ./examples/toast/_toast-wrapping.html
//
// Styleguide: Components.Alerts.Toast.5.2

// Sentiment
//
// Tips:
// Do: When using sentiment, use descriptive text like "% increase"
// Do: Use sentiment classes for system messages
// Do: Don't include a close button, persist the toast until the issue is resolved
// Warning: Avoid using sentiment classes other than on blocking issues
// Dont: When using sentiment, avoid vague text like "%"
//
// To add sentiment, apply the following modifiers. Use descriptive text as well as colour to convey information so it’s still meaningful to people who can’t discern colour.
//
// Classes:
// xui-toast-negative: Negative modifier
// xui-toast-positive: Positive modifier
//
// Markup: ./examples/toast/_toast-sentiment.html
//
// Styleguide: Components.Alerts.Toast.5.3

// Hiding and showing
//
// Classes:
// xui-toast-is-hidden: Hide a toast from view
//
// Currently, choosing when to show and hide a toast is left up to the consumer.
// However, a modifier is available to toggle this visibility on or off.
//
// In this way, wait until the page has loaded before showing a toast, and only reveal one toast at a time.
// Automatically hide toasts after a minimum of five seconds, accommodating for the length of the text content.
//
// However, if the user’s mouse is positioned above the element or it has gained DOM focus, pause the timeout.
// Alternatively, toasts should be hidden immediately after a separate action has been taken by the user.
// This could be clicking a separate button, or navigating to a separate part of the app.
//
// If another toast is required, hide the current one from view, before showing the new one.
//
// For more guidance on how to use toasts, refer to the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_alert_role).
//
// Styleguide: Components.Alerts.Toast.5.4

// Content guidelines
//
// Tips:
// Do: Be short and succinct
// Do: If the message is a single sentence, don’t put a full stop
// Do: Use contractions for a conversational tone (for example: didn’t, couldn’t, can’t)
// Dont: Don’t put full stops at the end of a link
//
// Styleguide: Components.Alerts.Toast.6

// Examples
//
// ExampleContentTable:
// Invoice sent | Your invoice INV-9087 has been sent to Fleur’s Flowers.
// Contact didn't save | Contact did not save.
//
// Styleguide: Components.Alerts.Toast.6.1

// Accessibility
//
// It is recommended to use the `alert` role when using toasts with negative sentiment.
// This role is limited to important or time-sensitive messages, so only use it when you require the users' immediate attention.
// In all other contexts use the `status` role.
// For further information on roles, refer to the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_alert_role).
//
// Styleguide: Components.Alerts.Toast.9

// Related links
//
// Related:
// * [Banner](./section-components-alerts-banner.html)
// * [Modal](./section-components-collectinginput-modals.html)
// * [Popover](./section-components-alerts-popover.html)
//
// Styleguide: Components.Alerts.Toast.99
