// Tooltip
//
// Teaser: To provide clarification for ambiguous actions or non-interactive elements.
//
// Introduction: Tooltips provide additional information in-line with page elements.
//
// Components: Tooltip
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.enb2yzwzbg4
//
// Styleguide: Components.Alerts.Tooltip

// Best practice
//
// Tips:
// Do: Use tooltips to display content that would live in an element's 'title' tag (icon-buttons, truncated items)
// Do: Use a dedicated icon-button to trigger supportive, non-essential tips
// Dont: Don't use tooltips for validation and error messaging
// Dont: Don't use content other than text inside a tooltip
// Warning: Styles directly affecting the trigger or its classes may need to be duplicated on the wrapping `.xui-tooltip` DOM element. For example, fixed/absolute positioning or some flexbox styling.
//
// Styleguide: Components.Alerts.Tooltip.1

// Anatomy
//
// To create a tooltip, use the following classes.
// Note that the trigger and tip need to be wrapped together for positioning purposes.
//
// Classes:
// xui-tooltip: Container class for both tooltip and trigger
// xui-tooltip-tipopen: Allows the tooltip to overflow its wrapper, when visible
// xui-positioningInline: Wrapper for the purpose of positioning the tooltip
// xui-tooltip--tip: The class for the tip itself
// xui-tooltip--tip-open: Sets the tooltip to be visible
//
// ExampleClass: ds-example-transparent
//
// Markup:
// <span class="xui-tooltip xui-tooltip-tipopen">
//   <button aria-label="Info" class="xui-button xui-button-icon xui-button-icon-small xui-button-fullwidth" tabindex="0" type="button">
//     <svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//     <div class="xui-touchtarget"></div>
//   </button>
//   <span class="xui-positioningInline" style="flex-direction: column; top: -30px;">
//     <span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-righttop">
//       Tooltip content goes here
//     </span>
//   </span>
// </span>
//
// Styleguide: Components.Alerts.Tooltip.2

// Positioning
//
// Then, add an additional `xui-positioningInline--content-*` modifier to specify the preferred position of the tooltip, relative to the trigger. Format is `sidealignment` for example, `topright` would attempt to place the tooltip above the trigger and aligned to the right edge of the trigger. Side options are `top`, `bottom`, `left`, and `right`, and alignment options are `left`, `right`, `top`, `bottom`, and `center`, as appropriate.
//
// Tips:
// Warning: If done with React, the tooltip will automatically reposition when there is not sufficient space for the tip to appear in the preferred location.
//
// ExampleClass: ds-example-transparent
//
// Classes:
// -topleft: Above the trigger, aligned to the left edge
// -rightcenter: To the right of the trigger, vertically centered
// -leftbottom: To the left of the trigger, aligned to the bottom edge
// -bottomcenter: Below the trigger, centered horizontally
//
// Markup:
// <span class="xui-tooltip xui-tooltip-tipopen">
// 	<button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
// 		<svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//     <div class="xui-touchtarget"></div>
// 	</button>
// 	<span class="xui-positioningInline" style="flex-direction: row; top: -50px;">
// 		<span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-topleft">
// 			top-left
// 		</span>
// 	</span>
// </span>
// <span class="xui-tooltip xui-tooltip-tipopen">
// 	<button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
// 		<svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//    <div class="xui-touchtarget"></div>
// 	</button>
// 	<span class="xui-positioningInline" style="flex-direction: column; top: -20px;">
// 		<span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-rightcenter">
// 			right-center
// 		</span>
// 	</span>
// </span>
// <br />
// <span class="xui-tooltip xui-tooltip-tipopen">
// 	<button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
// 		<svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//    <div class="xui-touchtarget"></div>
// 	</button>
// 	<span class="xui-positioningInline" style="flex-direction: column; top: auto;">
// 		<span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-leftbottom">
// 			left-bottom
// 		</span>
// 	</span>
// </span>
// <span class="xui-tooltip xui-tooltip-tipopen">
//   <button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
//     <svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//     <div class="xui-touchtarget"></div>
//   </button>
//   <span class="xui-positioningInline" style="flex-direction: row; top: 10px;">
//     <span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-bottomcenter">
//       bottomCenter
//     </span>
//   </span>
// </span>
//
// Styleguide: Components.Alerts.Tooltip.3
