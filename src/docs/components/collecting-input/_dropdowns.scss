//------------------------------------------------------------------------------
// Dropdowns landing page
//------------------------------------------------------------------------------

// Dropdown
//
// Flags: updatesComing
//
// Components: Dropdown
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.dszy23b5puhq
//
// Teaser:
// Used to reveal additional actions not present on the parent page.
//
// Introduction:
// A dropdown displays an expandable list of options or actions for a user to select.
//
// VisualExample: ./components/collecting-input/examples/dropdown/_dropdown-visual-example.html
//
// Styleguide: Components.CollectingInput.Dropdowns

// When to use
//
// * Simple options: use a dropdown to filter or sort content and save screen space (for example: forms, modals, popovers, or datepickers)
// * Complex options: use a [nested dropdown](#components-collectinginput-dropdowns-11-6) to group complex options into separate sections
//
// Styleguide: Components.CollectingInput.Dropdowns.7

// When not to use
//
// * Don’t use dropdowns when there are only two options – instead use a [radio](section-components-controls-radio.html)
//
// Styleguide: Components.CollectingInput.Dropdowns.8

// Best practice
//
// Tips:
// Do: Keep selection options as simple as possible
// Do: Make sure the dropdown is dismissed and actions are applied when a selection is made
// Do: If a user can select multiple items at once, display an ‘Apply’ button in a dropdown header to apply selection and dismiss dropdown
// Warning: Display ‘None’ as one of the options if needed
// Don't: Don't leave the dropdown field blank – choose a logical default placeholder or use Select + {label/heading} (for example: Select a bank account)
//
// Styleguide: Components.CollectingInput.Dropdowns.9

// Anatomy
//
// ExampleClass: ds-example-verticallycentered
//
// To create a dropdown, use the following classes with a [picklist component](section-components-displayingdata-picklist.html) inside.
// Other elements can be used within a dropdown, but may need additional spacing adjustments.
//
// Classes:
// xui-dropdown-layout: Dropdown container
// xui-dropdown--mask: Empty element to mask background page at narrow viewports
// xui-dropdown--body: Dropdown content
//
// Markup: ./examples/dropdown/_dropdown.html
//
// Styleguide: Components.CollectingInput.Dropdowns.10

// Features of a dropdown
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.CollectingInput.Dropdowns.11

// Showing and hiding
//
// Dropdowns are hidden by default.
// To toggle between states, add the following modifiers to `xui-dropdown-layout`.
//
// Classes:
// xui-dropdown-is-open: Makes dropdown visible
// xui-dropdown-is-opening: Animates dropdown into view at narrow viewports
// xui-dropdown-is-closing: Animates dropdown out of view at narrow viewports
//
// Styleguide: Components.CollectingInput.Dropdowns.11.1

// Width
//
// By default, dropdowns have a minimum width and increase in width to match the content.
// At narrow viewports, they fill the viewport width.
//
// Definitions:
// Default: 140px min-width: No class needed
//
// Styleguide: Components.CollectingInput.Dropdowns.11.2

// Max width
//
// Apply the following modifiers to `xui-dropdown-layout` to set a maximum width.
//
// Tips:
// Do: Use max-width classes so content wraps or truncates
// Warning: Avoid applying max-width classes to search results as this causes variable widths between queries
//
// Definitions:
// xsmall: 100px max-width: `xui-dropdown-xsmall`
// small: 200px max-width: `xui-dropdown-small`
// medium: 300px max-width: `xui-dropdown-medium`
// large: 400px max-width: `xui-dropdown-large`
//
// Styleguide: Components.CollectingInput.Dropdowns.11.2.1

// Fixed width
//
// Apply the following modifiers to `xui-dropdown-layout` to set a fixed width.
//
// Tips:
// Do: Apply fixed width classes to search results as this provides constant widths between queries
//
// Definitions:
// Fixed xsmall: 100px width: `xui-dropdown-fixed-xsmall`
// Fixed small: 200px width: `xui-dropdown-fixed-small`
// Fixed medium: 300px width: `xui-dropdown-fixed-medium`
// Fixed large: 400px width: `xui-dropdown-fixed-large`
//
// Styleguide: Components.CollectingInput.Dropdowns.11.2.2

// Auto width
//
// ExampleClass: ds-example-verticallycentered
//
// Flags: reactOnly
//
// If using React, an additional property is available that detects the width of the trigger and applies this to the dropdown.
//
// Styleguide: Components.CollectingInput.Dropdowns.11.2.3

// Positioning
//
// By default, dropdowns are positioned to the left and just below their trigger.
//
// Styleguide: Components.CollectingInput.Dropdowns.11.3

// Custom positioning
//
// To force a dropdown into a specific position relative to its trigger, add one of the following modifiers to `xui-dropdown-layout`.
//
// Tips:
// Do: Position dropdowns so as much content is visible as possible
// Warning: Avoid changing positions once dropdowns are open
//
// Classes:
// xui-dropdown-positionright: Force right
// xui-dropdown-positionleft: Force left
// xui-dropdown-positionabove: Force up
// xui-dropdown-positionunder: Force below
//
// Styleguide: Components.CollectingInput.Dropdowns.11.3.1

// Auto positioning
//
// Flags: reactOnly
//
// If using React, positioning is handled automatically, and dropdowns are placed depending on where the most space is available when triggered.
//
// Styleguide: Components.CollectingInput.Dropdowns.11.3.2

// Height
//
// By default, dropdown height matches its content.
// However, at narrow viewports, a max-height is applied so a section of the mask is always visible.
// Content scrolls internally if it exceeds this height.
//
// Definitions:
// Default: 80vh max-height: No class needed
//
// Styleguide: Components.CollectingInput.Dropdowns.11.4

// Full height
//
// To force dropdowns to occupy the entire screen height at narrow viewports, apply the modifier `xui-dropdown-fullheight`.
//
// Tips:
// Do: Use full height dropdowns when a search field is present to allow room for the software keyboard
// Warning: Always add a header to full height dropdowns so they are dismissible without selecting an option
//
// Classes:
// xui-dropdown-fullheight: Apply to dropdown
//
// Styleguide: Components.CollectingInput.Dropdowns.11.4.1

// Max height
//
// Flags: reactOnly
//
// If using the [`XUIDropdown`](./react/#dropdown) React component, a `maxHeight` property can be added to define a custom max-height on the dropdown. Content scrolls internally if it exceeds this height.
//
// Styleguide: Components.CollectingInput.Dropdowns.11.4.2

// Auto height
//
// Flags: reactOnly
//
// If using the [`XUIDropdown`](./react/#dropdown) React component, dropdown height is automatically calculated based on the remaining space above or below the trigger.
// Content scrolls internally if it exceeds this height.
//
// Styleguide: Components.CollectingInput.Dropdowns.11.4.3

// Headers and footers
//
// Sometimes, a header or footer is needed to provide context or to show supplementary actions.
// To do this, use the following classes.
//
// Classes:
// xui-dropdown--header: Header container
// xui-dropdown--header-container: Header content
// xui-dropdown--header-leftcontent: Header left content
// xui-dropdown--header-rightcontent: Header right content
// xui-dropdown--scrollable-content: Picklist container
// xui-dropdown--footer: Footer container
//
// Markup: ./examples/dropdown/_dropdown-header-and-footer.html
//
// Styleguide: Components.CollectingInput.Dropdowns.11.5

// Nested dropdowns
//
// Use nested dropdowns to group complex options into separate sections.
//
// Tips:
// Do: Use nested dropdowns to navigate between categories and multi-step selections
// Do: Include a back button on children so selections can be applied across multiple categories at once
// Do: Nest a datepicker to show a custom date or date-range option
// Warning: Always include a header at narrow viewports so a dropdown can be dismissed
//
// Styleguide: Components.CollectingInput.Dropdowns.11.6

// Anatomy
//
// To create a nested dropdown, use the following classes.
//
// Classes:
// xui-dropdown--panel: Container for each section
// xui-dropdown-nested-is-hidden: Add to toggle section visibility
// xui-dropdown-fullheight: Apply to dropdown to enable consistent header position
// xui-dropdown-hide-small-up: Apply to a dropdown sub-element such as the header or actions to hide above 600px
//
// Styleguide: Components.CollectingInput.Dropdowns.11.6.1

// Parent
//
// Markup: ./examples/dropdown/_dropdown-nested-parent.html
//
// Styleguide: Components.CollectingInput.Dropdowns.11.6.2

// Child
//
// Markup: ./examples/dropdown/_dropdown-nested-child.html
//
// Styleguide: Components.CollectingInput.Dropdowns.11.6.3

// Accessibility
//
// Unless the trigger itself is an input, a dropdown shouldn’t open when its trigger is in focus.
// The enter and arrow keys should trigger visibility and shift focus to the dropdown itself, and the escape key closes it.
// Tapping anywhere on the screen (or the mask at narrow viewports) should also dismiss the dropdown.
// Depending on the type of dropdown, selecting an item may or may not dismiss it, as sometimes users can select more than one item from multi-step picklists.
// Refer to the [React implementation](./react/#dropdown) when in doubt.
//
// Styleguide: Components.CollectingInput.Dropdowns.30

// Content guidelines
//
// Tips:
// Do: Use sentence case (capitalise first word and proper nouns)
// Don't: Avoid using unnecessary words such as a, an, the
//
// Styleguide: Components.CollectingInput.Dropdowns.31

// TopDescription: Make sure dropdown items are clear and predictable so customers understand what happens when they make a selection.
//
// ExampleContentTable:
// Copy to draft invoice | Copy to another document
//
// Styleguide: Components.CollectingInput.Dropdowns.31.1

// TopDescription: Lead with a verb that encourages action.
//
// ExampleContentTable:
// Edit details | Purchase order changes
//
// Styleguide: Components.CollectingInput.Dropdowns.31.2

// TopDescription: Use a verb then a noun for greater clarity, unless the action is clear with a single verb.
//
// ExampleContentTable:
// Delete contact | Delete
//
// Styleguide: Components.CollectingInput.Dropdowns.31.3

// TopDescription: Make sure items are in logical order (alphabetical, chronological, order of importance, etc.).
//
// ExampleContentTable:
// Today | End of last month
// End of last month | Today
// End of last quarter | End of last financial year
// End of last financial year | End of last quarter
//
// Styleguide: Components.CollectingInput.Dropdowns.31.4

// Related components
//
// Related:
// * [Autocompleter](./section-components-collectinginput-autocompleter.html)
// * [Datepicker](./section-components-collectinginput-datepicker.html)
// * [Picklist](./section-components-displayingdata-picklist.html)
// * [Select](./section-components-controls-select.html)
// * [Text input](./section-components-controls-textinput.html)
//
// Styleguide: Components.CollectingInput.Dropdowns.99
