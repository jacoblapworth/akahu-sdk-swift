// Validation messages
//
// Validation messages let users know how to format information if a field has been filled out incorrectly.
//
// Errors are very frustrating for a user, so when a validation message is needed, make sure it clearly suggests the user’s next step.
//
// Styleguide: Components.CollectingInput.Forms.4.6

// Validation messages for fields
//
// Add `xui-textinput-is-invalid`, or similar `-is-invalid` classname to controls to display their error state.
// * For text input groups, if the problem is with a group, as a whole, add the class to all nested inputs
// * For switches, adding `xui-switch-group-is-invalid` to the group wrapper will set the validity state for all children and messages
// * For checkboxes and radios, adding `xui-styledcheckboxradio-group-is-invalid` serves the same purpose
//
// Always include a colour change, descriptive message, and an icon to show where the error is. This way it’s still meaningful to people who can’t recognise colour.
//
// **Position**
// * Position inline validation messages underneath the input
// * If there’s no space below the input because it’s in a group, place it at the bottom of the group
// * If there’s no space below the input, place it at the top of the input in a banner
//
//
// Tips:
// Do: Show on blur
// Do: Include the name of the field in the message
// Do: Add an explanation or example of what should be entered when formatting requirements aren't met
// Do: Add the ‘status’ ARIA role to inline validation messages
// Warning: Try to be flexible with the accepted formats rather than giving unnecessary errors
// Dont: Don't mark fields as invalid without a validation error message
// Dont: Don't use vague messages that don't suggest a next step
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup: ./examples/form/_form-validation.html
//
// Styleguide: Components.CollectingInput.Forms.4.6.1

// Validation messages for modals
//
// Identifying errors when complex, non-linear documents are submitted can sometimes be tricky. Use a small modal dialog to provide feedback and allow users to enter the information.
//
// exampleClass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/form/_form-validation-modals.html
//
// Styleguide: Components.CollectingInput.Forms.4.6.2

// Other validation options
//
// Tips:
// Do: Add an alert ARIA role if a user submits a form with validation error messages
// Warning: Avoid listing out multiple errors in a banner that users must then search for
// Warning: Only disable the submission button if there are a small number of fields and it’s clear to users what’s required of them
//
// Styleguide: Components.CollectingInput.Forms.4.6.3

// When to validate
//
// Tips:
// Do: Validate when the user's focus leaves a field in an invalid state (for example&#58; `onblur`)
// Do: Validate whether required fields are completed on submission
// Dont: Don't validate fields on key press
//
// Styleguide: Components.CollectingInput.Forms.4.6.4

// Validation content
//
// Tips:
// Do: Explain the action the user needs to take to resolve the issue
// Do: Be specific – general errors are not helpful
// Do: Be short and concise – no more than 1 sentence
// Do: Use passive voice so users don’t feel like they’re being blamed for the error
// Warning: Avoid technical jargon
// Warning: Avoid saying 'sorry' or 'please', unless the problem is serious or very frustrating
//
// Styleguide: Components.CollectingInput.Forms.4.6.5

// Examples of validation content
//
// ExampleContentTable:
// Enter your account name| You didn’t enter an account name
// Enter a valid email address| Email address is invalid
// Enter a 10-digit password| Password is invalid
//
// Styleguide: Components.CollectingInput.Forms.4.6.6

// Optional/required fields
//
// Visual indicators for optional and required fields are currently being explored. In the meantime, remember to:
// * Only ask for information that’s required or relevant to improving the user’s experience
// * Always consider why you’re requesting certain information from the user and how you will use it
//
// Styleguide: Components.CollectingInput.Forms.4.7

// Buttons
//
// See guidance for writing [buttons](./section-components-controls-button.html#components-controls-button-7)
//
// Styleguide: Components.CollectingInput.Forms.4.8
