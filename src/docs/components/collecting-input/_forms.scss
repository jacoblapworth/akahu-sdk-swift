// Form overview
//
// Teaser: A form allows users to provide information so they can complete a task.
//
// Introduction: A form allows users to provide information so they can complete a task.
//
// VisualExample: ./components/collecting-input/examples/form/_form-visual-example.html
//
// Styleguide: Components.CollectingInput.Forms

// Form layout
//
// Styleguide: Components.CollectingInput.Forms.3

// Stacked forms
//
// Standard linear forms in XUI are `max-width: 400px` and centre within their container.
// Add `xui-form-layout` to the `<form>` wrapping all headings and fields.
//
// Each label, \`form field\`, hint and validation message, are wrapped in `xui-field-layout` to provide consistent spacing.
//
// Hint and validation messages are added under fields in a `xui-validation-layout` wrapper.
// This will only result in layout shifts if the validation expands over multiple lines.
//
// exampleclass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/form/_form-stacked.html
//
// Styleguide: Components.CollectingInput.Forms.3.1

// Inline forms
//
// Small interactions can be delivered with inline forms. Inline forms will stack at the smallest breakpoint with `max-width: 400px;` by default.
//
// Markup: ./examples/form/_form-inline.html
//
// Styleguide: Components.CollectingInput.Forms.3.2

// Grouping within forms
//
// flags: updated
//
// In a few situations, multiple fields can be grouped under a single label.
// This is likely when one field (probably a select) modifies another, or the combination of both fields is closely connected and is a common convention. To build more complex groups of controls, ensure that labels, validation/hint messages, and controls are all sibling elements.
// See the [React documentation](./react/#control-group) for how to use `XUIControlGroup`.
//
// Markup: ./examples/form/_form-horizontal.html
//
// Styleguide: Components.CollectingInput.Forms.3.3

// Accessibility
//
// Make sure all form elements have labels so the purpose of each element is clear.
// Use the `<label>` tag or add `aria-label` or `aria-labelledby` attributes to each element.
//
// If there are instructions or context information (for example: hint message) associated with the form element, `aria-describedby` should be used to ensure itâ€™s not missed by the assistive technology.
//
// Styleguide: Components.CollectingInput.Forms.9

// Class list
//
// Classes:
// xui-field-layout: Recommended layout for a form field (for example: label and input)
// xui-fieldlabel-layout: Recommended layout for a form label
// xui-form-inline: Recommended layout for an inline form
// xui-form-layout: Recommended layout for a stacked form
// xui-validation: Used to style text below inputs (to clarify format or provide supporting info)
// xui-validation-layout: Recommended layout for text below inputs
// xui-validation-is-invalid: Modifier for text below inputs that are in an error state
// xui-controlgroup: Container for the inputs you wish to join.
// xui-controlgroup-horizontal: Modifier to indicate horizontally grouped inputs. It is recommended that you manage the widths of controls with CSS grid styles.
// xui-controlgroup-vertical: Modifier to indicate vertically grouped inputs
// xui-text-label: A label describing grouped controls, usually checkboxes, radios, or switches.
// xui-switch-group: Container for multiple switch controls. Sibling of `xui-text-label` and `xui-validation`.
// xui-styledcheckboxradio-group: Container for multiple checkbox or radio controls. Sibling of `xui-text-label` and `xui-validation`.
// xui-controlgroup-is-invalid: Apply to a checkbox, radio, or switch group to set validity styles
//
// Styleguide: Components.CollectingInput.Forms.50

// Related components
//
// Related:
// * [Controls](./section-components-controls.html)
// * [Dropdown](./section-components-collectinginput-dropdowns.html)
// * [Modal](./section-components-collectinginput-modals.html)
// * [Text input](./section-components-controls-textinput.html)
// * [Tooltip](./section-components-alerts-tooltip.html)
//
// Styleguide: Components.CollectingInput.Forms.99
