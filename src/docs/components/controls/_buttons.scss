// Button
//
// flags: updated
//
// Components: Button
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.n0x4g065o3eg
//
// Teaser: Use buttons for the most important actions on a page.
//
// Introduction: Use buttons for the most important actions on a page.
//
// FigmaComponentFrameKey: 1425%3A13435
//
// VisualExample: ./components/controls/examples/button/_button-visual-example.html
//
// Styleguide: Components.Controls.Button

// When to use
//
// - To highlight an action a user needs to take to continue or complete a task
//
// Styleguide: Components.Controls.Button.1

// When not to use
//
// - Don’t use for elements that have an href – instead use a [link](./section-fundamentals-typography.html#fundamentals-typography-40)
//
// Styleguide: Components.Controls.Button.2

// Best practice
//
// Tips:
// Do: In most circumstances, use the 'main' and 'standard' button variants
// Do: Make sure the button text clearly describes what will happen when a user selects the button
// Do: Use the 'small' button variant in toolbars
// Do: Use anchor tags when an href is present – use button tags in all other circumstances
// Warning: Avoid using non-standard controls like divs for buttons
// Warning: Use the green 'create' and red 'negative' colour variants sparingly
// Dont: Avoid using unstyled buttons
// Info: For guidance on where to place buttons (or actions) on a page, see [Page-level actions guidance](./section-patterns-page-level-actions.html)
//
// Styleguide: Components.Controls.Button.3

// Features of a button
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.Controls.Button.4

// Reset default styling
//
// First, apply the base button class to clear buttons of their default user agent styling.
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Classes:
// xui-button: Base button class
//
// Markup: ./examples/button/_button-unstyled.html
//
// Styleguide: Components.Controls.Button.4.1

// Style variants
//
// Add a `xui-button-*` modifier to specify which kind of button you require.
//
// Aim to [use 1 primary action on each page](./section-patterns-page-level-actions.html#patterns-page-level-actions-1). The primary action can be either a:
// - blue ‘main’ button (this is the most common)
// - green ‘create’ button
// - red ‘negative’ button
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Classes:
// -main: Primary actions
// -create: Primary actions that create new objects
// -negative: Primary actions that are destructive actions
// -standard: Secondary actions
//
// Markup: ./examples/button/_button-variants.html
//
// Styleguide: Components.Controls.Button.4.2

// Borderless
//
// Borderless `xui-button-*` modifiers are also available for actions that require less visual emphasis.
//
// Classes:
// -borderless-main: Primary or secondary actions
// -borderless-create: Actions that create new objects
// -borderless-negative: Destructive actions
// -borderless-muted: Secondary or tertiary actions, muted text colour
// -borderless-standard: Secondary or tertiary actions, standard text colour
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/button/_button-variants-borderless.html
//
// Styleguide: Components.Controls.Button.4.2.1

// Using colour
//
// Use descriptive button text as well as colour to convey information so it’s still meaningful to people who can’t discern colour.
//
// For example, don’t depend on the colour red to communicate that an action is destructive – explain the action in the button text as well.
//
// Styleguide: Components.Controls.Button.4.2.2

// Full-width buttons
//
// To force a button to occupy the entire width of its parent at all times, apply the following utility class:
//
// Classes:
// xui-button-fullwidth: 100% width
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/button/_button-full-width.html
//
// Styleguide: Components.Controls.Button.4.3

// Full-width for mobile
//
// To force a button to occupy the entire width of its parent at narrow viewports, apply the following modifier:
//
// Classes:
// xui-button-fullwidth-layout: 100% width below 600px ($xui-breakpoint-small-down)
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/button/_button-full-width-mobile.html
//
// Styleguide: Components.Controls.Button.4.3.1

// Icon buttons
//
// Icons that are universally understood are rare. Only use icon buttons with no text if the meaning of the icon is universally understood. If you’re not certain the meaning of the icon is clear on its own, use a [button with text and an icon](#components-controls-button-9).
//
// Sometimes, icon buttons are used for quick actions that are common and performed frequently.
// To create an icon button, apply the following class to the button, and insert the desired [icon](./section-fundamentals-icons.html) and the [touch target element](section-getting-started-responsive.html#getting-started-responsive-3) inside.
//
// Tips:
// Do: Use icons from XUI icon set
// Do: When nesting icon-buttons, use the same size variant as the parent
// Do: You can use icon buttons to optimise screen real estate on small screen sizes – make sure the button’s touch target is large enough
// Do: Always add a tooltip component that describes what the button does – see how to write [tooltips for icon buttons](./section-components-alerts-tooltip.html#components-alerts-tooltip-6)
// Do: Always add a matching aria label that describes what the button does, for people using screen readers
// Warning: If displaying multiple icon buttons, ensure there's adequate space between them so that touch targets don't overlap
//
// Classes:
// xui-button-icon: Apply to button
// xui-touchtarget: Apply to an empty element inside the icon button
//
// Markup: ./examples/button/_button-icon.html
//
// Styleguide: Components.Controls.Button.4.4

// Icon button size variants
//
// Icon buttons require their own classes to be applied to use size variants. Follow the same [size variants as regular buttons](./section-components-controls-button.html#components-controls-button-16)
//
//**Note:** Icon buttons nested inside controls should use the same size variant as the control.
//
// Definitions:
// Size variant: **Height**: **Class**
// medium: 40px: `xui-button-icon-medium`
// small: 32px: `xui-button-icon-small`
// xsmall: 24px: `xui-button-icon-xsmall`
//
// Markup: ./examples/button/_button-icon-sizes.html
//
// Styleguide: Components.Controls.Button.4.4.1

// Inverted buttons
//
// To provide adequate contrast for use on darker backgrounds, inverted styles are also available for all button variants.
//
// Classes:
// xui-button-inverted: Apply to buttons to invert focus ring
// xui-button-borderless-inverted: Apply to buttons to create an inverted borderless variant
// xui-button-icon-inverted: Apply to icon buttons to create an inverted variant
//
// ExampleClass: ds-example-dark ds-example-verticallycentered
//
// Markup: ./examples/button/_button-inverted.html
//
// Styleguide: Components.Controls.Button.4.5

// Disabled buttons
//
// To disable a button, apply the following modifier.
// Make sure you also add the `disabled` attribute to prevent keyboard focus.
//
// ExampleClass: ds-example-verticallycentered
//
// Classes:
// xui-button-is-disabled: Apply to any disabled button
//
// Markup: ./examples/button/_button-disabled.html
//
// Styleguide: Components.Controls.Button.4.6

// Icons in buttons
//
// Icons help users identify meaning quickly and can be used inside buttons
// to help provide context or support to the button text.
//
// When developing icons in buttons, you can use the provided classes.
// Remember that icons must be placed in an [icon wrapper](./section-fundamentals-icons.html#fundamentals-icons-3)
// to ensure the correct layout.
//
// Tips:
// Do: Use icons to support button text so the action is clearer or faster to understand
// Do: Icons on the left represent an entity, action or direction (for example, a document icon means that a document can be uploaded; a filter icon reinforces the meaning of a **Filter** button)
// Do: Icons on the right represent an interaction  (for example, a caret indicates a dropdown; an external window icon indicates that a link will open in a new tab or window)
// Dont: Don’t display an icon on both the left and right side of the button text
//
// Classes:
// xui-button-has-icon: Apply to button to ensure the content has the correct layout
// xui-button--lefticon: Apply to icon wrapper to place the icon to the left of the button text
// xui-button--righticon: Apply to icon wrapper to place the icon to the right of the button text
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/button/_button-content-icons.html
//
// Styleguide: Components.Controls.Button.4.7

// Dropdowns
//
// To create a button that triggers a dropdown, include a caret icon to indicate additional options are available behind the button.
// To do this, include the SVG alongside the button and apply the following modifier to provide the correct layout.
//
// Classes:
// xui-button-has-icon: Apply to button to ensure the content has the correct layout
// xui-button--caret: Apply to icon to ensure the caret has the correct layout
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/button/_button-dropdown-trigger.html
//
// Styleguide: Components.Controls.Button.4.8

// Split buttons
//
// Flags: updated updatesComing
//
// To separate an action from similar but secondary actions that appear in a dropdown, use a split button. Use a
// button group, but for the last child, insert a caret icon instead of text.
//
// To do this, include the SVG in an [icon wrapper](./section-fundamentals-icons.html#fundamentals-icons-3).
//
// As with any icon button, add an aria-label for accessibility. The following modifiers must also be applied to provide the correct layout.
//
// Classes:
// xui-button-split: Apply to dropdown trigger button
// xui-button-caret: Apply to icon
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup: ./examples/button/_button-split.html
//
// Styleguide: Components.Controls.Button.4.9

// Grouped buttons
//
// To group a series of similar actions in a more compact space, apply the following classes:
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Classes:
// xui-buttongroup: Container for a button group
// xui-button-grouped: Modifier for a grouped button
//
// Markup: ./examples/button/_button-grouped.html
//
// Styleguide: Components.Controls.Button.4.10

// Layout
//
// To position buttons correctly inside a form, modal or page, apply the following classes:
//
// Classes:
// xui-actions: Apply to button container to set the correct layout
// xui-actions-layout: Apply to button container to add internal spacing and stack buttons below 600px ($xui-breakpoint-small-down)
// xui-actions--primary: Apply to primary button to set the correct order
// xui-actions--secondary: Apply to secondary button to set the correct order
//
// Markup: ./examples/button/_button-layout.html
//
// Styleguide: Components.Controls.Button.4.11

// Linear flow
//
// For a linear flow, apply the following modifier to push buttons to opposite sides of the container.
//
// Classes:
// xui-actions-linear: Apply to button container to push buttons apart and stack below 600px ($xui-breakpoint-small-down)
//
// Markup: ./examples/button/_button-linear.html
//
// Styleguide: Components.Controls.Button.4.11.1

// Size variants
//
// Buttons have a range of size options that allow for greater control over visual hierarchy and [interface density](./section-fundamentals-spacing.html#fundamentals-spacing-2)
//
// Tips:
// Do: Use 'medium' variant by default
// Do: Use 'small' and 'xsmall' variants when nested inside other elements (except for icon-button which should use the same size variant as its parent)
// Warning: Be cautious when using 'xsmall' variant, as it has reduced legibility and touch target
// Dont: Don’t mix and match size variants inline with each other
//
// Definitions:
// Size variant: **Height**: **Class**
// medium: 40px: `xui-button-medium`
// small: 32px: `xui-button-small`
// xsmall: 24px: `xui-button-xsmall`
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup: ./examples/button/_button-sizes.html
//
// Styleguide: Components.Controls.Button.5

// Accessibility
//
// Buttons can be rendered using either the `<button>` or `<a>` element.
// We recommend using the `<button>` element wherever possible, with the exception of links that need to appear like buttons.
//
// If you have no `href` attribute on your `<a>` element, or are using `href="javascript:void(0)"` or `href="#"`, then use a `<button>` instead.
//
// If you must create a button using the `<a>` element, take care to add the appropriate aria attributes and keyboard controls.
// For example, buttons can be activated by either the spacebar or the enter key.
// In the case of the `<a>` tag, the spacebar doesn't activate the link and you must implement this behaviour yourself.
//
// For instructions on making icon buttons accessible, see [icon buttons](./section-components-controls-button.html#components-controls-button-6).
//
// Styleguide: Components.Controls.Button.6

// Content guidelines
//
// Tips:
// Do: Be short and succinct
// Do: Avoid using unnecessary words such as a, an, the (e.g: use **Add task** not **Add a task**)
// Do: Use sentence case (capitalise first word and proper nouns)
//
//  Styleguide: Components.Controls.Button.7

// Use the format: verb + noun
//
// Do this unless the context is very clear and the [button is a commonly used](#components-controls-button-7-3)
//
// ExampleContentTable:
// View PDF | View
// Post pay run | Post
// Add client | New client
//
// Styleguide: Components.Controls.Button.7.1

// Clearly explain what will happen next
//
// Be specific about what the action is.
//
// ExampleContentTable:
// Submit to ATO | Submit form
// Connect your bank | Get started
// Start trial | Let’s go!
// Approve leave | Accept
//
// Styleguide: Components.Controls.Button.7.2

// Commonly used buttons
//
// For commonly used buttons, use consistent terms that users are familiar with, so they’re easy to scan.
//
// ExampleContentTable:
// Save | Save invoice
// Cancel | Abort
// OK | Okay
// Back  | Previous
// Next | Next step
//
// Styleguide: Components.Controls.Button.7.3

// Using ‘you’ or ‘your’
//
// If you need to use a pronoun on a button, use ‘you’ or ‘your’ (not ‘me’ or ‘my’). Usually the pronoun can be removed.
//
// ExampleContentTable:
// See your spending | See my spending
// See spending | See my spending
//
// Styleguide: Components.Controls.Button.7.4

// Class list
//
// Classes:
// xui-button: Style for a button
// xui-button-icon: Modifier for an icon button
// xui-button-standard: Modifier for a standard button
// xui-button-main: Modifier for a main button
// xui-button-create: Modifier for a button that creates new objects
// xui-button-negative: Modifier for a button with negative consequences
// xui-button-borderless-standard: Modifier for a standard borderless button
// xui-button-borderless-main: Modifier for a main borderless button
// xui-button-borderless-muted: Modifier for a more subtle borderless button
// xui-button-borderless-create: Modifier for a borderless button that creates new objects
// xui-button-borderless-negative: Modifier for a borderless button with negative consequences
// xui-button-inverted: Apply to buttons to invert focus ring
// xui-button-borderless-inverted: Apply to buttons to create an inverted borderless variant
// xui-button-icon-inverted: Apply to icon buttons to create an inverted variant
// xui-button-is-disabled: Modifier for a disabled button
// xui-button-has-icon: Modifier for a button that contains an icon
// xui-button-split: Modifier for a split button (eg button and dropdown)
// xui-button--lefticon: Subcomponent for an icon to be placed to the left of the button content
// xui-button--righticon: Subcomponent for an icon to be placed to the right of the button content
// xui-button--caret: Subcomponent for a caret button
// xui-button-fullwidth-layout: Modifier for a full-width button using $xui-breakpoint-small-down
// xui-buttongroup: Container for a group of buttons
// xui-button-grouped: Modifier for a grouped button
// xui-actions: Container to be used when creating layouts with a primary and secondary button
// xui-actions-layout: Provides spacing between primary and secondary buttons as well as a mobile responsive layout
// xui-actions-linear: Places primary and secondary buttons at opposite sides of the container
// xui-actions--primary: Subcomponent to be applied directly to the primary button
// xui-actions--secondary: Subcomponent to be applied directly to the secondary button
// xui-button--loader: Modifier for a loader inside a button. Use with "xui-button-is-disabled".
// xui-button-loaderminwidth: Modifier to add a button specific min-width of 75px. Useful for small buttons that you expect to be loaders as well
// xui-button-medium: Modifier for a medium button
// xui-button-small: Modifier for a small button
// xui-button-xsmall: Modifier for a xsmall button
// xui-button-icon-small: Modifier for a small icon button
// xui-button-icon-xsmall: Modifier for a xsmall icon button
// xui-touchtarget: Invisible touch target element inside an icon button
//
// Styleguide: Components.Controls.Button.8

// Related components
//
// Related:
// * [Dropdown](./section-components-collectinginput-dropdowns.html)
// * [Icons](./section-fundamentals-icons.html)
// * [Loader](./section-components-identifiers-loader.html)
// * [Page-level actions](./section-patterns-page-level-actions.html)
// * [Switch](./section-components-controls-switch.html)
// * [Toggle](./section-components-controls-toggle.html)
// * [Tooltip](./section-components-alerts-tooltip.html)
//
// Styleguide: Components.Controls.Button.99
