// Radio
//
// flags: updated
//
// Teaser: Choose a single item from a range of options
//
// Introduction:
// A radio allows a user to make a single choice from a group of options.
//
// Components: Radio
//
// VisualExample: ./components/controls/examples/radio/_radio-visual-example.html
//
// FigmaComponentFrameKey: 1425%3A13437
//
// Styleguide: Components.Controls.Radio

//When to use
//
// - For when only 1 option can be selected from a group or list
// - For when an explicit choice is required
//
// Styleguide: Components.Controls.Radio.1

// When not to use
//
// - Don’t use if more than 1 option can be chosen from a group or list – instead use a [checkbox](./section-components-controls-checkbox.html)
//
// Styleguide: Components.Controls.Radio.2

// Best practice
//
// Tips:
// Do: The selected item should be more visually prominent than unselected items
// Do: Always include 2 or more options
// Do: Options should be clearly different so the choice between them is obvious
// Do: List options in a logical order
// Warning: Consider giving the user a way to clear a selection
// Warning: Consider providing a ‘none’ option
//
// Styleguide: Components.Controls.Radio.3

// Anatomy
//
// Radios benefit from the built-in functionality of native inputs, but extend their style to match our visual language.
// To create one, use the following classes and insert the [touch target element](section-getting-started-responsive.html#getting-started-responsive-3) inside the radio button.
//
// Tips:
// Warning: If displaying multiple radio buttons, ensure there is adequate space between so that touch targets don't overlap
//
// Classes:
// xui-styledcheckboxradio: Wrapper for the radio button
// xui-styledcheckboxradio--input: Native input, visually hidden
// xui-styledcheckboxradio--radio: Styled control
// xui-styledcheckboxradio--label: Text label
// xui-touchtarget: Apply to an empty element inside the radio button
//
// Markup: ./examples/radio/_radio.html
//
// Styleguide: Components.Controls.Radio.4

// Features of a radio
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.Controls.Radio.5

// Disabled
//
// Tips:
// Do: When disabling, disable the entire group
// Do: An alternative to partially disabled groups is to simply omit the disabled options
// Warning: Avoid partially disabling groups when one of the disabled options is pre-selected as this causes unexpected results for keyboard navigation
//
// To disable a radio, add the following class and add the `disabled` attribute.
//
// Classes:
// xui-styledcheckboxradio-is-disabled: Adds disabled style
//
// ExampleClass: ds-example-transparent
//
// Markup: ./examples/radio/_radio-disabling.html
//
// Styleguide: Components.Controls.Radio.5.1

// Grouped radios
//
// To increase hit states and create visual similarity with other form elements, consider using a radio group.
//
// Tips:
// Do: Use small variant of Radio inside Radio groups
//
// Markup: ./examples/radio/_radio-grouped.html
//
// Styleguide: Components.Controls.Radio.5.2

// Multiline radio
//
// Radio groups can handle long strings very easily, as they wrap by default.
//
// Markup: ./examples/radio/_radio-multiline.html
//
// Styleguide: Components.Controls.Radio.5.2.1

// Order
//
// By default, radio buttons precede the text of the label. This can be reversed by adding `xui-styledcheckboxradio-reversed` to the wrapping element.
//
// Markup: ./examples/radio/_radio-order.html
//
// Styleguide: Components.Controls.Radio.5.3

// Validation and hint messages
//
// Validation and hint messages can be shown for radio buttons with and without a label.
//
// Add `aria-invalid="true"` to inputs to indicate that they are invalid.
//
// Add `xui-validation-is-invalid` to a validation message to display its error state.
//
// For accessibility purposes, add an "invalid" icon at the left of the validation message.
//
// If a group of radio buttons is invalid, add `xui-styledcheckboxradio-group-is-invalid` to the group.
//
// Classes:
// xui-styledcheckboxradiowrapper: Wrapper for the field and validation message
// xui-styledcheckboxradio: Wrapper for the radio button and label
// xui-styledcheckboxradio--message: Positions the message under the radio button
// xui-styledcheckboxradio-group-is-invalid: Changes the colour of the group to indicate it is invalid
// xui-validation-is-invalid: Applies error validation style and "invalid" icon to text element
//
// ExampleClass: ds-example-transparent
//
// Markup: ./examples/radio/_radio-validation.html
//
// Styleguide: Components.Controls.Radio.5.4

// Size variants
//
// Radios have a range of size options that allow for greater control over visual hierarchy and [interface density](./section-fundamentals-spacing.html#fundamentals-spacing-2). Add a class with the size variant modifier to the the `--input`, `--radio` and `--label` subcomponents.
//
// Tips:
// Do: Use the 'medium' size variant when not nesting Radio
// Do: Use the 'small' size variant inside Radio groups
// Warning: Be cautious when using 'small' or 'xsmall' variants as they have reduced legibility
// Don't: Don’t use a combination of size variants within a single form
//
// Definitions:
// Size variant:	**Height**: **Class**
// medium: 24px: <code>-medium</code>
// small: 20px: <code>-small</code>
// xsmall: 16px: <code>-xsmall</code>
//
// Markup: ./examples/radio/_radio-sizes.html
//
// Styleguide: Components.Controls.Radio.6

// Content guidelines
//
// Tips:
// Do: Labels should be succinct and scannable
// Do: Use sentence case (capitalise first word and proper nouns)
// Don't: Don’t use punctuation such as full stops or semicolons after options
//
// Styleguide: Components.Controls.Radio.7

// Example
//
// ExampleContentTable:
// How many employees do you have? | How many employees do you have working for you at the moment?
//
// Styleguide: Components.Controls.Radio.7.1

// Class list
//
// Classes:
// xui-styledcheckboxradio-group: Container for a group of styled checkboxes or radio
// xui-styledcheckboxradio: Container for a styled checkbox or radio
// xui-styledcheckboxradiowrapper: Wrapper for the field and validation message
// xui-styledcheckboxradio-reversed: Modifier for a right-aligned styled checkbox or radio
// xui-styledcheckboxradio--radio: The html element that displays the radio button, if not a custom icon.
// xui-styledcheckboxradio--focus: Subcomponent for focus layer of an svg checkbox or radio
// xui-styledcheckboxradio--main: Subcomponent for main layer of an svg checkbox or radio
// xui-styledcheckboxradio--label: Subcomponent for label text of a styled checkbox or radio
// xui-styledcheckboxradio--message: Positions the message under the radio button
// xui-styledcheckboxradio-group-is-invalid: Changes the colour of the group to indicate it is invalid
// xui-validation-is-invalid: Changes the colour of the text to indicate it is invalid
// xui-styledcheckboxradio--input-medium: Sets the input size to medium
// xui-styledcheckboxradio--radio-medium: Sets the radio size to medium
// xui-styledcheckboxradio--label-medium: Sets the label size to medium
// xui-styledcheckboxradio--input-small: Sets the input size to small
// xui-styledcheckboxradio--radio-small: Sets the radio size to small
// xui-styledcheckboxradio--label-small: Sets the label size to small
// xui-styledcheckboxradio--input-xsmall: Sets the input size to xsmall
// xui-styledcheckboxradio--radio-xsmall: Sets the radio size to xsmall
// xui-styledcheckboxradio--label-xsmall: Sets the label size to xsmall
// xui-touchtarget: Invisible touch target element inside a radio button
// xui-controlgroup: Sets some styles common to groups of inputs
// xui-controlgroup-vertical: Sets some styles common to vertically stacked groups of inputs
//
// Styleguide: Components.Controls.Radio.50

// Related components
//
// Related:
// * [Checkbox](./section-components-controls-checkbox.html)
// * [Form](./section-components-collectinginput-forms.html)
// * [Switch](./section-components-controls-switch.html)
// * [Toggle](./section-components-controls-toggle.html)
//
// Styleguide: Components.Controls.Radio.99
