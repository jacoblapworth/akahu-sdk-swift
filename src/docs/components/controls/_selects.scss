// Select
//
// Flags: updated updatesComing
//
// Introduction:
// Selects allow users to pick items from a list of options in a dropdown.
//
// Teaser: Choose an item from a list of options
//
// Components: Select-box
//
// VisualExample: ./components/controls/examples/select/_select-visual-example.html
//
// FigmaComponentFrameKey: 1425%3A13439
//
// Styleguide: Components.Controls.Select

// When to use
//
// - To give users a choice from a basic list of options
// - To filter or sort content and save on screen space, for example: in forms, modals, popovers, or datepickers
//
// Styleguide: Components.Controls.Select.1

// Best practice
//
// Tips:
// Do: Visually highlight the current selection in the dropdown
// Do: Start tab order from the currently selected item in the dropdown
// Warning: Try not to make assumptions of your user when pre-selecting options
// Warning: Display ‘None’ as one of the options if needed
// Warning: If you have 4 options or less, consider a [radio](./section-components-controls-radio.html)
// Don't: Don’t leave the field blank. Choose a logical default option or use Select + {field title}
//
// Styleguide: Components.Controls.Select.2

// Anatomy
//
// Custom selects rely heavily on React for rendering children and defining interaction.
// However, to style the static control itself, a few classes are required.
// They extend the basic `button` and `xui-icon` combination.
// Also, the caret icon SVG should be put in an [icon wrapper](./section-fundamentals-icons.html#fundamentals-icons-3.html) alongside the button.
//
// Classes:
// xui-button: Style for a button
// xui-button-standard: Modifier for a standard-style button
// xui-button-medium: Modifier for a medium-size button
// xui-button-fullwidth: 100% width
// xui-select: Wraps the trigger of a selectbox
// xui-select--button: Aligns the text like an input
// xui-select--button-no-variant: Styles the button like an input
// xui-select--content: Text styles
// xui-button-has-icon: Apply to button to ensure the content has the correct layout
// xui-button--caret: Apply to icon wrapper
//
// Markup: ./examples/select/_select.html
//
// Styleguide: Components.Controls.Select.3

// Content
//
// Selectable options are rendered as a picklist within a dropdown.
// Wrap these in a common parent with the following class.
//
// Classes:
// xui-select-layout: Wrapping class for select trigger and dropdown
//
// Markup: ./examples/select/_select-content.html
//
// Styleguide: Components.Controls.Select.3.1

// Labels and validation
//
// Selects, like other controls, can have labels and form validation added to them.
//
// Classes:
// xui-text-label: Label styling
// xui-fieldlabel-layout: Label spacing styling
// xui-select-is-invalid: Select invalid styling
// xui-validation: Message styling
// xui-validation-layout: Message spacing styling
// xui-validation-is-invalid: Applies error validation style and "invalid" icon to text element
//
// Markup: ./examples/select/_select-labels-and-validation.html
//
// Styleguide: Components.Controls.Select.3.2

// Features of a select
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.Controls.Select.4

// Style variants
//
// Selects consume button styles to enable desired trigger visual treatment. Alternatively, style a select like an input to visually fit within a form structure.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup: ./examples/select/_select-variants.html
//
// Styleguide: Components.Controls.Select.4.1

// Multi-select
//
// Select multiple options by using a multiselect picklist inside the dropdown. Display selected options in trigger, separated by commas.
//
// Tips:
// Do: Use multi-selects when choosing from an array of options in one category
//
// Markup: ./examples/select/_select-multiselect.html
//
// Styleguide: Components.Controls.Select.4.2

// Disabled
//
// To disable a select control, apply the `disabled` attribute.
// This applies styles and prevents it from accepting focus.
//
// Markup: ./examples/select/_select-disabling.html
//
// Styleguide: Components.Controls.Select.4.3

// Native selects
//
// Options inside native select controls cannot be styled at all.
// For this reason, the custom variant is the preferred implementation.
// However, native controls are often useful when prototyping.
// To style a native `select`, use the following classes and include a `xui-icon`.
//
// Classes:
// xui-select: Wrapper for a native select
// xui-select--control: Select styles
// xui-select--caret: Icon styling
//
// Markup: ./examples/select/_select-native.html
//
// Styleguide: Components.Controls.Select.4.5

// Size variants
//
// Selects have a range of size options that allow for greater control over visual hierarchy and [interface density](./section-fundamentals-spacing.html#fundamentals-spacing-2).
//
// Tips:
// Do: Use 'medium' size by default
// Warning: Use 'small' and 'xsmall' variants cautiously, as they have reduced legibility and touch targets
// Don't: Don't use a combination of size variants within a single form
//
// Definitions:
// Size variant: **Height**: **Class**
// medium: 40px: `xui-button-medium`
// small: 32px: `xui-button-small`
// xsmall: 24px: `xui-button-xsmall`
//
// Markup: ./examples/select/_select-sizes.html
//
// Styleguide: Components.Controls.Select.5

// Content guidelines
//
// Tips:
// Do: Be concise, but still give enough information so a user can easily make a selection
// Do: Use sentence case (capitalise first word and proper nouns)
// Do: Arrange options alphabetically or in a clear logical order
// Do: If there’s no logical default option, the placeholder option should be: Select + {field label}
//
// Related: Also see guidance for writing:
// * [Hint messages](./section-components-collectinginput-forms.html#components-collectinginput-forms-4-4-1)
// * [Labels](//xui.xero.com/product-language-guide/components/examples-of-product-writing/#labels)
// * [Placeholder content](./section-components-collectinginput-forms.html#components-collectinginput-forms-4-3-1)
//
// Styleguide: Components.Controls.Select.6

// Example
//
// ExampleContentTable:
// Select tax rate | Select...
//
// Styleguide: Components.Controls.Select.6.1

// Related components
//
// Related:
// * [Autocompleter](./section-components-collectinginput-autocompleter.html)
// * [Button](./section-components-controls-button.html)
// * [Dropdown](./section-components-collectinginput-dropdowns.html)
// * [Picklist](./section-components-displayingdata-picklist.html)
//
// Styleguide: Components.Controls.Select.99
