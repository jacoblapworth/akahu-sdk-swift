// Panel
//
// Teaser: Top-level container for grouping page content, that gives definition against the standard grey page.
//
// Introduction: Panels are a container for grouping page content. They give groups definition against the standard grey page.
//
// Components: Panel
//
// FigmaComponentFrameKey: 1425%3A13467
//
// Styleguide: Components.DisplayingData.Panel

// When to use
//
// - To group top-level content at the base page level
// - To create the sections of a form
// - To group a list of content blocks
//
// Styleguide: Components.DisplayingData.Panel.1

// Best practice
//
// Tips:
// Warning: Avoid nesting panels inside modals or other panels – instead [use your own class](#components-displayingdata-panel-3-2)
// Warning: Avoid framing any other content other than the top-most container – instead [use your own class](#components-displayingdata-panel-3-2)
//
// Styleguide: Components.DisplayingData.Panel.2

// Anatomy
//
// At its most basic form, a panel consists of the following class:
//
// Classes:
// xui-panel: Container for a panel
//
// Styleguide: Components.DisplayingData.Panel.3

// Framing content
//
// For any nested elements within a page that aren't semantically panels but you wish to create a bordered frame around, create your own classes instead.
// To do this, use [variables and mixins](./section-fundamentals-variables-mixins.html) without explicitly using the panel class.
//
// ExampleClass: ds-example-markuponly
//
// Markup:
// @import '@xero/xui/sass/vars';
// @import '@xero/xui/sass/mixins';
// .example-container {
//   background-color: $xui-color-white;
//   border-radius: $xui-radius;
//   box-shadow: $xui-shadow-border-all;
// }
//
// Styleguide: Components.DisplayingData.Panel.3.2

// Features of a panel
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.DisplayingData.Panel.4

// Spacing
//
// To provide flexibility for different types of content, panels do not provide any margin and padding by design.
//
// To add your own, use the `xui-padding-*` and `xui-margin-*` [utility classes](section-fundamentals-spacing.html).
//
// We do, however, recommend using `xui-padding-large` as a sensible default.
//
// Styleguide: Components.DisplayingData.Panel.4.1

// Heading
//
// ExampleClass: ds-example-wide-with-nav
//
// To create the default header within a panel, use the following classes.
// Note that [utility classes](section-fundamentals-utilities.html) are required to set horizontal and vertical alignment.
//
// Classes:
// xui-panel--header: Sets a min height of 60px
// xui-panel--heading: Sets a default font size and weight to heading text
//
// Markup: ./examples/panel/_panel-heading.html
//
// Styleguide: Components.DisplayingData.Panel.4.2

// Section
//
// ExampleClass: ds-example-wide-with-nav
//
// To create distinct sections within a panel, use the following class and add an optional centered header.
//
// Classes:
// xui-panel--section: Adds borders to seperate sections within a panel
// xui-panel--section--header: Sets a default font size and weight and centers heading text
//
// Markup: ./examples/panel/_panel-section.html
//
// Styleguide: Components.DisplayingData.Panel.4.3

// Footer
//
// ExampleClass: ds-example-wide-with-nav
//
// To create a footer within a panel, use the following class.
// In the case of a form, we recommend you use the `xui-actions` method outlined in the [button documentation](section-components-controls-button.html#components-controls-button-15).
//
// Classes:
// xui-panel--footer: Sets a min height of 60px and adds a top border
//
// Markup: ./examples/panel/_panel-footer.html
//
// Styleguide: Components.DisplayingData.Panel.4.4

// Form
//
// A common use case for a panel is a form.
// The following shows an example of how the three basic panel sections outlined above can be used to create one.
//
// ExampleClass: ds-example-wide-with-nav
//
// Markup: ./examples/panel/_panel-form.html
//
// Styleguide: Components.DisplayingData.Panel.4.5

// Content blocks
//
// ExampleClass: ds-example-wide-with-nav
//
// Another common use case for panels is to contain a list of content blocks. Wrapping a list of content blocks with a panel ensures the container to have a consistent border and rounded corners.
//
// Markup: ./examples/panel/_panel-content-blocks.html
//
// Styleguide: Components.DisplayingData.Panel.4.6

// Sidebar
//
// ExampleClass: ds-example-wide-with-nav
//
// To create a sidebar that triggers different panel content, use the following layout.
// Note that [utility classes](section-fundamentals-utilities.html) are also required to achieve the following layout.
//
// In order to create the sidebar list itself, a [picklist](section-components-displayingdata-picklist.html) is also required.
//
// Classes:
// xui-panel--sidebar: Adds a right border and sets a width of 220px on the sidebar
//
// Markup: ./examples/panel/_panel-sidebar.html
//
// Styleguide: Components.DisplayingData.Panel.4.7

// Content guidelines
//
// Tips:
// Do: Use sentence case (capitalise first word and proper nouns)
//
//
// Related: Also see guidance for writing:
// * [Buttons](./section-components-controls-button.html#components-controls-button-7)
// * [Headings](https://xui.xero.com/product-language-guide/components/examples-of-product-writing/#headings)
// * [Labels](https://xui.xero.com/product-language-guide/components/examples-of-product-writing/#labels)
//
// Styleguide: Components.DisplayingData.Panel.5

// Related components
//
// Related:
// * [Banner](./section-components-alerts-banner.html)
// * [Content block](./section-components-displayingdata-contentblock.html)
// * [Form](./section-components-collectinginput-forms.html)
// * [Modal](./section-components-collectinginput-modals.html)
// * [Picklist](./section-components-displayingdata-picklist.html)
//
// Styleguide: Components.DisplayingData.Panel.99
