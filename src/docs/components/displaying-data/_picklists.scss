// Picklist
//
// Teaser: A list of actions, filters or tabs.
//
// Introduction: Picklists are used to group a list of pickitem actions, filters or tabs. Picklists are usually contained inside a panel or a dropdown.
//
// Components: Picklist
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.41heitrj0iir
//
// Styleguide: Components.DisplayingData.Picklist

// Anatomy
//
// To create a group of pickitems, apply the following `picklist` and `pickitem` classes to `<ul>` and `<li>` elements, respectively.
//
// Classes:
// xui-picklist: Container for a group of pickitems
// xui-picklist-layout: Recommended layout for a group of pickitems
// xui-picklist-medium: Sets appropriate padding
// xui-pickitem: Container for an individual pickitem
// xui-pickitem-medium: Sets appropriate padding and font-size
// xui-pickitem--body: A selectable pickitem
// xui-pickitem--text: Text content within a pickitem
//
// Tips:
// Warning: Avoid using picklists on anything but a white background, as colour contrast is not accessible
//
// Markup:
// <div class="xui-panel">
//  <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//    <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Save</span>
//      </button>
//    </li>
//    <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Save & add another</span>
//      </button>
//    </li>
//    <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Discard draft</span>
//      </button>
//    </li>
//  </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.1

// Pick item states
//
// To adjust the state of a pickitem, apply the following modifiers.
//
// Classes:
// xui-pickitem-is-selected: Selected pickitem
// xui-pickitem-is-disabled: Disabled pickitem
// xui-pickitem-is-invalid: Invalid pickitem
//
// Markup:
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Invoices</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Bills</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-disabled" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Invoices</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-disabled" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Bills</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-invalid" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Invoices</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-invalid" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Bills</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.2

// Text styling
//
// Classes:
// xui-pickitem--secondary: Apply to style inline secondary text
// xui-pickitem--pinned: Apply to style right pinned text
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Nicole Crosby<span class="xui-pickitem--secondary">Admin</span></span>
//         <span class="xui-pickitem--pinned">50.00</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Rosie Cox<span class="xui-pickitem--secondary">Admin</span></span>
//         <span class="xui-pickitem--pinned">60.00</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Michael Lillis</span>
//         <span class="xui-pickitem--pinned">50.00</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.3

// Side elements
//
// A side element is a generalised term for visual and interactive content that is pinned to the left- or right-hand side of a container. Below are prescribed elements that you can use inside the `xui-pickitem--sideelement` wrapper class. Side elements can be aligned left or right, depending on whether they are placed before or after the `xui-pickitem--text` container.
//
// Classes:
// xui-pickitem--sideelement: Side element wrapper class
//
// Styleguide: Components.DisplayingData.Picklist.4

// Icons
//
// Classes:
// xui-icon: Apply to SVG icon within side element wrapper
//
// Markup:
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Low priority</span>
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon xui-u-rotate-270">
//             <use xlink:href="#xui-icon-arrow" role="presentation"></use>
//           </svg>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Medium priority</span>
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon xui-u-rotate-270">
//             <use xlink:href="#xui-icon-arrow" role="presentation"></use>
//           </svg>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">High priority</span>
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon xui-u-rotate-270">
//             <use xlink:href="#xui-icon-arrow" role="presentation"></use>
//           </svg>
//         </span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon">
//             <use xlink:href="#xui-icon-plus" role="presentation"></use>
//           </svg>
//         </span>
//         <span class="xui-pickitem--text">Add staff</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon">
//             <use xlink:href="#xui-icon-invoice" role="presentation"></use>
//           </svg>
//         </span>
//         <span class="xui-pickitem--text">Create invoice</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon">
//             <use xlink:href="#xui-icon-trash" role="presentation"></use>
//           </svg>
//         </span>
//         <span class="xui-pickitem--text">Delete project</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.4.1

// Avatars
//
// Classes:
// xui-avatar-small: Apply to avatar within side element wrapper
//
// Markup:
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-1" role="presentation">TC</abbr>
//         </span>
//         <span class="xui-pickitem--text">Tam Crollope</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-3" role="presentation">CR</abbr>
//         </span>
//         <span class="xui-pickitem--text">Cosie Rox</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-5" role="presentation">CG</abbr>
//         </span>
//         <span class="xui-pickitem--text">Ceorgia Gottrell</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Projects</span>
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-1" role="presentation">TC</abbr>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Xero Practice Manager</span>
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-3" role="presentation">CR</abbr>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Xero HQ</span>
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-5" role="presentation">CG</abbr>
//         </span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.4.2

// Truncating
//
// The default behaviour of pickitem text is to wrap.
// Depending on the content of the pickitem, you will need to apply 1 or more of the following classes to truncate instead of wrap.
//
// Classes:
// xui-pickitem-text-truncated: Truncates child text strings
// xui-pickitem-has-secondarytext: Apply to truncated pickitems with secondaryText to add appropriate min-width
// xui-pickitem-has-leftelement: Apply to truncated pickitems with leftElement to add appropriate min-width
// xui-pickitem-has-leftelement-secondarytext: Apply to truncated pickitems with leftElement and secondaryText to add appropriate min-width
//
// Exampleclass: ds-example-narrow
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-text-truncated" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           <span class="xui-pickitem-text-truncated">96 St Georges Bay Rd, Parnell, Auckland 1052</span>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-text-truncated xui-pickitem-has-secondarytext" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           <span class="xui-pickitem-text-truncated">96 St Georges Bay Rd, Parnell, Auckland 1052</span>
//           <span class="xui-pickitem--secondary xui-pickitem-text-truncated">Xero Auckland Office</span>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-text-truncated xui-pickitem-has-leftelement" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon">
//             <use xlink:href="#xui-icon-shipping" role="presentation"></use>
//           </svg>
//         </span>
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           <span class="xui-pickitem-text-truncated">96 St Georges Bay Rd, Parnell, Auckland 1052</span>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-text-truncated xui-pickitem-has-leftelement-secondarytext" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon">
//             <use xlink:href="#xui-icon-shipping" role="presentation"></use>
//           </svg>
//         </span>
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           <span class="xui-pickitem-text-truncated">96 St Georges Bay Rd, Parnell, Auckland 1052</span>
//           <span class="xui-pickitem--secondary xui-pickitem-text-truncated">Xero Auckland Office</span>
//         </span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.5

// Headers and dividers
//
// Classes:
// xui-picklist--header: Apply to heading list item wrapper
// xui-picklist--header--text: Apply to heading text wrapper
// xui-picklist--divider: Adds dividing line break between items
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-picklist--header">
//       <span class="xui-picklist--header--text">Recent</span>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Monique Smith</span>
//       </button>
//     </li>
//     <li class="xui-picklist--divider"></li>
//     <li class="xui-picklist--header">
//       <span class="xui-picklist--header--text">Suggested</span>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Ben Watts</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Cleo Mitchell</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.6

// Multiselect picklist
//
// Tips:
// Do: Replace any left side elements with checkbox when using a multiselect picklist
// Dont: Don't display a left side element alongside a checkbox inside a pickitem
//
// Classes:
// xui-pickitem-multiselect: Apply to pickitems
// xui-pickitem-multiselect--checkbox: Apply to pickitem label
// xui-pickitem--input: Apply to style checkbox
// xui-pickitem-multiselect--label: Apply to pickitem text wrapper
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="group">
//     <li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" aria-selected="false" role="option" id="0-1">
//       <div class="xui-pickitem--body" role="presentation">
//         <label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" role="presentation">
//           <input type="checkbox" tabindex="-1" aria-labelledby="aaa" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" value="">
//           <div class="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small">
//             <div class="xui-touchtarget"></div>
//           </div>
//           <span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label" id="aaa">
//             <span class="">Retail</span>
//           </span>
//         </label>
//       </div>
//     </li>
//     <li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" aria-selected="false" role="option" id="0-1">
//       <div class="xui-pickitem--body" role="presentation">
//         <label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" role="presentation">
//           <input type="checkbox" tabindex="-1" aria-labelledby="aab" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" value="">
//           <div class="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small">
//             <div class="xui-touchtarget"></div>
//           </div>
//           <span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label" id="aab">
//             <span class="">Construction</span>
//           </span>
//         </label>
//       </div>
//     </li>
//     <li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" aria-selected="false" role="option" id="0-1">
//       <div class="xui-pickitem--body" role="presentation">
//         <label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" role="presentation">
//           <input type="checkbox" tabindex="-1" aria-labelledby="aac" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" value="">
//           <div class="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small">
//             <div class="xui-touchtarget"></div>
//           </div>
//           <span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label" id="aac">
//             <span class="">Professional services</span>
//           </span>
//         </label>
//       </div>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.7

// Multiline pickitems
//
// Classes:
// xui-pickitem-multiline: Apply to pickitem to wrap content
// xui-pickitem--heading: Apply to primary content to style text
// xui-pickitem--secondary: Apply to secondary content to style text
// xui-pickitem-text-truncated: Apply to primary and secondary content for layout
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
// 		<li class="xui-pickitem xui-pickitem-multiline xui-pickitem-medium" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--sideelement">
// 					<abbr class="xui-avatar xui-avatar-small xui-avatar-color-5" role="presentation">CT</abbr>
// 				</span>
// 				<span class="xui-pickitem--text">
// 					<span class="xui-pickitem--heading xui-pickitem-text-truncated">Cam Trollope</span>
// 					<span class="xui-pickitem--secondary xui-pickitem-text-truncated">cam.trollope@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiline xui-pickitem-medium" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--sideelement">
// 					<abbr class="xui-avatar xui-avatar-small xui-avatar-color-6" role="presentation">GC</abbr>
// 				</span>
// 				<span class="xui-pickitem--text">
// 					<span class="xui-pickitem--heading xui-pickitem-text-truncated">Georgia Cottrell</span>
// 					<span class="xui-pickitem--secondary xui-pickitem-text-truncated">georgia.cottrell@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 	</ul>
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
// 		<li class="xui-picklist--header">
// 			<span class="xui-picklist--header--text">Removed users</span>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiline xui-pickitem-medium" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--sideelement">
// 					<svg focusable="false" class="xui-icon">
// 						<use xlink:href="#xui-icon-contact" role="presentation"></use>
// 					</svg>
// 				</span>
// 				<span class="xui-pickitem--text">
// 					<span class="xui-pickitem--heading xui-pickitem-text-truncated">Robb Schiller</span>
// 					<span class="xui-pickitem--secondary xui-pickitem-text-truncated">robb.schiller@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.8

// Expanding picklists
//
// To hide and show a list of sub-menu pickitems, apply the following classes.
//
// Classes:
// xui-picklist--nestedcontainer: Apply to expanding pickitem
// xui-pickitem--submenucontrol: Apply to checkbox that opens and closes nested list
// xui-submenu-uicontrol--icon: Apply to icon nested within label
// xui-submenu: Container for a group of nested pickitems
// xui-submenu-layout: Recommended layout modifier for a group of pickitems
//
// Styleguide: Components.DisplayingData.Picklist.9

// Standard
//
// If the parent pickitem does not have a destination or function, use the standard (non-split) variant.
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="group">
// 		<li class="xui-picklist--nestedcontainer" aria-expanded="true">
//			<input role="treeitem" type="checkbox" class="xui-pickitem--submenucontrol" id="nested-checkbox" tabindex="-1" aria-owns="nested">
//			<label role="button" for="nested-checkbox" class="xui-submenu-uicontrol xui-pickitem--body" tabindex="0" aria-label="Toggle submenu">
//				<span class="xui-pickitem--text">Clients</span>
//				<div class="xui-submenu-uicontrol--icon xui-iconwrapper">
// 					<svg focusable="false" class="xui-icon">
// 						<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 					</svg>
//				</div>
//			</label>
//			<ul role="listbox" class="xui-submenu xui-submenu-layout" id="nested">
//				<li class="xui-pickitem xui-pickitem-medium" role="option" id="0-1">
//					<button type="button" class="xui-pickitem--body">
// 						<span class="xui-pickitem--sideelement">
// 							<abbr class="xui-avatar xui-avatar-business xui-avatar-small xui-avatar-color-7" role="presentation">AC</abbr>
// 						</span>
//						<span class="xui-pickitem--text">Andy Carrell</span>
//					</button>
//				</li>
//				<li class="xui-pickitem xui-pickitem-medium" role="option" id="0-2">
//					<button type="button" class="xui-pickitem--body">
// 						<span class="xui-pickitem--sideelement">
// 							<abbr class="xui-avatar xui-avatar-business xui-avatar-small xui-avatar-color-8" role="presentation">JK</abbr>
// 						</span>
//						<span class="xui-pickitem--text">Jishaal Kalyan</span>
//					</button>
//				</li>
//				<li class="xui-pickitem xui-pickitem-medium" role="option" id="0-3">
//					<button type="button" class="xui-pickitem--body">
// 						<span class="xui-pickitem--sideelement">
// 							<abbr class="xui-avatar xui-avatar-business xui-avatar-small xui-avatar-color-9" role="presentation">SK</abbr>
// 						</span>
//						<span class="xui-pickitem--text">Simar Karla</span>
//					</button>
//				</li>
//			</ul>
//		</li>
// 	</ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.9.1

// Split
//
// If the parent pickitem can be selected separately from it's children, the split variant is the appropriate functionality to use. This creates distinct controls for selecting the parent, as well as opening the sub-menu of pickitems.
//
// Classes:
// xui-pickitem-split: Add to pickitem
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-picklist--nestedcontainer" role="treeitem" aria-expanded="false">
//       <input id="split-checkbox" type="checkbox" class="xui-pickitem--submenucontrol" tabindex="-1"/>
//       <div class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium xui-pickitem-split" id="splitTrigger">
//         <div class="xui-pickitem--body">
//           <label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio">
//             <input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small checked" tabindex="-1" checked>
//             <div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input">
//               <div class="xui-touchtarget"></div>
//             </div>
//             <span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
//               <span>Staff</span>
//             </span>
//           </label>
//         </div>
//       </div>
//       <label for="split-checkbox" class="xui-submenu-uicontrol" title="Show or hide more options" aria-label="Show or hide more options" tabindex="-1" >
//         <div class="xui-iconwrapper xui-submenu-uicontrol--icon">
//           <svg focusable="false" class="xui-icon">
//             <use xlink:href="#xui-icon-arrow" role="presentation"></use>
//           </svg>
//         </div>
//       </label>
//       <ul id="split" class="xui-submenu xui-submenu-layout xui-picklist-medium" role="group">
//         <li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" role="option">
//           <div class="xui-pickitem--body">
//             <label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="tim">
//               <input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="tim">
//               <div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input">
//                 <div class="xui-touchtarget"></div>
//               </div>
//               <span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
//                 <span>Tim Redmond</span>
//               </span>
//             </label>
//           </div>
//         </li>
//         <li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" role="option">
//           <div class="xui-pickitem--body">
//             <label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="finn">
//               <input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="finn">
//               <div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input">
//                 <div class="xui-touchtarget"></div>
//               </div>
//               <span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
//                 <span>Finn Clark</span>
//               </span>
//             </label>
//           </div>
//         </li>
//         <li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" role="option">
//           <div class="xui-pickitem--body">
//             <label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="grzegorz">
//               <input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="grzegorz">
//               <div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input">
//                 <div class="xui-touchtarget"></div>
//               </div>
//               <span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
//                 <span>Grzegorz Pawłowski-Chudziński</span>
//               </span>
//             </label>
//           </div>
//         </li>
//       </ul>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.9.2

// Horizontal picklists
//
// flags: updated
//
// To create a horizontal picklist, commonly referred to as tabs, apply the following modifiers.
// We also recommend removing `xui-picklist-layout` to allow pickitems to stretch the full height of their containing element.
// Horizontal picklists don't support the full suite of customisations that are available for the vertical variant. Below are examples of the variations that are supported.
//
// Classes:
// xui-picklist-horizontal: Apply to picklist
// xui-pickitem-is-horizontal: Apply to pickitem
//
// Markup:
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-horizontal xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">All</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">FY 2020</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">FY 2019</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">FY 2018</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-horizontal xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-3" role="presentation">CC</abbr>
//         </span>
//         <span class="xui-pickitem--text">Cathy Campbell</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-4" role="presentation">NC</abbr>
//         </span>
//         <span class="xui-pickitem--text">Nicole Crosby</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-5" role="presentation">RT</abbr>
//         </span>
//         <span class="xui-pickitem--text">Raymond Tiong</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-horizontal xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text">
// 					<span class="">Complete</span>
// 					<span class="xui-pickitem--secondary ">309</span>
// 				</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text">
// 					<span class="">In progress</span>
// 					<span class="xui-pickitem--secondary ">12</span>
// 				</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text">
// 					<span class="">Unstarted</span>
// 					<span class="xui-pickitem--secondary">38</span>
// 				</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Components.DisplayingData.Picklist.10

// Accessibility
//
// These demos do not illustrate the recommended keyboard interaction, as it is not possible with static HTML.
// If you are using React, the component handles keyboard interaction and `tabindex` values for you.
// The resulting behaviour is that each picklist is a single tab stop with arrow keys being used to navigate to each pickitem.
// For more information on keyboard accessibility, view the [W3 documentation](https://www.w3.org/WAI/GL/wiki/Using_ARIA_trees#Keyboard_Support).
//
// A picklist is an implementation of a tree control.
// To be accessible, each picklist must have the `tree` role applied as well as an `aria-label` or `aria-labelledby` attribute directing to the desired label.
// Individual pickitems must have the `treeitem` role applied.
// For more information on tree controls, view the [W3 documentation](https://www.w3.org/WAI/GL/wiki/Using_ARIA_trees).
//
// In the case of an expanding pickitem, the parent must have the `group` role applied, and children must have the `option` role applied instead.
// Use the `aria-hidden` and `aria-expended` attributes when expanding or collapsing a pickitem with children.
//
// For selected pickitems, make sure to apply the `aria-selected` attribute.
//
// Styleguide: Components.DisplayingData.Picklist.11
