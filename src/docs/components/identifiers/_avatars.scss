// Avatar
//
// Introduction:
// Avatars help users more easily recognise businesses and people. XUI’s avatars use images when available and acronyms when not.
//
// Components: Avatar
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.9afdgn2u1tvf
//
// FigmaComponentFrameKey: 1425%3A13434
//
// Styleguide: Components.Identifiers.Avatar

// When to use
//
// - To enhance recognition of businesses and people
// - To give interfaces a sense of humanity
//
// Styleguide: Components.Identifiers.Avatar.1

// Best practice
//
// Tips:
// Do: Make sure avatars are consistent for the user throughout Xero
// Do: Use the small avatar variant in toolbars
// Dont: Avoid using as the only means of identifying a business or person
//
// Styleguide: Components.Identifiers.Avatar.2

// Features of an avatar
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.Identifiers.Avatar.3

// Types
//
// There are 2 variants of avatars in XUI. This helps users identify between contacts and Xero users.
//
// Definitions:
// Users: (Default): Round avatars with 1–2 letter acronyms. These are used to identify users.
// Contacts: `xui-avatar-business`: Square avatars with 1–3 letter acronyms. These are used to identify contacts such as suppliers, customers and clients.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup: ./examples/avatar/_avatar.html
//
// Styleguide: Components.Identifiers.Avatar.3.1

// Images
//
// If a logo or profile picture is available this should always be used. These
// should be drawn from a consistent source – the contact or user record. That
// image should update if it is changed at the source.
//
// Ideally the image will be pre-processed to square and appropriately resized. If the image is not square
// it will be displayed in its entirety with the experimental `object-contain` property. However support in IE/Edge is limited.
//
// exampleClass: ds-example-transparent ds-example-flush ds-example-nomarkuplink
//
// Markup: ./examples/avatar/_avatar-images.html
//
// Styleguide: Components.Identifiers.Avatar.3.2

// Colours
//
// The [React component](./react/#avatar) uses a hashing algorithm to determine the correct colour based on that shared value.
//
// Tips:
// Do: If no image exists, then the avatar background colour and acronym should be displayed
// Do: Colours are selected deterministically from one of the ten Avatar colours
// Do: Colours should be based on a unique **shared** attribute of the entity (e.g. GUID)
// Do: If two entities share the same name, then the colour should be different
//
// Classes:
// xui-avatar-color-: Sets the colour to one of the defined options with an added modifier between 1 and 10.
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup: ./examples/avatar/_avatar-colors.html
//
// Styleguide: Components.Identifiers.Avatar.3.3

// Grouping
//
// Tips:
// Do: Use an avatar group to display many entities that belong to the same group
// Do: If more entities exist than are reasonable to display, an additional counter should be added
// Do: Display avatars in an order that makes sense to your content
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup: ./examples/avatar/_avatar-grouping.html
//
// Classes:
// xui-avatargroup: Class to be used as a wrapper div around an avatar group
// xui-avatar-counter: Modifier for an avatar counter (e.g. +3)
//
// Styleguide: Components.Identifiers.Avatar.3.4

// Size variants
//
// Avatars have a range of size options that allow for greater control over visual hierarchy and [interface density](./section-fundamentals-spacing.html#fundamentals-spacing-2).
//
// Tips:
// Do: Use the size variant that is appropriate for the content it’s referencing
// Do: Always nest avatars one size variant below its parent’s size variant
// Warning: Use xsmall and 2xsmall variants cautiously, as they have reduced legibility
// Dont: Don’t use a combination of size variants within a singular group of items
//
// Definitions:
// Size variant: **Height**: **Class**
// 2xsmall: 16px: <code>xui-avatar-2xsmall</code>
// xsmall: 24px: <code>xui-avatar-xsmall</code>
// small: 32px: <code>xui-avatar-small</code>
// medium: 40px: (default)
// large: 80px: <code>xui-avatar-large</code>
// xlarge: 120px: <code>xui-avatar-xlarge</code>
//
// exampleClass: ds-example-transparent ds-example-flush
//
// Markup: ./examples/avatar/_avatar-sizes.html
//
// Styleguide: Components.Identifiers.Avatar.4

// Accessibility
//
// Avatars alone are not meant to communicate the full identity of a person or business. Use them in combination with the entity’s full name, except when grouped or when the name of the entity is not relevant to the information being displayed.
//
// Styleguide: Components.Identifiers.Avatar.5

// Content guidelines
//
// Tips:
// Do: Use alt text for accessibility so screen readers can describe what’s in the image
// Info: If an avatar represents a person, use `alt="Person’s name"`
// Info: If an avatar represents a business, use `alt="Business’s name"`
//
// Styleguide: Components.Identifiers.Avatar.6

// Related components
//
// Related:
// * [Content block](./section-components-displayingdata-contentblock.html)
// * [Picklist](./section-components-displayingdata-picklist.html)
// * [Pill](./section-components-identifiers-pill.html)
//
// Styleguide: Components.Identifiers.Avatar.99
