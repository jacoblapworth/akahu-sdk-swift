// Pagination
//
// Components: Pagination
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=kix.3kmobslt33ag
//
// Introduction: Pagination helps to break up big sets of data so it’s easier for a user to digest the information and helps speed up the loading of data.
//
// FigmaComponentFrameKey: 3950%3A0
//
// Styleguide: Components.Navigation.Pagination

// When to use
//
// - To break up long sets of data within a page
// - To break up long lists so that they load faster and use less data by default
//
// Styleguide: Components.Navigation.Pagination.1

// Best practice
//
// Tips:
// Do: If content will take a while to load, use in conjunction with a [xui-loader-retain layout](./section-components-identifiers-loader.html#components-identifiers-loader-4-1)
// Do: Place pagination within the same panel as the content it controls
// Do: Consider updating the url based on pagination to make it easy for users to revisit a section of a list
// Do: When applying bulk select, allow users to select the items visible on the current page by default. To select an entire list of items across multiple pages, use a separate action and very explicit language, e.g. 'Select all items (999)'.
// Do: When applying search or sort functionality, apply to the entire list not just the visible page
// Dont: Don’t paginate a process – instead consider a [stepper](section-components-navigation-stepper.html) or [button](section-components-controls-button.html#components-controls-button-12-1)
//
// Styleguide: Components.Navigation.Pagination.2

// Anatomy
//
// By default pagination displays an items-per-page selector, item count, and the paging widget. All of this information is important when paging multiple items per page.
//
// Tips:
// Do: Use to break up long lists
// Do: Place at the bottom of the content being paginated
// Do: Set the scale of the ‘items per page’ selector relative to your context
// Do: Swap the term ‘items’ for a more relevant term where sensible e.g ‘Contacts per page’
// Do: Where possible, default to user’s last selection for items per page
//
// Classes:
// xui-pagination: Pagination container
// xui-pagination--items: Items-per-page selector and item count container
// xui-pagination--items--select: Items-per-page selector
// xui-pagination--items--count: Item count
// xui-pagination--paging: Paging widget container
//
// Markup: ./examples/pagination/_pagination.html
//
// Styleguide: Components.Navigation.Pagination.3

// Layout
//
// For smaller breakpoints the items-per-page selector and the item count are replaced with more concise information that fits its given real estate.
//
// ExampleClass: ds-example-narrow
//
// Markup: ./examples/pagination/_pagination-layout.html
//
// Styleguide: Components.Navigation.Pagination.3.1

// Features of pagination
//
// Explore the different features that can be applied to this component.
//
// Styleguide: Components.Navigation.Pagination.4

// Paging only
//
// Pagination provides the option to only show the paging widget within the component. This is useful if each page consists of content that can’t be counted or changed.
//
// Tips:
// Do: Use if the content being paged can't be numbered or counted, such as long-form copy
// Dont: Don't use the Paging Only option to paginate lists, instead use the full pagination component
//
// Markup: ./examples/pagination/_pagination-paging.html
//
// Styleguide: Components.Navigation.Pagination.4.1

// Content guidelines
//
// Tips:
// Do: Use sentence case (capitalise first word and proper nouns)
//
// Styleguide: Components.Navigation.Pagination.80

// Related components
//
// Related:
// * [Stepper](./section-components-navigation-stepper.html)
// * [Loader](./section-components-identifiers-loader.html)
// * [Button layout](./section-components-controls-button.html#components-controls-button-4-11)
//
// Styleguide: Components.Navigation.Pagination.99
