// Layout
//
// Teaser: Defining rows, columns and responsive layouts.
//
// Introduction: XUI offers several basic tools to create rows, columns and responsive layouts.
//
// Components: Rows
//
// Styleguide: Fundamentals.Layout

// Page width
//
// To specify a sensible max-width on page content, apply one of the following width classes.
//
// Definitions:
// Standard: 		940px:		`.xui-page-width-standard`
// Large: 			1160px:			`.xui-page-width-large`
//
// Styleguide: Fundamentals.Layout.1

// Creating columns
//
// Utilising XUI's 12 column grid provides easy access to the common layout divisors of halves, thirds, and quarters, as well as many  other fractions between 1 and 12.
//
// Styleguide: Fundamentals.Layout.2

// Rows
//
// To create a column based layout, first specify which kind of layout is desired by adding one of the following classes to the parent.
//
// Definitions:
// Standard:			Standard row:					`.xui-row`
// Grid:					Row with gutters:			`.xui-row-grid`
// Flex:					Flex based row:				`.xui-row-flex`
//
// Note: The `.xui-row-grid` variant uses negative margins
//
// Markup:
// <div class='xui-row ds-column-example'>
// 	<div class='xui-column-4-of-12'></div>
// 	<div class='xui-column-4-of-12 xui-u-flex'>
// 		<span>Standard</span>
// 	</div>
// 	<div class='xui-column-4-of-12'></div>
// </div>
// <div class='xui-row-grid ds-column-example'>
// 	<div class='xui-column-4-of-12'></div>
// 	<div class='xui-column-4-of-12 xui-u-flex'>
// 		<span>Grid</span>
// 	</div>
// 	<div class='xui-column-4-of-12'></div>
// </div>
// <div class='xui-row-flex xui-u-flex-space-between ds-column-example'>
// 	<div class='xui-column-3-of-12'></div>
// 	<div class='xui-column-3-of-12 xui-u-flex'>
// 		<span>Flex</span>
// 	</div>
// 	<div class='xui-column-3-of-12'></div>
// </div>
//
// Styleguide: Fundamentals.Layout.2.1

// Columns
//
// To specify the widths of the children, use the following `.xui-column-*-of-12` percentage classes.
//
// Definitions:
// 1/12: 	Twelfth:								`-1-of-12`
// 1/6: 		Sixth: 									`-2-of-12`
// 1/4: 		Quarter: 							`-3-of-12`
// 1/3: 		Third: 									`-4-of-12`
// 5/12: 	Five twelfths: 	`-5-of-12`
// 1/2: 		Half: 										`-6-of-12`
// 7/12: 	Seven twelfths: `-7-of-12`
// 2/3: 		Two thirds: 				`-8-of-12`
// 3/4: 		Three quarters: `-9-of-12`
// 5/6: 		Five sixths: 			`-10-of-12`
// 11/12: Eleven twelfths:`-11-of-12`
// 1: 				Full width: 				`-12-of-12`
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup:
// <div class='xui-row ds-column-example'>
// 	<div class="xui-column-6-of-12">
// 	</div>
// 	<div class="xui-column-6-of-12">
// 	</div>
// </div>
// <div class='xui-row ds-column-example'>
// 	<div class="xui-column-4-of-12">
// 	</div>
// 	<div class="xui-column-4-of-12">
// 	</div>
// 	<div class="xui-column-4-of-12">
// 	</div>
// </div>
// <div class='xui-row ds-column-example'>
// 	<div class="xui-column-3-of-12">
// 	</div>
// 	<div class="xui-column-6-of-12">
// 	</div>
// 	<div class="xui-column-3-of-12">
// 	</div>
// </div>
//
// Styleguide: Fundamentals.Layout.2.2

// Breakpoints
//
// All columns are also available as responsive modifiers that alter layout at different viewports. Simply add one of the following modifiers to specify the desired behaviour.
//
// Definitions:
// Always: 	∞:													none
// Medium: 	940px—1160px: 	`-medium`
// Large: 		1160px—∞: 					`-wide`
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup:
// <div class='xui-row ds-column-example'>
// 	<div class="xui-column-12-of-12 xui-column-6-of-12-wide">
// 	</div>
// 	<div class="xui-column-12-of-12 xui-column-6-of-12-wide">
// 	</div>
// </div>
//
// Styleguide: Fundamentals.Layout.3

// Nesting
//
// You can also nest columns to achieve a large number of possible layouts.
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup:
// <div class='xui-row ds-column-example'>
// 	<div class="xui-column-6-of-12 xui-row ds-column-example">
// 		<div class="xui-column-6-of-12 xui-row ds-column-example">
// 			<div class="xui-column-6-of-12 xui-row ds-column-example">
// 			</div>
// 		</div>
// 	</div>
// </div>
//
// Styleguide: Fundamentals.Layout.4

// Flex utilities
//
// A number of <a href="section-fundamentals-utilities.html#fundamentals-utilities-1">utility classes</a> are also available for distributing and aligning content using flex.
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup:
// <div class='xui-row-flex xui-u-flex-space-between ds-column-example'>
// 	<div>
// 	</div>
// 	<div>
// 	</div>
// 	<div>
// 	</div>
// </div>
//
// Styleguide: Fundamentals.Layout.5

// Accessibility
//
// If you are using interactive elements within a tabular layout containing rows and columns, please refer to the <a href="https://www.w3.org/TR/wai-aria-1.1/#grid">aria grid role documentation</a>.
// Each column of the grid must be able to be either active, selectable or editable, as well as being keyboard accessible, in order to apply the appropriate roles.
//	Using the grid role means that the table is considered editable by default, unless the aria-readonlyattribute on the grid is set to true.
//
// Styleguide: Fundamentals.Layout.6
