// Icons
//
// Introduction: An overview of all our icons and how to use them in your project.
//
// Teaser: An extensive set of icons for use inside buttons and other UI elements.
//
// Components: Icon
//
// flags: updatesComing
//
// Styleguide: Fundamentals.Icons

// Usage
//
// The classes outlined here are only responsible for styling the icons, and do not contain the SVG data themselves.
// To include the SVG data, you will need to import the icons into your page using the following script, and then reference their name via the `xlink:href` attribute.
// If you are using React, this is not required. For more information, visit the <a href='https://github.dev.xero.com/UXE/xui-icon'>xui-icon repository</a>.
//
// @xuiIconLoaderURL
//
// Definitions:
// Class: Apply to `<svg>` tag: `.xui-icon`
// Name: Apply to `<use>` tag: `#xui-icon-*`
//
// Styleguide: Fundamentals.Icons.1

// Size
//
// Icons are available in a number of sizes.
// The default size is optimised for use inside buttons and form controls.
// The additional sizes are intended mainly for read-only contexts such as empty states or success screens.
// If using the `iconLoader` script mentioned above, adding the following classes will modify the scale of the icons added to your page.
//
// Definitions:
// Default: Standard scale: none
// Large: : 1.33 scale: `.xui-icon-large`
// xLarge: 1.5 scale: `.xui-icon-xlarge`
//
// Markup: ./examples/icon/_icon-sizes.html
//
// Styleguide: Fundamentals.Icons.2

// Placement
//
// By default, icons are placed inline. When a set size is required, use the wrapper classes to center them in a box.
//
// Definitions:
// Base: `.xui-iconwrapper`: Sets the position of the icon in it's container box
// XSmall: `.xui-iconwrapper-xsmall`: Sets the size to xsmall
// Small: `.xui-iconwrapper-small`: Sets the size to small
// Medium: `.xui-iconwrapper-medium`: Sets the size to medium
// Large: `.xui-iconwrapper-large`: Sets the size to large
// XLarge: `.xui-iconwrapper-xlarge`: Sets the size to xlarge
//
// Markup: ./examples/icon/_icon-placement.html
//
// Styleguide: Fundamentals.Icons.3

// Color
//
// By default, icons inherit the color of the parent element.
// However, there are a number of color modifiers available to specify your own, when inheritance is not desired.
//
// Definitions:
// Inherit:  		none
// Black: 			`.xui-icon-color-black`
// White: 			`.xui-icon-color-white`
// Blue: 				`.xui-icon-color-blue`
// Dark Blue: 	`.xui-icon-color-dark-blue`
// Red: 				`.xui-icon-color-red`
// Green: 			`.xui-icon-color-green`
// Orange: 			`.xui-icon-color-orange`
// Yellow: 			`.xui-icon-color-yellow`
// Mint: 				`.xui-icon-color-mint`
// Turquoise: 	`.xui-icon-color-turquoise`
// Voilet: 			`.xui-icon-color-violet`
// Grape: 			`.xui-icon-color-grape`
// Pink: 				`.xui-icon-color-pink`
// PDF: 				`.xui-icon-color-file-pdf`
// Spreadsheet: `.xui-icon-color-file-spreadsheet`
// White muted: `.xui-icon-color-white-muted`
// White faint: `.xui-icon-color-white-faint`
// Black muted: `.xui-icon-color-black-muted`
// Black faint: `.xui-icon-color-black-faint`
//
// Markup: ./examples/icon/_icon-color.html
//
// Styleguide: Fundamentals.Icons.4

// Rotation
//
// The following classes provide rotation in 90 degree increments.
//
// Definitions:
// Default: 	none
// 90deg: 		`.xui-icon-rotate-90`
// 180deg: 		`.xui-icon-rotate-180`
// 270deg: 		`.xui-icon-rotate-270`
//
// Markup: ./examples/icon/_icon-rotation.html
//
// Styleguide: Fundamentals.Icons.5

// Accessibility
//
// We highly encourage you to add <a href='https://www.sitepoint.com/tips-accessible-svg/'>screen reader information</a> to SVGs. This can be done by adding the `<title>` and `<desc>` tags.
//
// Styleguide: Fundamentals.Icons.6

// Available icons
//
// <div id="xuiIconShowcase" class="prettyprint"></div>
//
// Styleguide: Fundamentals.Icons.7
