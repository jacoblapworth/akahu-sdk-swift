// Accessibility
//
// Introduction: More accessible software is more inclusive software. We all want Xero to be as welcoming and usable as possible for all people.
//
// Weight: 1.1
//
// Styleguide: Getting Started.Accessibility

// Accessibility Overview
//
// Introduction: More accessible software is more inclusive software. We all want Xero to be as welcoming and usable as possible for all people.
//
// Weight: 1.11
//
// Styleguide: Getting Started.Accessibility.Overview

// What is accessibility?
//
// Building accessible software means that everyone should be able to use it, regardless of any disabilities or impairments. It's about offering more than one way to perform an action or access information, and removing barriers that need not be present.
//
// When we think about a variety of accessible use cases for Xero, we consider visual, auditory, motor, cognitive, situational impairments, and more. They aren't necessarily permanent conditions either. In fact, many of us move in and out of contexts that may impair our access to the web. Some categories, like speech impairment, may become more relevant for Xero in the future, but aren't currently creating barriers in our software.
//
// Styleguide: Getting Started.Accessibility.Overview.1

// What are the benefits?
//
// - Thinking about loving and protecting our customers, and understanding their journeys, we know that making our software accessible and inclusive is the right thing to do.
// - Accessibility features often make usage easier and more delightful for everyone, including those _without_ impairments, or with temporary impairments and injuries. If you've ever used crutches or rolled a pram or a bicycle up a ramp, you know ramps benefit more than just wheelchair users.
// -  Making software that better serves more people broadens our potential market.
// - As governments and regulatory bodies are also recognizing the benefits of accessibility, they're beginning to require it to do business. We're excited to get ahead of this, if we can.
//
// Styleguide: Getting Started.Accessibility.Overview.2

// What does success look like?
//
// - The international standard for accessibility is <a href="//w3.org/TR/WCAG21/" target="_blank">WCAG 2.1</a>, and our goal is to meet the AA level. It includes many recommendations for making a web app accessible to people with a wide range of impairments.
// - Performance of a web app is part of making it accessible to users with varying devices and internet speeds. Access may sometimes be a very literal concept.
// - Responsive is mostly related to devices, but also refers to different working modes preferred, or at times, required, by users. Someone working on-the-go may wish to access advanced web app features from a small mobile device with a touch interface, while a power user at their desk may wish to display as much data as possible on a very large monitor and navigate quickly using only their keyboard. Support for lower resolution displays also plays a part in this.
// - Localisation is also a closely related concept, especially as we expand into new markets. In order for something to be accessible, people to be able to successfully perceive it, and understand it. To do this, we need to simultaneously consider concerns like culturally-specific color associations, multi-language support, and even details like making sure we're optimising for variable line-lengths.
//
// Styleguide: Getting Started.Accessibility.Overview.3

// Who is responsible?
//
// In short, <a href="http://accessibility.voxmedia.com/" target="_blank">everyone</a>.
// - Product managers and owners can advocate for accessibility, making it an acceptance criteria and building it into estimates of time and effort.
// - Designers and writers have a wealth of resources available on the web about creating for accessibility. While XUI can do much of the work at a component-level, keep in mind how feature-specific patterns or interactions might introduce barriers to users with different impairments. See our [Accessible Design](section-getting-started-accessibility-design.html) page for more details.
// - Developers are responsible for a lot of the non-visible features such as keyboard navigation and accommodation for assistive technology like screen readers. See our [Accessible Development](section-getting-started-accessibility-development.html) page.
//
// Styleguide: Getting Started.Accessibility.Overview.4

// Accessibility in XUI Components
//
// Our recent improvement process has included:
// 1. Rendered Storybook components have been assessed using an accessibility plugin powered by aXe against WCAG 2.x – A & AA ratings, and Section 508.
// 2. Code has been linted with the jsx-a11y plugin with the "recommended" settings, except that we set the "label-has-for" rule to "allowChildren", allowing implicit as well as explicit labeling.
// 3. Rendered components have been manually tested for keyboard navigability and input interaction both on a per-component level, and in some test environments with compositions of fuller pages.
// 4. Color contrast has been evaluated against the WCAG 2.1 – AA standard, and a new palette developed to make XUI delightful for all users, including those with some level of vision impairment.
// 5. Non-default states of UI components have also been audited by the design team to ensure non-text information is clear for low-vision users. For example, error, hover, focus, selected, and disabled states are being continuously revised.
// 6. Standard sizes across the design system have recently been adjusted for improved readability and interaction. This will take the form of larger base fonts, less dense interfaces, and larger controls. However, increased density is still supported where it makes sense.
// 7. Very limited testing has been done with screen readers (primarily MacOS VoiceOver). We hope to dedicate additional resources to this, as the more readily-detected issues are resolved.
// 8. All non-essential motion animations use the `prefers-reduced-motion` media query, which disables motion animations if the user has requested it.
//
// We strongly recommend using the first three methods in your own application testing process.
//
// As a result of these audits, we've made significant upgrades to XUI, though we will probably not run out of candidate issues for some time. You can check progress within the XUI Accessibility project on Github. Remaining fixes will roll out into new versions of XUI.
//
// Styleguide: Getting Started.Accessibility.Overview.5

// Other great general resources about accessibility:
//
// - <a href="https://www.microsoft.com/design/#toolkit" targe="_blank">Microsoft's "Inclusive 101"</a>
// - <a href="https://accessibility.digital.gov/" targe="_blank">United States GSA's "Accessibility for Teams"</a>
// - <a href="http://accessibility.voxmedia.com/" targe="_blank">Vox media's "Accessibility Guidelines"</a>
//
// Styleguide: Getting Started.Accessibility.Overview.6
