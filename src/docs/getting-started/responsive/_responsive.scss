// Responsive
//
// Introduction: Responsive products are designed and built in a way that adapts the interface to accommodate the customer's device or viewport, whatever that might be.
//
// Weight: 1.2
//
// Styleguide: Getting Started.Responsive

// Responsive Overview
//
// Introduction: Responsive products are designed and built in a way that adapts the interface to accommodate the customer's device or viewport, whatever that might be.
//
// Weight: 1.21
//
// Styleguide: Getting Started.Responsive.Overview

// Why responsive is important
//
// Our users are more diverse than ever and we have a much more mature understanding of what's involved in building a modern web experience. It's our imperative to build products that not only reflect where we are today, but where we'll be in the future.
//
// Styleguide: Getting Started.Responsive.Overview.1

// Inclusivity
//
// Similar to our stance on accessibility, a responsive web is a more inclusive web. This means equal access to our products just as much as it means equal access within our products. In other words, we shouldn’t be dictating how our customers interact with Xero, or making assumptions based off of their device preference, economic privilege, or technical ability. Even despite the fact we have mobile apps, much functionality is still dependent on the web version of our product. More specifically, if our customers don't have a desktop computer, they're being forced to either rely on a sub-optimal experience, or go elsewhere.
//
// Styleguide: Getting Started.Responsive.Overview.1.1

// Internationalisation
//
// As Xero expands into new markets, it is important to understand the role that the web has in relation to language and culture. In some markets, high-end devices may not be as prevalent as in our own, and/or people may not own a desktop computer, meaning they'll rely more on the mobile web. Additionally, many of these markets utilise languages which have widely varied string lengths, and may even be multi-directional scripts. Building a single responsive web experience, which can be used on multiple form factors and in many different languages, helps us simultaneously tackle several problems at once as we scale internationally.
//
// Styleguide: Getting Started.Responsive.Overview.1.2

// User behaviour
//
// Globally, web usage is trending away from the desktop, towards a more diverse range of devices and input methods. This is reflected in our [internal analytics](https://xero.invisionapp.com/share/4WKPA2BAYFT#/screens/302515899) as well. Currently, we have roughly equal the amount of users accessing Xero on mobile web as we do via native mobile apps, despite the status quo of non-responsive products. Additionally, our customer growth for these touch-driven devices is increasing at a much faster rate than the desktop equivalent. The fact that almost [10x as many users](https://xero.invisionapp.com/share/4WKPA2BAYFT#/screens/302515898) access Xero for the first time on a touch-driven device as they do after logging in, gives us an indication that the user expectation of a responsive product is there, but it's simply not being met. Who's to say what would happen if our products were truly responsive?
//
// Styleguide: Getting Started.Responsive.Overview.1.3

// What success looks like
//
// XUI will make the transition to a responsive experience easier by providing best practices and purpose-built components and patterns, but ultimately it’s still up to each team to make the commitment to build and test their products to maintain that standard. Success looks like all of Xero's apps working as fully responsive experiences, using XUI as a base.
//
// As a baseline requirement, if you’re building a new experience or rewriting an existing one, we strongly urge using XUI. Simply by doing so, you’ll benefit from several years of systematic thinking and responsive considerations which will get you most of the way there.
//
// Styleguide: Getting Started.Responsive.Overview.2

// Functionality
//
// When we say 'cater for', we don't mean highly optimised experiences, but simply no loss of functionality. This is the most cost-effective approach, whilst still getting us most of the way there in terms of user experience. Focus simply on creating flexible interfaces that allow for varying screen sizes and content, instead of device-specific logic. More specifically, font sizes should be readable, touch targets easily tappable, and every interactive element should be visible without the need to pan or zoom. You know you've gone too far when you're supporting swipe-to-action, long-press and device sniffing.
//
// Styleguide: Getting Started.Responsive.Overview.2.1

// Device and browser support
//
// Aim to cater for at least 95% of form factors in markets we are in, or are about to enter into. However, we draw the line of support at 320px wide going down. Going up, we don’t have a specific limit, as the impacts to the user experience are less severe in that direction.
//
// Support for responsive browsers mirrors those maintained by the wider product team. For touch devices, this is primarily the two largest browsers – iOS Safari and Android Chrome. We don’t officially support Samsung Internet, UC, or Opera. However, this may change as we enter into new markets with different user preferences.
//
// Styleguide: Getting Started.Responsive.Overview.2.2

// Performance
//
// Excluding the most high-end devices, touch driven devices have less computing power than a traditional desktop so response times that are slow to begin with, become even more apparent. An additional concern that's prevalent in (although not exclusive to) mobile devices, is the speed of the user’s data connection, and the cost that imparts on the user. Performance guidelines are difficult to set universally, as interactions need to be evaluated in isolation and their performance quantified based on their impact, but we consider 100ms to be a good benchmark. We’ve done what we can to make sure our components follow these standards, but you’ll have to maintain this standard in your own work, too. Read more in our [performance guidelines](section-getting-started-performance.html) about ways to do this.
//
// Styleguide: Getting Started.Responsive.Overview.2.3

// Other resources about responsive design:
//
// - <a href="https://alistapart.com/article/responsive-web-design/" targe="_blank">"Responsive Web Design" by Ethan Marcotte</a>
// - <a href="https://www.smashingmagazine.com/2013/03/responsible-web-design/" targe="_blank">"Responsible Considerations for Responsive Web Design" by Jordan Moore on Smashing Magazine</a>
// - <a href="https://www.nngroup.com/articles/responsive-web-design-definition/" targe="_blank">"Responsive Web Design and User Experience" from Nielson Norman Group</a>
//
// Styleguide: Getting Started.Responsive.Overview.2.4
