// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<XUIProgressIndicator /> custom colors should not create a color override from a key that is not recognise 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  progressColor="banana"
  total={5}
  totalColor="potato"
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    progressColor="banana"
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
    totalColor="potato"
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> custom colors should override default color with an applicable color key 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  progressColor="orange"
  total={5}
  totalColor="turquoise"
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    progressColor="orange"
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
    totalColor="turquoise"
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      data-xui-progress-current-color="orange"
      data-xui-progress-total-color="turquoise"
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular completion alert" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isAlertOnComplete={true}
  progress={5}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={5}
    classes="xui-progress xui-progress-circular xui-progress-complete"
    customContent={undefined}
    id="myCustomProgressId"
    isAlertOnComplete={true}
    isComplete={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={5}
    toolTipId={undefined}
    toolTipMessage="5 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={5}
      aria-valuetext="5 of 5"
      className="xui-progress xui-progress-circular xui-progress-complete"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={5}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={5}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={0}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={true}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        >
          <CompleteIcon>
            <svg
              className="xui-progress-icon-complete"
              viewBox="0 0 9 7"
            >
              <polygon
                points="0 4 1 3 3 5 8 0 9 1 3 7"
              />
            </svg>
          </CompleteIcon>
        </div>
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular custom (icon) hard error" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isHardError={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={true}
      >
        <div
          className="xui-progress-icon"
        >
          <ErrorIcon>
            <svg
              className="xui-progress-icon-error"
              viewBox="0 0 2 7"
            >
              <path
                d="M0,5 L1.99801961,5 L1.99801961,6.99797571 L0,6.99797571 L0,5 Z M0,0 L1.99801961,0 L1.99801961,4 L0,4 L0,0 Z"
              />
            </svg>
          </ErrorIcon>
        </div>
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular custom content" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isGrow={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={true}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <ElementSize>
          <div
            className={undefined}
          >
            <CircularTrack
              customContent={undefined}
              elementWidth={20}
              id="myCustomProgressId"
              isGrow={true}
              isSegmented={undefined}
              progress={3}
              qaHook={undefined}
              thickness={1.3098282872553617}
              total={5}
            >
              <IE11SvgScaleHack
                key="canvas"
                viewBoxHeight={20}
                viewBoxWidth={20}
              >
                <canvas
                  className="xui-progress-circular-scaler"
                  height={20}
                  width={20}
                />
              </IE11SvgScaleHack>
              <svg
                className="xui-progress-circular-wrapper"
                key="svg"
                viewBox="0 0 20 20"
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </ElementSize>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular custom hard error" correctly 1`] = `
<XUIProgressCircular
  hardErrorAlert="S"
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    customContent={undefined}
    hardErrorAlert="S"
    id="myCustomProgressId"
    isComplete={undefined}
    isHardError={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert="S"
        isComplete={undefined}
        isHardError={true}
      >
        <div
          className="xui-progress-icon"
        >
          S
        </div>
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular grow layout" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isGrow={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={true}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <ElementSize>
          <div
            className={undefined}
          >
            <CircularTrack
              customContent={undefined}
              elementWidth={20}
              id="myCustomProgressId"
              isGrow={true}
              isSegmented={undefined}
              progress={3}
              qaHook={undefined}
              thickness={1.3098282872553617}
              total={5}
            >
              <IE11SvgScaleHack
                key="canvas"
                viewBoxHeight={20}
                viewBoxWidth={20}
              >
                <canvas
                  className="xui-progress-circular-scaler"
                  height={20}
                  width={20}
                />
              </IE11SvgScaleHack>
              <svg
                className="xui-progress-circular-wrapper"
                key="svg"
                viewBox="0 0 20 20"
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </ElementSize>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular hard error" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isHardError={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={true}
      >
        <div
          className="xui-progress-icon"
        >
          <ErrorIcon>
            <svg
              className="xui-progress-icon-error"
              viewBox="0 0 2 7"
            >
              <path
                d="M0,5 L1.99801961,5 L1.99801961,6.99797571 L0,6.99797571 L0,5 Z M0,0 L1.99801961,0 L1.99801961,4 L0,4 L0,0 Z"
              />
            </svg>
          </ErrorIcon>
        </div>
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular overflow segments" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isOverflow={true}
  isSegmented={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={true}
    isSegmented={true}
    isSoftError={undefined}
    progress={5}
    toolTipId={undefined}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={true}
        progress={5}
        qaHook={undefined}
        thickness={undefined}
        total={6}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={true}
            progress={5}
            qaHook={undefined}
            thickness={3}
            total={6}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="4.10117918517108, 4.800000000000001"
                    strokeDashoffset={-2.4000000000000004}
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={8.90117918517108}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular overflow standard" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isOverflow={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={true}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={5}
    toolTipId={undefined}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={5}
        qaHook={undefined}
        thickness={undefined}
        total={6}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={5}
            qaHook={undefined}
            thickness={3}
            total={6}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={8.90117918517108}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular segments thickness" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  thickness={5}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={true}
    isSoftError={undefined}
    progress={3}
    thickness={5}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={true}
        progress={3}
        qaHook={undefined}
        thickness={5}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={true}
            progress={3}
            qaHook={undefined}
            thickness={5}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={7.5}
                    strokeDasharray="1.4247779607693793, 8"
                    strokeDashoffset={-4}
                    strokeWidth={5}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={7.5}
                  strokeWidth={5}
                />
                <circle
                  className="xui-progress-circular-current"
                  cx={10}
                  cy={10}
                  r={7.5}
                  strokeDasharray={47.12388980384689}
                  strokeDashoffset={18.84955592153876}
                  strokeWidth={5}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular segments" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={true}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={true}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={true}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="5.881415022205296, 4.800000000000001"
                    strokeDashoffset={-2.4000000000000004}
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular soft error" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isSoftError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-error-soft xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={true}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-error-soft xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard (exaggerated thickness)" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  thickness={99999}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    thickness={99999}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={99999}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={99999}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={5}
                    strokeDasharray="initial"
                    strokeWidth={10}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={5}
                  strokeWidth={10}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={5}
                  strokeDasharray={31.41592653589793}
                  strokeDashoffset={12.566370614359172}
                  strokeWidth={10}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard (zero thickness)" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  thickness={0}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    thickness={0}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={0}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={0}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard thickness" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  thickness={8}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    thickness={8}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={8}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={8}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={6}
                    strokeDasharray="initial"
                    strokeWidth={8}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={6}
                  strokeWidth={8}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={6}
                  strokeDasharray={37.69911184307752}
                  strokeDashoffset={15.079644737231007}
                  strokeWidth={8}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear grow (exaggerated thickness)" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  thickness={99999}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isGrow={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    thickness={99999}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={true}
        isSegmented={undefined}
        progress={3}
        thickness={99999}
        total={5}
      >
        <ElementSize
          className="xui-progress-size"
        >
          <div
            className="xui-progress-size"
          >
            <LinearTrack
              elementHeight={null}
              hasSegmentDots={undefined}
              isGrow={true}
              isSegmented={undefined}
              progress={3}
              thickness={99999}
              total={5}
            >
              <div
                className="xui-progress-linear-wrapper"
              >
                <div
                  className="xui-progress-linear-track"
                  style={
                    Object {
                      "height": "0px",
                    }
                  }
                >
                  <div
                    className="xui-progress-linear-current"
                    style={
                      Object {
                        "height": "0px",
                        "width": "60%",
                      }
                    }
                  />
                </div>
              </div>
            </LinearTrack>
          </div>
        </ElementSize>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear grow (minimal thickness)" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  thickness={10}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isGrow={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    thickness={10}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={true}
        isSegmented={undefined}
        progress={3}
        thickness={10}
        total={5}
      >
        <ElementSize
          className="xui-progress-size"
        >
          <div
            className="xui-progress-size"
          >
            <LinearTrack
              elementHeight={null}
              hasSegmentDots={undefined}
              isGrow={true}
              isSegmented={undefined}
              progress={3}
              thickness={10}
              total={5}
            >
              <div
                className="xui-progress-linear-wrapper"
              >
                <div
                  className="xui-progress-linear-track"
                  style={
                    Object {
                      "height": "0px",
                    }
                  }
                >
                  <div
                    className="xui-progress-linear-current"
                    style={
                      Object {
                        "height": "0px",
                        "width": "60%",
                      }
                    }
                  />
                </div>
              </div>
            </LinearTrack>
          </div>
        </ElementSize>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear grow layout" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isGrow={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={true}
        isSegmented={undefined}
        progress={3}
        thickness={undefined}
        total={5}
      >
        <ElementSize
          className="xui-progress-size"
        >
          <div
            className="xui-progress-size"
          >
            <LinearTrack
              elementHeight={null}
              hasSegmentDots={undefined}
              isGrow={true}
              isSegmented={undefined}
              progress={3}
              thickness={null}
              total={5}
            >
              <div
                className="xui-progress-linear-wrapper"
              >
                <div
                  className="xui-progress-linear-track"
                  style={
                    Object {
                      "height": "0px",
                    }
                  }
                >
                  <div
                    className="xui-progress-linear-current"
                    style={
                      Object {
                        "height": "0px",
                        "width": "60%",
                      }
                    }
                  />
                </div>
              </div>
            </LinearTrack>
          </div>
        </ElementSize>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear overflow segments" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isOverflow={true}
  isSegmented={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={true}
    isSegmented={true}
    isSoftError={undefined}
    progress={5}
    toolTipId={undefined}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={true}
        progress={5}
        thickness={undefined}
        total={6}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={true}
          progress={5}
          thickness={4}
          total={6}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="0"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 0",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="1"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 2px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="2"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 2px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="3"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 2px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="4"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 2px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-track"
              key="5"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 0 0 2px",
                }
              }
            />
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear overflow standard" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isOverflow={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={true}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={5}
    toolTipId={undefined}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={undefined}
        progress={5}
        thickness={undefined}
        total={6}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={undefined}
          progress={5}
          thickness={4}
          total={6}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-track"
              style={
                Object {
                  "height": "4px",
                }
              }
            >
              <div
                className="xui-progress-linear-current"
                style={
                  Object {
                    "height": "4px",
                    "width": "83.33333333333334%",
                  }
                }
              />
            </div>
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear segment dots" correctly 1`] = `
<XUIProgressLinear
  hasSegmentDots={true}
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  thickness={30}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasSegmentDots={true}
    id="myCustomProgressId"
    isOverflow={undefined}
    isSegmented={true}
    isSoftError={undefined}
    progress={3}
    thickness={30}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={true}
        isGrow={undefined}
        isSegmented={true}
        progress={3}
        thickness={30}
        total={5}
      >
        <LinearTrack
          hasSegmentDots={true}
          isGrow={undefined}
          isSegmented={true}
          progress={3}
          thickness={30}
          total={5}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-dot"
              key="0"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 0 0 15px",
                }
              }
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                style={
                  Object {
                    "height": "30px",
                    "left": "-15px",
                    "width": "30px",
                  }
                }
              />
            </div>
            <div
              className="xui-progress-linear-dot"
              key="1"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 0 0 0",
                }
              }
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                style={
                  Object {
                    "height": "30px",
                    "left": "-15px",
                    "width": "30px",
                  }
                }
              />
            </div>
            <div
              className="xui-progress-linear-dot"
              key="2"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 0 0 0",
                }
              }
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                style={
                  Object {
                    "height": "30px",
                    "left": "-15px",
                    "width": "30px",
                  }
                }
              />
            </div>
            <div
              className="xui-progress-linear-dot"
              key="3"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 0 0 0",
                }
              }
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-track"
                style={
                  Object {
                    "height": "30px",
                    "left": "-15px",
                    "width": "30px",
                  }
                }
              />
            </div>
            <div
              className="xui-progress-linear-dot"
              key="4"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 15px 0 0",
                }
              }
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-track"
                style={
                  Object {
                    "height": "30px",
                    "left": "-15px",
                    "width": "30px",
                  }
                }
              />
            </div>
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear segments thickness" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  thickness={30}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={undefined}
    isSegmented={true}
    isSoftError={undefined}
    progress={3}
    thickness={30}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={true}
        progress={3}
        thickness={30}
        total={5}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={true}
          progress={3}
          thickness={30}
          total={5}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="0"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 15px 0 0",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="1"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 15px 0 15px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="2"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 15px 0 15px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-track"
              key="3"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 15px 0 15px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-track"
              key="4"
              style={
                Object {
                  "height": "30px",
                  "margin": "0 0 0 15px",
                }
              }
            />
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear segments" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={undefined}
    isSegmented={true}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={true}
        progress={3}
        thickness={undefined}
        total={5}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={true}
          progress={3}
          thickness={4}
          total={5}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="0"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 0",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="1"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 2px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-current"
              key="2"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 2px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-track"
              key="3"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 2px 0 2px",
                }
              }
            />
            <div
              className="xui-progress-linear-segment xui-progress-linear-track"
              key="4"
              style={
                Object {
                  "height": "4px",
                  "margin": "0 0 0 2px",
                }
              }
            />
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear soft error" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isSoftError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-error-soft xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={true}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-error-soft xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        thickness={undefined}
        total={5}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={undefined}
          progress={3}
          thickness={4}
          total={5}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-track"
              style={
                Object {
                  "height": "4px",
                }
              }
            >
              <div
                className="xui-progress-linear-current"
                style={
                  Object {
                    "height": "4px",
                    "width": "60%",
                  }
                }
              />
            </div>
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear standard thickness (zero)" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  progress={3}
  thickness={0}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    thickness={0}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        thickness={0}
        total={5}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={undefined}
          progress={3}
          thickness={0}
          total={5}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-track"
              style={
                Object {
                  "height": "4px",
                }
              }
            >
              <div
                className="xui-progress-linear-current"
                style={
                  Object {
                    "height": "4px",
                    "width": "60%",
                  }
                }
              />
            </div>
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear standard thickness" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  progress={3}
  thickness={30}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    thickness={30}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        thickness={30}
        total={5}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={undefined}
          progress={3}
          thickness={30}
          total={5}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-track"
              style={
                Object {
                  "height": "30px",
                }
              }
            >
              <div
                className="xui-progress-linear-current"
                style={
                  Object {
                    "height": "30px",
                    "width": "60%",
                  }
                }
              />
            </div>
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear standard" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasSegmentDots={undefined}
    id="myCustomProgressId"
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      data-automationid={undefined}
      role="progressbar"
    >
      <LinearGrowth
        hasSegmentDots={undefined}
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        thickness={undefined}
        total={5}
      >
        <LinearTrack
          hasSegmentDots={undefined}
          isGrow={undefined}
          isSegmented={undefined}
          progress={3}
          thickness={4}
          total={5}
        >
          <div
            className="xui-progress-linear-wrapper"
          >
            <div
              className="xui-progress-linear-track"
              style={
                Object {
                  "height": "4px",
                }
              }
            >
              <div
                className="xui-progress-linear-current"
                style={
                  Object {
                    "height": "4px",
                    "width": "60%",
                  }
                }
              />
            </div>
          </div>
        </LinearTrack>
      </LinearGrowth>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> render supplied content as a child of the nested progress indicator 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  qaHook="progress-indicator"
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={
      <img
        src="/my-image.png"
      />
    }
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    qaHook="progress-indicator"
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid="progress-indicator"
      role="progressbar"
    >
      <CircularGrowth
        customContent={
          <img
            src="/my-image.png"
          />
        }
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook="progress-indicator"
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={
              <img
                src="/my-image.png"
              />
            }
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook="progress-indicator"
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <div
              className="xui-progress-circular-content"
              data-automationid="progress-indicator-custom-content"
              key="content"
              style={
                Object {
                  "bottom": "calc(15% - 1px)",
                  "left": "calc(15% - 1px)",
                  "right": "calc(15% - 1px)",
                  "top": "calc(15% - 1px)",
                }
              }
            >
              <img
                src="/my-image.png"
              />
            </div>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should default to a standard format when segments are calculated at less than one 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isLinear={true}
  isSegmented={true}
  progress={3}
  total={0}
>
  <ProgressWrapper
    ariaMax={0}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isLinear={true}
    isOverflow={undefined}
    isSegmented={false}
    isSoftError={undefined}
    progress={0}
    toolTipId={undefined}
    toolTipMessage="3 of 0"
    total={0}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={0}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 0"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={false}
        progress={0}
        qaHook={undefined}
        thickness={undefined}
        total={0}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={false}
            progress={0}
            qaHook={undefined}
            thickness={3}
            total={0}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={0}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should override a complete alert with a soft error alert 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isAlertOnComplete={true}
  isSoftError={true}
  progress={5}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={5}
    classes="xui-progress xui-progress-error-soft xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isAlertOnComplete={true}
    isComplete={false}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={true}
    progress={5}
    toolTipId={undefined}
    toolTipMessage="5 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={5}
      aria-valuetext="5 of 5"
      className="xui-progress xui-progress-error-soft xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={5}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={5}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={0}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={false}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should override a soft error alert with a hard error alert 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isHardError={true}
  isSoftError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isHardError={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={false}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={true}
      >
        <div
          className="xui-progress-icon"
        >
          <ErrorIcon>
            <svg
              className="xui-progress-icon-error"
              viewBox="0 0 2 7"
            >
              <path
                d="M0,5 L1.99801961,5 L1.99801961,6.99797571 L0,6.99797571 L0,5 Z M0,0 L1.99801961,0 L1.99801961,4 L0,4 L0,0 Z"
              />
            </svg>
          </ErrorIcon>
        </div>
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should render hard error alert override as jsx 1`] = `
<XUIProgressCircular
  hardErrorAlert={
    <img
      alt="error alert"
      src="http://via.placeholder.com/20x20"
    />
  }
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    customContent={undefined}
    hardErrorAlert={
      <img
        alt="error alert"
        src="http://via.placeholder.com/20x20"
      />
    }
    id="myCustomProgressId"
    isComplete={undefined}
    isHardError={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={
          <img
            alt="error alert"
            src="http://via.placeholder.com/20x20"
          />
        }
        isComplete={undefined}
        isHardError={true}
      >
        <div
          className="xui-progress-icon"
        >
          <img
            alt="error alert"
            src="http://via.placeholder.com/20x20"
          />
        </div>
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should render hard error alert override as text 1`] = `
<XUIProgressCircular
  hardErrorAlert="S"
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    customContent={undefined}
    hardErrorAlert="S"
    id="myCustomProgressId"
    isComplete={undefined}
    isHardError={true}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={3}
    toolTipId={undefined}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={3}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={3}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={21.362830044410597}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert="S"
        isComplete={undefined}
        isHardError={true}
      >
        <div
          className="xui-progress-icon"
        >
          S
        </div>
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should set a negative progress value to 0 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={-1}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={0}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={0}
    toolTipId={undefined}
    toolTipMessage="0 of 5"
    total={5}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={0}
      aria-valuetext="0 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={0}
        qaHook={undefined}
        thickness={undefined}
        total={5}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={0}
            qaHook={undefined}
            thickness={3}
            total={5}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={53.40707511102649}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should set a negative total value to 0 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  total={-1}
>
  <ProgressWrapper
    ariaMax={0}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={undefined}
    id="myCustomProgressId"
    isComplete={undefined}
    isOverflow={undefined}
    isSegmented={undefined}
    isSoftError={undefined}
    progress={0}
    toolTipId={undefined}
    toolTipMessage="3 of 0"
    total={0}
  >
    <div
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-valuemax={0}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 0"
      className="xui-progress xui-progress-circular"
      data-automationid={undefined}
      role="progressbar"
    >
      <CircularGrowth
        customContent={undefined}
        id="myCustomProgressId"
        isGrow={undefined}
        isSegmented={undefined}
        progress={0}
        qaHook={undefined}
        thickness={undefined}
        total={0}
      >
        <div>
          <CircularTrack
            customContent={undefined}
            elementWidth={20}
            id="myCustomProgressId"
            isGrow={undefined}
            isSegmented={undefined}
            progress={0}
            qaHook={undefined}
            thickness={3}
            total={0}
          >
            <IE11SvgScaleHack
              key="canvas"
              viewBoxHeight={20}
              viewBoxWidth={20}
            >
              <canvas
                className="xui-progress-circular-scaler"
                height={20}
                width={20}
              />
            </IE11SvgScaleHack>
            <svg
              className="xui-progress-circular-wrapper"
              key="svg"
              viewBox="0 0 20 20"
            >
              <defs>
                <mask
                  height={20}
                  id="myCustomProgressId-progress-mask"
                  maskUnits="userSpaceOnUse"
                  width={20}
                  x="0"
                  y="0"
                >
                  <circle
                    className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray="initial"
                    strokeWidth={3}
                  />
                </mask>
              </defs>
              <g
                mask="url(#myCustomProgressId-progress-mask)"
              >
                <circle
                  className="xui-progress-circular-track"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeWidth={3}
                />
                <circle
                  className="xui-progress-circular-current xui-progress-roundcap"
                  cx={10}
                  cy={10}
                  r={8.5}
                  strokeDasharray={53.40707511102649}
                  strokeDashoffset={0}
                  strokeWidth={3}
                />
              </g>
            </svg>
          </CircularTrack>
        </div>
      </CircularGrowth>
      <CircularIcon
        hardErrorAlert={undefined}
        isComplete={undefined}
        isHardError={undefined}
      >
        <div
          className="xui-progress-icon"
        />
      </CircularIcon>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;
