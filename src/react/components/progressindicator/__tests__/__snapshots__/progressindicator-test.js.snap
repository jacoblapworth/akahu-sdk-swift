// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<XUIProgressIndicator /> custom colors should not create a color override from a key that is not recognise 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  progressColor="banana"
  total={5}
  totalColor="potato"
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    progressColor="banana"
    toolTipMessage="3 of 5"
    total={5}
    totalColor="potato"
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> custom colors should override default color with an applicable color key 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  progressColor="orange"
  total={5}
  totalColor="turquoise"
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    progressColor="orange"
    toolTipMessage="3 of 5"
    total={5}
    totalColor="turquoise"
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-xui-progress-current-color="orange"
      data-xui-progress-total-color="turquoise"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular completion alert" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isAlertOnComplete={true}
  progress={5}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={5}
    classes="xui-progress xui-progress-circular xui-progress-complete"
    id="myCustomProgressId"
    isAlertOnComplete={true}
    isComplete={true}
    progress={5}
    toolTipMessage="5 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={5}
      aria-valuetext="5 of 5"
      className="xui-progress xui-progress-circular xui-progress-complete"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={5}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={5}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={0}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          isComplete={true}
        >
          <div
            className="xui-progress-icon"
          >
            <ForwardRef
              icon={
                Object {
                  "height": 10,
                  "path": "M0 5.714l1.444-1.428 2.89 2.857L11.555 0 13 1.429 4.333 10z",
                  "width": 13,
                }
              }
              role="presentation"
              size="medium"
            >
              <svg
                className="xui-icon"
                focusable="false"
                height={10}
                viewBox="0 0 13 10"
                width={13}
              >
                <path
                  d="M0 5.714l1.444-1.428 2.89 2.857L11.555 0 13 1.429 4.333 10z"
                  role="presentation"
                />
              </svg>
            </ForwardRef>
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular custom (icon) hard error" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    id="myCustomProgressId"
    isHardError={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          isHardError={true}
        >
          <div
            className="xui-progress-icon"
          >
            <ForwardRef
              className="xui-progress-icon-error"
              icon={
                Object {
                  "height": 8,
                  "path": "M0,0 L2,0 L2,5 L0,5 L0,0 Z M0,6 L2,6 L2,8 L0,8 L0,6 Z",
                  "width": 2,
                }
              }
              role="presentation"
              size="medium"
            >
              <svg
                className="xui-icon xui-progress-icon-error"
                focusable="false"
                height={8}
                viewBox="0 0 2 8"
                width={2}
              >
                <path
                  d="M0,0 L2,0 L2,5 L0,5 L0,0 Z M0,6 L2,6 L2,8 L0,8 L0,6 Z"
                  role="presentation"
                />
              </svg>
            </ForwardRef>
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular custom content" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-circular"
    id="myCustomProgressId"
    isGrow={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          isGrow={true}
          progress={3}
          total={5}
        >
          <ElementSize>
            <div>
              <CircularTrack
                elementWidth={20}
                id="myCustomProgressId"
                isGrow={true}
                progress={3}
                thickness={1.3098282872553617}
                total={5}
              >
                <svg
                  className="xui-progress-circular-wrapper"
                  height={20}
                  key="svg"
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <defs>
                    <mask
                      height={20}
                      id="myCustomProgressId-progress-mask"
                      maskUnits="userSpaceOnUse"
                      width={20}
                      x="0"
                      y="0"
                    >
                      <circle
                        className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                        cx={10}
                        cy={10}
                        r={8.5}
                        strokeDasharray="initial"
                        strokeWidth={3}
                      />
                    </mask>
                  </defs>
                  <g
                    mask="url(#myCustomProgressId-progress-mask)"
                  >
                    <circle
                      className="xui-progress-circular-track"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeWidth={3}
                    />
                    <circle
                      className="xui-progress-circular-current xui-progress-roundcap"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray={53.40707511102649}
                      strokeDashoffset={21.362830044410597}
                      strokeWidth={3}
                    />
                  </g>
                </svg>
              </CircularTrack>
            </div>
          </ElementSize>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular custom hard error" correctly 1`] = `
<XUIProgressCircular
  hardErrorAlert="S"
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    hardErrorAlert="S"
    id="myCustomProgressId"
    isHardError={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          hardErrorAlert="S"
          isHardError={true}
        >
          <div
            className="xui-progress-icon"
          >
            S
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular grow layout" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-circular"
    id="myCustomProgressId"
    isGrow={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          isGrow={true}
          progress={3}
          total={5}
        >
          <ElementSize>
            <div>
              <CircularTrack
                elementWidth={20}
                id="myCustomProgressId"
                isGrow={true}
                progress={3}
                thickness={1.3098282872553617}
                total={5}
              >
                <svg
                  className="xui-progress-circular-wrapper"
                  height={20}
                  key="svg"
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <defs>
                    <mask
                      height={20}
                      id="myCustomProgressId-progress-mask"
                      maskUnits="userSpaceOnUse"
                      width={20}
                      x="0"
                      y="0"
                    >
                      <circle
                        className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                        cx={10}
                        cy={10}
                        r={8.5}
                        strokeDasharray="initial"
                        strokeWidth={3}
                      />
                    </mask>
                  </defs>
                  <g
                    mask="url(#myCustomProgressId-progress-mask)"
                  >
                    <circle
                      className="xui-progress-circular-track"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeWidth={3}
                    />
                    <circle
                      className="xui-progress-circular-current xui-progress-roundcap"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray={53.40707511102649}
                      strokeDashoffset={21.362830044410597}
                      strokeWidth={3}
                    />
                  </g>
                </svg>
              </CircularTrack>
            </div>
          </ElementSize>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular hard error" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    id="myCustomProgressId"
    isHardError={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          isHardError={true}
        >
          <div
            className="xui-progress-icon"
          >
            <ForwardRef
              className="xui-progress-icon-error"
              icon={
                Object {
                  "height": 8,
                  "path": "M0,0 L2,0 L2,5 L0,5 L0,0 Z M0,6 L2,6 L2,8 L0,8 L0,6 Z",
                  "width": 2,
                }
              }
              role="presentation"
              size="medium"
            >
              <svg
                className="xui-icon xui-progress-icon-error"
                focusable="false"
                height={8}
                viewBox="0 0 2 8"
                width={2}
              >
                <path
                  d="M0,0 L2,0 L2,5 L0,5 L0,0 Z M0,6 L2,6 L2,8 L0,8 L0,6 Z"
                  role="presentation"
                />
              </svg>
            </ForwardRef>
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular multiline completion alert" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isAlertOnComplete={true}
  progress={5}
  total={5}
  viewports={
    Array [
      Object {
        "height": 768,
        "label": "just desktop",
        "width": 1024,
      },
      Object {
        "height": 500,
        "label": "smaller than xsmall breakpoint",
        "width": 320,
      },
    ]
  }
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={5}
    classes="xui-progress xui-progress-circular xui-progress-complete"
    id="myCustomProgressId"
    isAlertOnComplete={true}
    isComplete={true}
    progress={5}
    toolTipMessage="5 of 5"
    total={5}
    viewports={
      Array [
        Object {
          "height": 768,
          "label": "just desktop",
          "width": 1024,
        },
        Object {
          "height": 500,
          "label": "smaller than xsmall breakpoint",
          "width": 320,
        },
      ]
    }
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={5}
      aria-valuetext="5 of 5"
      className="xui-progress xui-progress-circular xui-progress-complete"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={5}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={5}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={0}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          isComplete={true}
        >
          <div
            className="xui-progress-icon"
          >
            <ForwardRef
              icon={
                Object {
                  "height": 10,
                  "path": "M0 5.714l1.444-1.428 2.89 2.857L11.555 0 13 1.429 4.333 10z",
                  "width": 13,
                }
              }
              role="presentation"
              size="medium"
            >
              <svg
                className="xui-icon"
                focusable="false"
                height={10}
                viewBox="0 0 13 10"
                width={13}
              >
                <path
                  d="M0 5.714l1.444-1.428 2.89 2.857L11.555 0 13 1.429 4.333 10z"
                  role="presentation"
                />
              </svg>
            </ForwardRef>
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular multiline" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  total={5}
  viewports={
    Array [
      Object {
        "height": 768,
        "label": "just desktop",
        "width": 1024,
      },
      Object {
        "height": 500,
        "label": "smaller than xsmall breakpoint",
        "width": 320,
      },
    ]
  }
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
    viewports={
      Array [
        Object {
          "height": 768,
          "label": "just desktop",
          "width": 1024,
        },
        Object {
          "height": 500,
          "label": "smaller than xsmall breakpoint",
          "width": 320,
        },
      ]
    }
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular overflow segments" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isOverflow={true}
  isSegmented={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-circular"
    id="myCustomProgressId"
    isOverflow={true}
    isSegmented={true}
    progress={5}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          isSegmented={true}
          progress={5}
          total={6}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              isSegmented={true}
              progress={5}
              thickness={3}
              total={6}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="4.10117918517108, 4.800000000000001"
                      strokeDashoffset={-2.4000000000000004}
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={8.90117918517108}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular overflow standard" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isOverflow={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-circular"
    id="myCustomProgressId"
    isOverflow={true}
    progress={5}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={5}
          total={6}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={5}
              thickness={3}
              total={6}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={8.90117918517108}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular segments thickness" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  thickness={5}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    isSegmented={true}
    progress={3}
    thickness={5}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          isSegmented={true}
          progress={3}
          thickness={5}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              isSegmented={true}
              progress={3}
              thickness={5}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={7.5}
                      strokeDasharray="1.4247779607693793, 8"
                      strokeDashoffset={-4}
                      strokeWidth={5}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={7.5}
                    strokeWidth={5}
                  />
                  <circle
                    className="xui-progress-circular-current"
                    cx={10}
                    cy={10}
                    r={7.5}
                    strokeDasharray={47.12388980384689}
                    strokeDashoffset={18.84955592153876}
                    strokeWidth={5}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular segments" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    isSegmented={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          isSegmented={true}
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              isSegmented={true}
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="5.881415022205296, 4.800000000000001"
                      strokeDashoffset={-2.4000000000000004}
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular soft error" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isSoftError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-error-soft xui-progress-circular"
    id="myCustomProgressId"
    isSoftError={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-error-soft xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard (exaggerated thickness)" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  thickness={99999}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    thickness={99999}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          thickness={99999}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={99999}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={5}
                      strokeDasharray="initial"
                      strokeWidth={10}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={5}
                    strokeWidth={10}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={5}
                    strokeDasharray={31.41592653589793}
                    strokeDashoffset={12.566370614359172}
                    strokeWidth={10}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard (zero thickness)" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  thickness={0}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    thickness={0}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          thickness={0}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={0}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard thickness" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  thickness={8}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    thickness={8}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          thickness={8}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={8}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={6}
                      strokeDasharray="initial"
                      strokeWidth={8}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={6}
                    strokeWidth={8}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={6}
                    strokeDasharray={37.69911184307752}
                    strokeDashoffset={15.079644737231007}
                    strokeWidth={8}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular standard" correctly 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator circular tooltip" correctly 1`] = `
<XUIProgressCircular
  hasToolTip={true}
  id="myCustomProgressId"
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    hasToolTip={true}
    id="myCustomProgressId"
    progress={3}
    toolTipId="myCustomProgressId-progress--tooltip"
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <XUITooltip
        closeDelay={100}
        id="myCustomProgressId-progress--tooltip"
        isDisabled={false}
        isHidden={true}
        maxWidth={220}
        openDelay={500}
        preferredPosition="top"
        trigger={
          <div
            className="xui-progress--fragment"
          >
            <CircularGrowth
              id="myCustomProgressId"
              progress={3}
              total={5}
            />
          </div>
        }
        triggerOnBlur={true}
        triggerOnClick={true}
        triggerOnFocus={false}
        triggerOnHover={true}
        wrapperClassName="xui-progress--tooltip"
      >
        <span
          className="xui-progress--tooltip xui-tooltip"
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        >
          <div
            aria-describedby="myCustomProgressId-progress--tooltip"
            className="xui-progress--fragment"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
          >
            <CircularGrowth
              id="myCustomProgressId"
              progress={3}
              total={5}
            >
              <div>
                <CircularTrack
                  elementWidth={20}
                  id="myCustomProgressId"
                  progress={3}
                  thickness={3}
                  total={5}
                >
                  <svg
                    className="xui-progress-circular-wrapper"
                    height={20}
                    key="svg"
                    viewBox="0 0 20 20"
                    width={20}
                  >
                    <defs>
                      <mask
                        height={20}
                        id="myCustomProgressId-progress-mask"
                        maskUnits="userSpaceOnUse"
                        width={20}
                        x="0"
                        y="0"
                      >
                        <circle
                          className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                          cx={10}
                          cy={10}
                          r={8.5}
                          strokeDasharray="initial"
                          strokeWidth={3}
                        />
                      </mask>
                    </defs>
                    <g
                      mask="url(#myCustomProgressId-progress-mask)"
                    >
                      <circle
                        className="xui-progress-circular-track"
                        cx={10}
                        cy={10}
                        r={8.5}
                        strokeWidth={3}
                      />
                      <circle
                        className="xui-progress-circular-current xui-progress-roundcap"
                        cx={10}
                        cy={10}
                        r={8.5}
                        strokeDasharray={53.40707511102649}
                        strokeDashoffset={21.362830044410597}
                        strokeWidth={3}
                      />
                    </g>
                  </svg>
                </CircularTrack>
              </div>
            </CircularGrowth>
          </div>
          <PositioningInline
            closeDelay={100}
            id="myCustomProgressId-progress--tooltip"
            isDisabled={false}
            isHidden={true}
            isNotResponsive={false}
            isTriggerWidthMatched={false}
            isVisible={true}
            maxWidth={220}
            openDelay={500}
            parentRef={
              <span
                class="xui-progress--tooltip xui-tooltip"
              >
                <div
                  aria-describedby="myCustomProgressId-progress--tooltip"
                  class="xui-progress--fragment"
                >
                  <div>
                    <svg
                      class="xui-progress-circular-wrapper"
                      height="20"
                      viewBox="0 0 20 20"
                      width="20"
                    >
                      <defs>
                        <mask
                          height="20"
                          id="myCustomProgressId-progress-mask"
                          maskUnits="userSpaceOnUse"
                          width="20"
                          x="0"
                          y="0"
                        >
                          <circle
                            class="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                            cx="10"
                            cy="10"
                            r="8.5"
                            stroke-dasharray="initial"
                            stroke-width="3"
                          />
                        </mask>
                      </defs>
                      <g
                        mask="url(#myCustomProgressId-progress-mask)"
                      >
                        <circle
                          class="xui-progress-circular-track"
                          cx="10"
                          cy="10"
                          r="8.5"
                          stroke-width="3"
                        />
                        <circle
                          class="xui-progress-circular-current xui-progress-roundcap"
                          cx="10"
                          cy="10"
                          r="8.5"
                          stroke-dasharray="53.40707511102649"
                          stroke-dashoffset="21.362830044410597"
                          stroke-width="3"
                        />
                      </g>
                    </svg>
                  </div>
                </div>
                <span
                  class="xui-positioningInline"
                  style="flex-direction: column;"
                >
                  <span
                    aria-hidden="true"
                    class="xui-tooltip--tip"
                    id="myCustomProgressId-progress--tooltip"
                    role="tooltip"
                    style="margin-right: -220px;"
                  >
                    3 of 5
                  </span>
                </span>
              </span>
            }
            preferredPosition="top"
            shouldRestrictMaxHeight={true}
            trigger={
              <div
                className="xui-progress--fragment"
              >
                <CircularGrowth
                  id="myCustomProgressId"
                  progress={3}
                  total={5}
                />
              </div>
            }
            triggerDropdownGap={10}
            triggerOnBlur={true}
            triggerOnClick={true}
            triggerOnFocus={false}
            triggerOnHover={true}
            viewportGutter={10}
            wrapperClassName="xui-progress--tooltip"
          >
            <span
              className="xui-positioningInline"
              style={
                Object {
                  "flexDirection": "column",
                  "top": undefined,
                }
              }
            >
              <span
                aria-hidden={true}
                className="xui-tooltip--tip"
                id="myCustomProgressId-progress--tooltip"
                role="tooltip"
                style={
                  Object {
                    "marginLeft": null,
                    "marginRight": -220,
                    "maxHeight": null,
                    "maxWidth": null,
                    "width": null,
                  }
                }
              >
                3 of 5
              </span>
            </span>
          </PositioningInline>
        </span>
      </XUITooltip>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear grow (exaggerated thickness)" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  thickness={99999}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-linear"
    id="myCustomProgressId"
    isGrow={true}
    progress={3}
    thickness={99999}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          isGrow={true}
          progress={3}
          thickness={99999}
          total={5}
        >
          <ElementSize
            className="xui-progress-size"
          >
            <div
              className="xui-progress-size"
            >
              <LinearTrack
                elementHeight={null}
                isGrow={true}
                progress={3}
                thickness={99999}
                total={5}
              >
                <div
                  className="xui-progress-linear-wrapper"
                >
                  <div
                    className="xui-progress-linear-track"
                    style={
                      Object {
                        "height": "0px",
                      }
                    }
                  >
                    <div
                      className="xui-progress-linear-current"
                      style={
                        Object {
                          "height": "0px",
                          "width": "60%",
                        }
                      }
                    />
                  </div>
                </div>
              </LinearTrack>
            </div>
          </ElementSize>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear grow (minimal thickness)" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  thickness={10}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-linear"
    id="myCustomProgressId"
    isGrow={true}
    progress={3}
    thickness={10}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          isGrow={true}
          progress={3}
          thickness={10}
          total={5}
        >
          <ElementSize
            className="xui-progress-size"
          >
            <div
              className="xui-progress-size"
            >
              <LinearTrack
                elementHeight={null}
                isGrow={true}
                progress={3}
                thickness={10}
                total={5}
              >
                <div
                  className="xui-progress-linear-wrapper"
                >
                  <div
                    className="xui-progress-linear-track"
                    style={
                      Object {
                        "height": "0px",
                      }
                    }
                  >
                    <div
                      className="xui-progress-linear-current"
                      style={
                        Object {
                          "height": "0px",
                          "width": "60%",
                        }
                      }
                    />
                  </div>
                </div>
              </LinearTrack>
            </div>
          </ElementSize>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear grow layout" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isGrow={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-grow xui-progress-linear"
    id="myCustomProgressId"
    isGrow={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-grow xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          isGrow={true}
          progress={3}
          total={5}
        >
          <ElementSize
            className="xui-progress-size"
          >
            <div
              className="xui-progress-size"
            >
              <LinearTrack
                elementHeight={null}
                isGrow={true}
                progress={3}
                thickness={null}
                total={5}
              >
                <div
                  className="xui-progress-linear-wrapper"
                >
                  <div
                    className="xui-progress-linear-track"
                    style={
                      Object {
                        "height": "0px",
                      }
                    }
                  >
                    <div
                      className="xui-progress-linear-current"
                      style={
                        Object {
                          "height": "0px",
                          "width": "60%",
                        }
                      }
                    />
                  </div>
                </div>
              </LinearTrack>
            </div>
          </ElementSize>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear overflow segments" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isOverflow={true}
  isSegmented={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-linear"
    id="myCustomProgressId"
    isOverflow={true}
    isSegmented={true}
    progress={5}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          isSegmented={true}
          progress={5}
          total={6}
        >
          <LinearTrack
            isSegmented={true}
            progress={5}
            thickness={4}
            total={6}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="0"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 0",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="1"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 2px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="2"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 2px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="3"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 2px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="4"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 2px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-track"
                key="5"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 0 0 2px",
                  }
                }
              />
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear overflow standard" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isOverflow={true}
  progress={6}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={6}
    classes="xui-progress xui-progress-overflow xui-progress-linear"
    id="myCustomProgressId"
    isOverflow={true}
    progress={5}
    toolTipMessage="6 of 5"
    total={6}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={6}
      aria-valuetext="6 of 5"
      className="xui-progress xui-progress-overflow xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          progress={5}
          total={6}
        >
          <LinearTrack
            progress={5}
            thickness={4}
            total={6}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-track"
                style={
                  Object {
                    "height": "4px",
                  }
                }
              >
                <div
                  className="xui-progress-linear-current"
                  style={
                    Object {
                      "height": "4px",
                      "width": "83.33333333333334%",
                    }
                  }
                />
              </div>
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear segment dots" correctly 1`] = `
<XUIProgressLinear
  hasSegmentDots={true}
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  thickness={30}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasSegmentDots={true}
    id="myCustomProgressId"
    isSegmented={true}
    progress={3}
    thickness={30}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          hasSegmentDots={true}
          isSegmented={true}
          progress={3}
          thickness={30}
          total={5}
        >
          <LinearTrack
            hasSegmentDots={true}
            isSegmented={true}
            progress={3}
            thickness={30}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-dot"
                key="0"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 0 0 15px",
                  }
                }
              >
                <div
                  className="xui-progress-linear-segment xui-progress-linear-current"
                  style={
                    Object {
                      "height": "30px",
                      "left": "-15px",
                      "width": "30px",
                    }
                  }
                />
              </div>
              <div
                className="xui-progress-linear-dot"
                key="1"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 0 0 0",
                  }
                }
              >
                <div
                  className="xui-progress-linear-segment xui-progress-linear-current"
                  style={
                    Object {
                      "height": "30px",
                      "left": "-15px",
                      "width": "30px",
                    }
                  }
                />
              </div>
              <div
                className="xui-progress-linear-dot"
                key="2"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 0 0 0",
                  }
                }
              >
                <div
                  className="xui-progress-linear-segment xui-progress-linear-current"
                  style={
                    Object {
                      "height": "30px",
                      "left": "-15px",
                      "width": "30px",
                    }
                  }
                />
              </div>
              <div
                className="xui-progress-linear-dot"
                key="3"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 0 0 0",
                  }
                }
              >
                <div
                  className="xui-progress-linear-segment xui-progress-linear-track"
                  style={
                    Object {
                      "height": "30px",
                      "left": "-15px",
                      "width": "30px",
                    }
                  }
                />
              </div>
              <div
                className="xui-progress-linear-dot"
                key="4"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 15px 0 0",
                  }
                }
              >
                <div
                  className="xui-progress-linear-segment xui-progress-linear-track"
                  style={
                    Object {
                      "height": "30px",
                      "left": "-15px",
                      "width": "30px",
                    }
                  }
                />
              </div>
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear segments thickness" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  thickness={30}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    id="myCustomProgressId"
    isSegmented={true}
    progress={3}
    thickness={30}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          isSegmented={true}
          progress={3}
          thickness={30}
          total={5}
        >
          <LinearTrack
            isSegmented={true}
            progress={3}
            thickness={30}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="0"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 15px 0 0",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="1"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 15px 0 15px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="2"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 15px 0 15px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-track"
                key="3"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 15px 0 15px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-track"
                key="4"
                style={
                  Object {
                    "height": "30px",
                    "margin": "0 0 0 15px",
                  }
                }
              />
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear segments" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isSegmented={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    id="myCustomProgressId"
    isSegmented={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          isSegmented={true}
          progress={3}
          total={5}
        >
          <LinearTrack
            isSegmented={true}
            progress={3}
            thickness={4}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="0"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 0",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="1"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 2px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-current"
                key="2"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 2px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-track"
                key="3"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 2px 0 2px",
                  }
                }
              />
              <div
                className="xui-progress-linear-segment xui-progress-linear-track"
                key="4"
                style={
                  Object {
                    "height": "4px",
                    "margin": "0 0 0 2px",
                  }
                }
              />
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear soft error" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  isSoftError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-error-soft xui-progress-linear"
    id="myCustomProgressId"
    isSoftError={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-error-soft xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          progress={3}
          total={5}
        >
          <LinearTrack
            progress={3}
            thickness={4}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-track"
                style={
                  Object {
                    "height": "4px",
                  }
                }
              >
                <div
                  className="xui-progress-linear-current"
                  style={
                    Object {
                      "height": "4px",
                      "width": "60%",
                    }
                  }
                />
              </div>
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear standard - very short" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  progress={4}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={4}
    classes="xui-progress xui-progress-linear"
    id="myCustomProgressId"
    progress={4}
    toolTipMessage="4 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={4}
      aria-valuetext="4 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          progress={4}
          total={5}
        >
          <LinearTrack
            progress={4}
            thickness={4}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-track"
                style={
                  Object {
                    "height": "4px",
                  }
                }
              >
                <div
                  className="xui-progress-linear-current"
                  style={
                    Object {
                      "height": "4px",
                      "width": "80%",
                    }
                  }
                />
              </div>
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear standard thickness (zero)" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  progress={3}
  thickness={0}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    id="myCustomProgressId"
    progress={3}
    thickness={0}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          progress={3}
          thickness={0}
          total={5}
        >
          <LinearTrack
            progress={3}
            thickness={0}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-track"
                style={
                  Object {
                    "height": "4px",
                  }
                }
              >
                <div
                  className="xui-progress-linear-current"
                  style={
                    Object {
                      "height": "4px",
                      "width": "60%",
                    }
                  }
                />
              </div>
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear standard thickness" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  progress={3}
  thickness={30}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    id="myCustomProgressId"
    progress={3}
    thickness={30}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          progress={3}
          thickness={30}
          total={5}
        >
          <LinearTrack
            progress={3}
            thickness={30}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-track"
                style={
                  Object {
                    "height": "30px",
                  }
                }
              >
                <div
                  className="xui-progress-linear-current"
                  style={
                    Object {
                      "height": "30px",
                      "width": "60%",
                    }
                  }
                />
              </div>
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear standard" correctly 1`] = `
<XUIProgressLinear
  id="myCustomProgressId"
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    id="myCustomProgressId"
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <LinearGrowth
          progress={3}
          total={5}
        >
          <LinearTrack
            progress={3}
            thickness={4}
            total={5}
          >
            <div
              className="xui-progress-linear-wrapper"
            >
              <div
                className="xui-progress-linear-track"
                style={
                  Object {
                    "height": "4px",
                  }
                }
              >
                <div
                  className="xui-progress-linear-current"
                  style={
                    Object {
                      "height": "4px",
                      "width": "60%",
                    }
                  }
                />
              </div>
            </div>
          </LinearTrack>
        </LinearGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> emulate stories should render scenario "Instances/XUIProgressIndicator linear tooltip" correctly 1`] = `
<XUIProgressLinear
  hasToolTip={true}
  id="myCustomProgressId"
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-linear"
    hasToolTip={true}
    id="myCustomProgressId"
    progress={3}
    toolTipId="myCustomProgressId-progress--tooltip"
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-linear"
      role="progressbar"
    >
      <XUITooltip
        closeDelay={100}
        id="myCustomProgressId-progress--tooltip"
        isDisabled={false}
        isHidden={true}
        maxWidth={220}
        openDelay={500}
        preferredPosition="top"
        trigger={
          <div
            className="xui-progress--fragment"
          >
            <LinearGrowth
              progress={3}
              total={5}
            />
          </div>
        }
        triggerOnBlur={true}
        triggerOnClick={true}
        triggerOnFocus={false}
        triggerOnHover={true}
        wrapperClassName="xui-progress--tooltip"
      >
        <span
          className="xui-progress--tooltip xui-tooltip"
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        >
          <div
            aria-describedby="myCustomProgressId-progress--tooltip"
            className="xui-progress--fragment"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
          >
            <LinearGrowth
              progress={3}
              total={5}
            >
              <LinearTrack
                progress={3}
                thickness={4}
                total={5}
              >
                <div
                  className="xui-progress-linear-wrapper"
                >
                  <div
                    className="xui-progress-linear-track"
                    style={
                      Object {
                        "height": "4px",
                      }
                    }
                  >
                    <div
                      className="xui-progress-linear-current"
                      style={
                        Object {
                          "height": "4px",
                          "width": "60%",
                        }
                      }
                    />
                  </div>
                </div>
              </LinearTrack>
            </LinearGrowth>
          </div>
          <PositioningInline
            closeDelay={100}
            id="myCustomProgressId-progress--tooltip"
            isDisabled={false}
            isHidden={true}
            isNotResponsive={false}
            isTriggerWidthMatched={false}
            isVisible={true}
            maxWidth={220}
            openDelay={500}
            parentRef={
              <span
                class="xui-progress--tooltip xui-tooltip"
              >
                <div
                  aria-describedby="myCustomProgressId-progress--tooltip"
                  class="xui-progress--fragment"
                >
                  <div
                    class="xui-progress-linear-wrapper"
                  >
                    <div
                      class="xui-progress-linear-track"
                      style="height: 4px;"
                    >
                      <div
                        class="xui-progress-linear-current"
                        style="height: 4px; width: 60%;"
                      />
                    </div>
                  </div>
                </div>
                <span
                  class="xui-positioningInline"
                  style="flex-direction: column;"
                >
                  <span
                    aria-hidden="true"
                    class="xui-tooltip--tip"
                    id="myCustomProgressId-progress--tooltip"
                    role="tooltip"
                    style="margin-right: -220px;"
                  >
                    3 of 5
                  </span>
                </span>
              </span>
            }
            preferredPosition="top"
            shouldRestrictMaxHeight={true}
            trigger={
              <div
                className="xui-progress--fragment"
              >
                <LinearGrowth
                  progress={3}
                  total={5}
                />
              </div>
            }
            triggerDropdownGap={10}
            triggerOnBlur={true}
            triggerOnClick={true}
            triggerOnFocus={false}
            triggerOnHover={true}
            viewportGutter={10}
            wrapperClassName="xui-progress--tooltip"
          >
            <span
              className="xui-positioningInline"
              style={
                Object {
                  "flexDirection": "column",
                  "top": undefined,
                }
              }
            >
              <span
                aria-hidden={true}
                className="xui-tooltip--tip"
                id="myCustomProgressId-progress--tooltip"
                role="tooltip"
                style={
                  Object {
                    "marginLeft": null,
                    "marginRight": -220,
                    "maxHeight": null,
                    "maxWidth": null,
                    "width": null,
                  }
                }
              >
                3 of 5
              </span>
            </span>
          </PositioningInline>
        </span>
      </XUITooltip>
    </div>
  </ProgressWrapper>
</XUIProgressLinear>
`;

exports[`<XUIProgressIndicator /> should default to a standard format when segments are calculated at less than one 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isLinear={true}
  isSegmented={true}
  progress={3}
  total={0}
>
  <ProgressWrapper
    ariaMax={0}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    isLinear={true}
    isSegmented={false}
    progress={0}
    toolTipMessage="3 of 0"
    total={0}
  >
    <div
      aria-valuemax={0}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 0"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          isSegmented={false}
          progress={0}
          total={0}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              isSegmented={false}
              progress={0}
              thickness={3}
              total={0}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={0}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should override a complete alert with a soft error alert 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isAlertOnComplete={true}
  isSoftError={true}
  progress={5}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={5}
    classes="xui-progress xui-progress-error-soft xui-progress-circular"
    id="myCustomProgressId"
    isAlertOnComplete={true}
    isComplete={false}
    isSoftError={true}
    progress={5}
    toolTipMessage="5 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={5}
      aria-valuetext="5 of 5"
      className="xui-progress xui-progress-error-soft xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={5}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={5}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={0}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should override a soft error alert with a hard error alert 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  isHardError={true}
  isSoftError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    id="myCustomProgressId"
    isHardError={true}
    isSoftError={false}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          isHardError={true}
        >
          <div
            className="xui-progress-icon"
          >
            <ForwardRef
              className="xui-progress-icon-error"
              icon={
                Object {
                  "height": 8,
                  "path": "M0,0 L2,0 L2,5 L0,5 L0,0 Z M0,6 L2,6 L2,8 L0,8 L0,6 Z",
                  "width": 2,
                }
              }
              role="presentation"
              size="medium"
            >
              <svg
                className="xui-icon xui-progress-icon-error"
                focusable="false"
                height={8}
                viewBox="0 0 2 8"
                width={2}
              >
                <path
                  d="M0,0 L2,0 L2,5 L0,5 L0,0 Z M0,6 L2,6 L2,8 L0,8 L0,6 Z"
                  role="presentation"
                />
              </svg>
            </ForwardRef>
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should render hard error alert override as jsx 1`] = `
<XUIProgressCircular
  hardErrorAlert={
    <img
      alt="error alert"
      src="http://via.placeholder.com/20x20"
    />
  }
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    hardErrorAlert={
      <img
        alt="error alert"
        src="http://via.placeholder.com/20x20"
      />
    }
    id="myCustomProgressId"
    isHardError={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          hardErrorAlert={
            <img
              alt="error alert"
              src="http://via.placeholder.com/20x20"
            />
          }
          isHardError={true}
        >
          <div
            className="xui-progress-icon"
          >
            <img
              alt="error alert"
              src="http://via.placeholder.com/20x20"
            />
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should render hard error alert override as text 1`] = `
<XUIProgressCircular
  hardErrorAlert="S"
  id="myCustomProgressId"
  isHardError={true}
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular xui-progress-error-hard"
    hardErrorAlert="S"
    id="myCustomProgressId"
    isHardError={true}
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular xui-progress-error-hard"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
        <CircularIcon
          hardErrorAlert="S"
          isHardError={true}
        >
          <div
            className="xui-progress-icon"
          >
            S
          </div>
        </CircularIcon>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should render supplied content as a child of the nested progress indicator 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  qaHook="progress-indicator"
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    customContent={
      <img
        src="/my-image.png"
      />
    }
    id="myCustomProgressId"
    progress={3}
    qaHook="progress-indicator"
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      data-automationid="progress-indicator"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          customContent={
            <img
              src="/my-image.png"
            />
          }
          id="myCustomProgressId"
          progress={3}
          qaHook="progress-indicator"
          total={5}
        >
          <div>
            <CircularTrack
              customContent={
                <img
                  src="/my-image.png"
                />
              }
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              qaHook="progress-indicator"
              thickness={3}
              total={5}
            >
              <div
                className="xui-progress-circular-content"
                data-automationid="progress-indicator-custom-content"
                key="content"
                style={
                  Object {
                    "bottom": "calc(15% - 1px)",
                    "left": "calc(15% - 1px)",
                    "right": "calc(15% - 1px)",
                    "top": "calc(15% - 1px)",
                  }
                }
              >
                <img
                  src="/my-image.png"
                />
              </div>
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should render with a canvas element if it thinks the browser is IE11 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={3}
    toolTipMessage="3 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={3}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={3}
              thickness={3}
              total={5}
            >
              <IE11SvgScaleHack
                key="canvas"
                viewBoxHeight={20}
                viewBoxWidth={20}
              >
                <canvas
                  className="xui-progress-circular-scaler"
                  height={20}
                  width={20}
                />
              </IE11SvgScaleHack>
              <svg
                className="xui-progress-circular-wrapper xui-progress-circular-wrapper-ie11"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={21.362830044410597}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should set a negative progress value to 0 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={-1}
  total={5}
>
  <ProgressWrapper
    ariaMax={5}
    ariaMin={0}
    ariaNow={0}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={0}
    toolTipMessage="0 of 5"
    total={5}
  >
    <div
      aria-valuemax={5}
      aria-valuemin={0}
      aria-valuenow={0}
      aria-valuetext="0 of 5"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={0}
          total={5}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={0}
              thickness={3}
              total={5}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={53.40707511102649}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;

exports[`<XUIProgressIndicator /> should set a negative total value to 0 1`] = `
<XUIProgressCircular
  id="myCustomProgressId"
  progress={3}
  total={-1}
>
  <ProgressWrapper
    ariaMax={0}
    ariaMin={0}
    ariaNow={3}
    classes="xui-progress xui-progress-circular"
    id="myCustomProgressId"
    progress={0}
    toolTipMessage="3 of 0"
    total={0}
  >
    <div
      aria-valuemax={0}
      aria-valuemin={0}
      aria-valuenow={3}
      aria-valuetext="3 of 0"
      className="xui-progress xui-progress-circular"
      role="progressbar"
    >
      <div
        className="xui-progress--fragment"
      >
        <CircularGrowth
          id="myCustomProgressId"
          progress={0}
          total={0}
        >
          <div>
            <CircularTrack
              elementWidth={20}
              id="myCustomProgressId"
              progress={0}
              thickness={3}
              total={0}
            >
              <svg
                className="xui-progress-circular-wrapper"
                height={20}
                key="svg"
                viewBox="0 0 20 20"
                width={20}
              >
                <defs>
                  <mask
                    height={20}
                    id="myCustomProgressId-progress-mask"
                    maskUnits="userSpaceOnUse"
                    width={20}
                    x="0"
                    y="0"
                  >
                    <circle
                      className="
							xui-progress-circular-mask
							xui-progress-roundcap
						"
                      cx={10}
                      cy={10}
                      r={8.5}
                      strokeDasharray="initial"
                      strokeWidth={3}
                    />
                  </mask>
                </defs>
                <g
                  mask="url(#myCustomProgressId-progress-mask)"
                >
                  <circle
                    className="xui-progress-circular-track"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeWidth={3}
                  />
                  <circle
                    className="xui-progress-circular-current xui-progress-roundcap"
                    cx={10}
                    cy={10}
                    r={8.5}
                    strokeDasharray={53.40707511102649}
                    strokeDashoffset={0}
                    strokeWidth={3}
                  />
                </g>
              </svg>
            </CircularTrack>
          </div>
        </CircularGrowth>
      </div>
    </div>
  </ProgressWrapper>
</XUIProgressCircular>
`;
