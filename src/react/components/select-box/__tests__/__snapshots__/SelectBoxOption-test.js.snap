// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SelectBoxOption /> should render an a tag if an href prop is provided 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <a
    className="xui-pickitem--body"
    data-automationid={undefined}
    href="http://xero.com"
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    target={undefined}
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </a>
</li>
`;

exports[`<SelectBoxOption /> should render an aria role if the ariaRole prop has a value 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="item"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render an aria role of option by default 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render an automaion id when provided with a qaHook 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid="test-sbo"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid="test-sbo--body"
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      Child
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render an button element by default 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render checkboxes when the showCheckboxes prop is set to true 1`] = `
<li
  aria-label={undefined}
  aria-selected={false}
  className="xui-pickitem xui-pickitem--multiselect"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <div
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
  >
    <label
      className="xui-pickitem--multiselect-checkbox xui-styledcheckboxradio"
      data-automationid={undefined}
      onClick={[Function]}
    >
      <input
        checked={false}
        className="xui-styledcheckboxradio--input"
        data-automationid={undefined}
        disabled={false}
        name={undefined}
        onChange={[Function]}
        onClick={[Function]}
        required={false}
        tabIndex={-1}
        type="checkbox"
        value={undefined}
      />
      <div
        className="xui-styledcheckboxradio--checkbox xui-pickitem--input"
        data-automationid={undefined}
      />
      <span
        className="xui-styledcheckboxradio--label xui-pickitem--multiselect-label"
        data-automationid={undefined}
      >
        <span
          className={null}
          data-automationid={undefined}
        >
          .
        </span>
      </span>
    </label>
  </div>
</li>
`;

exports[`<SelectBoxOption /> should render extra classes on the option element when values are added to the optionClasses prop 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem option-class"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render text as truncated when the truncatedText prop is set to true 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      <span
        className="xui-text-truncated"
      >
        This text should be truncated and only visible on one line because it's so long.
      </span>
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render the correct value passed in 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render the highlighted class if isHighlighted is true 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem xui-pickitem-is-hovered"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render the option  and the checkboxesas disabled when the isDisabled and showCheckboxes props are true 1`] = `
<li
  aria-label={undefined}
  aria-selected={false}
  className="xui-pickitem xui-pickitem--multiselect xui-is-disabled"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <div
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
  >
    <label
      className="xui-pickitem--multiselect-checkbox xui-styledcheckboxradio"
      data-automationid={undefined}
      onClick={[Function]}
    >
      <input
        checked={false}
        className="xui-styledcheckboxradio--input"
        data-automationid={undefined}
        disabled={false}
        name={undefined}
        onChange={[Function]}
        onClick={[Function]}
        required={false}
        tabIndex={-1}
        type="checkbox"
        value={undefined}
      />
      <div
        className="xui-styledcheckboxradio--checkbox xui-pickitem--input"
        data-automationid={undefined}
      />
      <span
        className="xui-styledcheckboxradio--label xui-pickitem--multiselect-label"
        data-automationid={undefined}
      >
        <span
          className={null}
          data-automationid={undefined}
        >
          .
        </span>
      </span>
    </label>
  </div>
</li>
`;

exports[`<SelectBoxOption /> should render the option as disabled when the isDisabled prop is false 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render the option as disabled when the isDisabled prop is true 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem xui-is-disabled"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> should render the selected class if isSelected is true 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem xui-pickitem-is-selected"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> shouldn't render checkboxes when the showCheckboxes prop is set to false 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> shouldn't render text as truncated when the truncatedText prop is set to false 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      This text should not be truncated even though it's long.
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> shouldn't render the highlighted class by default 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> shouldn't render the highlighted class if isHighlighted is false 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> shouldn't render the selected class by default 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<SelectBoxOption /> shouldn't render the selected class if isSelected is false 1`] = `
<li
  aria-label={undefined}
  aria-selected={null}
  className="xui-pickitem"
  data-automationid={undefined}
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid={undefined}
    onClick={undefined}
    onKeyDown={undefined}
    onMouseOver={undefined}
    rel={null}
    tabIndex="-1"
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;
