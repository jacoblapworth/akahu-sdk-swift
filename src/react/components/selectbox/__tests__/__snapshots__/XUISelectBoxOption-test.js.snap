// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<XUISelectBoxOption /> should render an a tag if an href prop is provided 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <a
    className="xui-pickitem--body"
    href="http://xero.com"
    rel={null}
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </a>
</li>
`;

exports[`<XUISelectBoxOption /> should render an aria role if the ariaRole prop has a value 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="item"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render an aria role of option by default 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render an automaion id when provided with a qaHook 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  data-automationid="test-sbo"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    data-automationid="test-sbo--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      Child
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render an button element by default 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render checkboxes when the showCheckboxes prop is set to true 1`] = `
<li
  aria-selected={false}
  className="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium"
  id="1"
  role="option"
>
  <div
    className="xui-pickitem--body"
    role="presentation"
  >
    <div
      className="xui-pickitem-multiselect--checkbox xui-styledcheckboxradiowrapper xui-styledcheckboxradio-small"
    >
      <label
        className="xui-styledcheckboxradio"
        onClick={[Function]}
      >
        <input
          aria-labelledby="xui-testCheckboxId"
          checked={false}
          className="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small"
          disabled={false}
          onChange={[Function]}
          required={false}
          tabIndex={-1}
          type="checkbox"
        />
        <div
          className="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small"
        >
          <div
            className="xui-touchtarget"
          />
        </div>
        <span
          className="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label"
          id="xui-testCheckboxId"
        >
          <span
            className=""
          >
            .
          </span>
        </span>
      </label>
    </div>
  </div>
</li>
`;

exports[`<XUISelectBoxOption /> should render extra classes on the option element when values are added to the optionClassName prop 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem option-class xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render text as truncated when the truncateText prop is set to true 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      <span
        className="xui-select--option-truncated"
      >
        This text should be truncated and only visible on one line because it's so long.
      </span>
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render the correct value passed in 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render the highlighted class if isHighlighted is true 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-is-hovered xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render the option and the checkboxes as disabled when the isDisabled and showCheckboxes props are true 1`] = `
<li
  aria-selected={false}
  className="xui-pickitem xui-pickitem-multiselect xui-pickitem-is-disabled xui-pickitem-medium"
  id="1"
  role="option"
>
  <div
    className="xui-pickitem--body"
    role="presentation"
  >
    <div
      className="xui-pickitem-multiselect--checkbox xui-styledcheckboxradiowrapper xui-styledcheckboxradio-small"
    >
      <label
        className="xui-styledcheckboxradio xui-styledcheckboxradio-is-disabled"
        onClick={[Function]}
      >
        <input
          aria-labelledby="xui-testCheckboxId"
          checked={false}
          className="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small"
          disabled={true}
          onChange={[Function]}
          required={false}
          tabIndex={-1}
          type="checkbox"
        />
        <div
          className="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small"
        >
          <div
            className="xui-touchtarget"
          />
        </div>
        <span
          className="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label"
          id="xui-testCheckboxId"
        >
          <span
            className=""
          >
            .
          </span>
        </span>
      </label>
    </div>
  </div>
</li>
`;

exports[`<XUISelectBoxOption /> should render the option as disabled when the isDisabled prop is false 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render the option as disabled when the isDisabled prop is true 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-is-disabled xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> should render the selected class if isSelected is true 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> shouldn't render checkboxes when the showCheckboxes prop is set to false 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> shouldn't render text as truncated when the truncateText prop is set to false 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      This text should not be truncated even though it's long.
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> shouldn't render the highlighted class by default 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> shouldn't render the highlighted class if isHighlighted is false 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> shouldn't render the selected class by default 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;

exports[`<XUISelectBoxOption /> shouldn't render the selected class if isSelected is false 1`] = `
<li
  aria-selected={null}
  className="xui-pickitem xui-pickitem-medium"
  id="1"
  role="option"
>
  <button
    className="xui-pickitem--body"
    rel={null}
    type="button"
  >
    <span
      className="xui-pickitem--text"
    >
      .
    </span>
  </button>
</li>
`;
