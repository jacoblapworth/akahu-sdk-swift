// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`XUISwitch should include a reversed class when a text labe is present and isReversed is set 1`] = `
<label
  className="xui-switch xui-switch-reversed"
  data-automationid={undefined}
  onClick={[Function]}
  role="presentation"
>
  <input
    aria-checked={false}
    aria-disabled={undefined}
    aria-label={undefined}
    aria-labelledby="testLabelId"
    checked={undefined}
    className="xui-u-hidden-visually xui-switch--checkbox"
    data-automationid={undefined}
    disabled={undefined}
    name={undefined}
    onChange={[Function]}
    role="switch"
    type="checkbox"
    value={undefined}
  />
  <div
    className="xui-switch--control"
    data-automationid={undefined}
  />
  <span
    className="xui-switch--label"
    data-automationid={undefined}
    id="testLabelId"
  >
    Switch test
  </span>
</label>
`;

exports[`XUISwitch should include a tex label when label is passed 1`] = `
<label
  className="xui-switch"
  data-automationid={undefined}
  onClick={[Function]}
  role="presentation"
>
  <input
    aria-checked={false}
    aria-disabled={undefined}
    aria-label={undefined}
    aria-labelledby="testLabelId"
    checked={undefined}
    className="xui-u-hidden-visually xui-switch--checkbox"
    data-automationid={undefined}
    disabled={undefined}
    name={undefined}
    onChange={[Function]}
    role="switch"
    type="checkbox"
    value={undefined}
  />
  <div
    className="xui-switch--control"
    data-automationid={undefined}
  />
  <span
    className="xui-switch--label"
    data-automationid={undefined}
    id="testLabelId"
  >
    Switch test
  </span>
</label>
`;

exports[`XUISwitch should include an aria-label when label is passed and hidden 1`] = `
<label
  className="xui-switch"
  data-automationid={undefined}
  onClick={[Function]}
  role="presentation"
>
  <input
    aria-checked={false}
    aria-disabled={undefined}
    aria-label="Switch test"
    aria-labelledby={undefined}
    checked={undefined}
    className="xui-u-hidden-visually xui-switch--checkbox"
    data-automationid={undefined}
    disabled={undefined}
    name={undefined}
    onChange={[Function]}
    role="switch"
    type="checkbox"
    value={undefined}
  />
  <div
    className="xui-switch--control"
    data-automationid={undefined}
  />
</label>
`;

exports[`XUISwitch should render an automationid when a qaHook value is passed 1`] = `
<label
  className="xui-switch"
  data-automationid="switch-test--label"
  onClick={[Function]}
  role="presentation"
>
  <input
    aria-checked={false}
    aria-disabled={undefined}
    aria-label={undefined}
    aria-labelledby={undefined}
    checked={undefined}
    className="xui-u-hidden-visually xui-switch--checkbox"
    data-automationid="switch-test--input"
    disabled={undefined}
    name={undefined}
    onChange={[Function]}
    role="switch"
    type="checkbox"
    value={undefined}
  />
  <div
    className="xui-switch--control"
    data-automationid="switch-test"
  />
</label>
`;

exports[`XUISwitch should render not checked and not disabled 1`] = `
<label
  className="xui-switch"
  data-automationid={undefined}
  onClick={[Function]}
  role="presentation"
>
  <input
    aria-checked={false}
    aria-disabled={undefined}
    aria-label={undefined}
    aria-labelledby={undefined}
    checked={undefined}
    className="xui-u-hidden-visually xui-switch--checkbox"
    data-automationid={undefined}
    disabled={undefined}
    name={undefined}
    onChange={[Function]}
    role="switch"
    type="checkbox"
    value={undefined}
  />
  <div
    className="xui-switch--control"
    data-automationid={undefined}
  />
</label>
`;
