// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<XUITextInput> General Functionality should have a qahook on the input and wrapper 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium"
    data-automationid="input-test"
  >
    <input
      className="xui-textinput--input xui-textinput--input-medium"
      data-automationid="input-test--input"
      id="testGeneratedId-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Side elements should render side elements correctly 1`] = `
<div>
  <div
    className="xui-textinputwrapper"
  >
    <div
      className="xui-textinput xui-textinput-medium"
    >
      <div
        className="xui-textinput--sideelement xui-textinput--sideelement-align-top xui-textinput--sideelement-icon"
      >
        <div
          className="xui-iconwrapper xui-iconwrapper-medium"
        >
          <svg
            className="xui-icon"
            focusable="false"
            height={17}
            viewBox="0 0 14 17"
            width={14}
          >
            <path
              d="M7 4A2 2 0 1 1 6.999.001 2 2 0 0 1 7 4zM0 6c0-.552.45-1 1.007-1h11.986a1.001 1.001 0 1 1-.002 2H10v9.005c0 .55-.444.995-1 .995-.552 0-1-.444-1-1v-4H6v4c0 .552-.444 1-1 1-.552 0-1-.456-1-.995V7H1.01C.451 7 0 6.556 0 6z"
              role="presentation"
            />
          </svg>
        </div>
      </div>
      <input
        className="xui-textinput--input xui-textinput--input-medium"
        id="testGeneratedId-control"
        onBlurCapture={[Function]}
        onFocusCapture={[Function]}
        style={
          Object {
            "maxHeight": undefined,
          }
        }
      />
    </div>
  </div>
  <div
    className="xui-textinputwrapper"
  >
    <div
      className="xui-textinput xui-textinput-medium"
    >
      <input
        className="xui-textinput--input xui-textinput--input-medium"
        id="testGeneratedId-control"
        onBlurCapture={[Function]}
        onFocusCapture={[Function]}
        style={
          Object {
            "maxHeight": undefined,
          }
        }
      />
      <div
        className="xui-textinput--sideelement xui-textinput--sideelement-align-top xui-textinput--sideelement-icon"
      >
        <div
          className="xui-iconwrapper xui-iconwrapper-medium"
        >
          <svg
            className="xui-icon"
            focusable="false"
            height={17}
            viewBox="0 0 14 17"
            width={14}
          >
            <path
              d="M7 4A2 2 0 1 1 6.999.001 2 2 0 0 1 7 4zM0 6c0-.552.45-1 1.007-1h11.986a1.001 1.001 0 1 1-.002 2H10v9.005c0 .55-.444.995-1 .995-.552 0-1-.444-1-1v-4H6v4c0 .552-.444 1-1 1-.552 0-1-.456-1-.995V7H1.01C.451 7 0 6.556 0 6z"
              role="presentation"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <div
    className="xui-textinputwrapper"
  >
    <div
      className="xui-textinput xui-textinput-medium"
    >
      <div
        className="xui-textinput--sideelement xui-textinput--sideelement-align-top xui-textinput--sideelement-icon"
      >
        <div
          className="xui-iconwrapper xui-iconwrapper-medium"
        >
          <svg
            className="xui-icon"
            focusable="false"
            height={17}
            viewBox="0 0 14 17"
            width={14}
          >
            <path
              d="M7 4A2 2 0 1 1 6.999.001 2 2 0 0 1 7 4zM0 6c0-.552.45-1 1.007-1h11.986a1.001 1.001 0 1 1-.002 2H10v9.005c0 .55-.444.995-1 .995-.552 0-1-.444-1-1v-4H6v4c0 .552-.444 1-1 1-.552 0-1-.456-1-.995V7H1.01C.451 7 0 6.556 0 6z"
              role="presentation"
            />
          </svg>
        </div>
      </div>
      <input
        className="xui-textinput--input xui-textinput--input-medium"
        id="testGeneratedId-control"
        onBlurCapture={[Function]}
        onFocusCapture={[Function]}
        style={
          Object {
            "maxHeight": undefined,
          }
        }
      />
      <div
        className="xui-textinput--sideelement xui-textinput--sideelement-align-top xui-textinput--sideelement-icon"
      >
        <div
          className="xui-iconwrapper xui-iconwrapper-medium"
        >
          <svg
            className="xui-icon"
            focusable="false"
            height={17}
            viewBox="0 0 14 17"
            width={14}
          >
            <path
              d="M7 4A2 2 0 1 1 6.999.001 2 2 0 0 1 7 4zM0 6c0-.552.45-1 1.007-1h11.986a1.001 1.001 0 1 1-.002 2H10v9.005c0 .55-.444.995-1 .995-.552 0-1-.444-1-1v-4H6v4c0 .552-.444 1-1 1-.552 0-1-.456-1-.995V7H1.01C.451 7 0 6.556 0 6z"
              role="presentation"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`<XUITextInput> Text-only input forces resize visible class based on options passed in 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium"
  >
    <textarea
      className="xui-textinput--input xui-textinput--input-medium xui-textinput--input-resize-vertical"
      id="testGeneratedId-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      rows={3}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Text-only input has a qaHook 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium"
    data-automationid="givenQAHook"
  >
    <input
      className="xui-textinput--input xui-textinput--input-medium"
      data-automationid="givenQAHook--input"
      id="testGeneratedId-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Text-only input has disabled styling 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium xui-textinput-is-disabled"
  >
    <input
      className="xui-textinput--input xui-textinput--input-medium"
      disabled={true}
      id="testGeneratedId-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Text-only input includes custom classes on the correct nodes 1`] = `
<div
  className="custom-field-class xui-textinputwrapper"
>
  <label
    className="custom-label-class xui-text-label xui-fieldlabel-layout"
    htmlFor="testLabel-control"
  >
    test
  </label>
  <div
    className="custom-container-class xui-textinput xui-textinput-medium"
  >
    <input
      className="custom-input-class xui-textinput--input xui-textinput--input-medium"
      id="testLabel-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Text-only input renders with a hidden label when one is provided 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium"
  >
    <input
      aria-label="test"
      className="xui-textinput--input xui-textinput--input-medium"
      id="testGeneratedId-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Text-only input renders with a label when one is provided 1`] = `
<div
  className="xui-textinputwrapper"
>
  <label
    className="xui-text-label xui-fieldlabel-layout"
    htmlFor="testLabel-control"
  >
    test
  </label>
  <div
    className="xui-textinput xui-textinput-medium"
  >
    <input
      className="xui-textinput--input xui-textinput--input-medium"
      id="testLabel-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Text-only input sets the resize none class based on options passed in 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium"
  >
    <textarea
      className="xui-textinput--input xui-textinput--input-medium xui-textinput--input-resize-none"
      id="testGeneratedId-control"
      onBlurCapture={[Function]}
      onFocusCapture={[Function]}
      rows={3}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
</div>
`;

exports[`<XUITextInput> Validation and hints renders invalid textinputs with an error message correctly 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium xui-textinput-is-invalid"
  >
    <input
      aria-describedby="newTest-message"
      aria-invalid={true}
      aria-labelledby="newTest"
      className="xui-textinput--input xui-textinput--input-medium"
      id="newTest-control"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
  <div
    className="xui-validation xui-validation-layout xui-validation-is-invalid"
    id="newTest-message"
    role="status"
  >
    Boo
  </div>
</div>
`;

exports[`<XUITextInput> Validation and hints renders with a hint message if one is provided and the input is valid 1`] = `
<div
  className="xui-textinputwrapper"
>
  <div
    className="xui-textinput xui-textinput-medium"
  >
    <input
      aria-describedby="newTest-message"
      aria-labelledby="newTest"
      className="xui-textinput--input xui-textinput--input-medium"
      id="newTest-control"
      onBlurCapture={[Function]}
      onChange={[Function]}
      onFocusCapture={[Function]}
      style={
        Object {
          "maxHeight": undefined,
        }
      }
    />
  </div>
  <div
    className="xui-validation xui-validation-layout"
    id="newTest-message"
    role="status"
  >
    Boo
  </div>
</div>
`;
