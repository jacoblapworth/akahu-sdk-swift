@import './colors';
@import '../tokens/borders';

// Depth and borders
//
// Teaser: Delineating content and creating visual separation.
//
// Introduction: XUI provides several variables to use when delineating content and creating visual separation.
//
// Styleguide: Fundamentals.Depth and borders

// @section Creating depth
// @intro XUI provides several variables to use when dileneating content and creating visual seperation is desired.
// @description To draw attention to content via depth, use one of the following box-shadow variables. Note they also utilise a border created with box-shadow, in order to multiply with the background layer, regardless of context.
// @type shadow
//
// Lift: For temporary elements that overlap content, such as tooltips and dropdowns: $xui-shadow-depth-lift
$xui-shadow-depth-lift: $xui-token-shadow-depth-lift;
// Pop: For prominent elements that overlap content, such as modals. Often used in conjunction with a mask : $xui-shadow-depth-pop
$xui-shadow-depth-pop: $xui-token-shadow-depth-pop;

// @section Indicating overflow
// @description To indicate that an element does not scroll within its parent, but sits above the content on a separate plane, use one of the following box-shadow variables.
// @type shadow
//
// Top: For toolbars and other navigational elements fixed to the top, with content that scrolls beneath: $xui-shadow-depth-overlap-top
$xui-shadow-depth-overlap-top: $xui-token-shadow-depth-overlap-top;
// Bottom: For toolbars and other navigational elements fixed to the bottom, with content that scrolls beneath: $xui-shadow-depth-overlap-bottom
$xui-shadow-depth-overlap-bottom: $xui-token-shadow-depth-overlap-bottom;
// Left: For toolbars and other navigational elements fixed to the left, with content that scrolls beneath: $xui-shadow-depth-overlap-left
$xui-shadow-depth-overlap-left: $xui-token-shadow-depth-overlap-left;
// Right: For toolbars and other navigational elements fixed to the right, with content that scrolls beneath: $xui-shadow-depth-overlap-right
$xui-shadow-depth-overlap-right: $xui-token-shadow-depth-overlap-right;

// @section Shadow borders
// @description To create the appearance of a border, but position it outside the element in order to multiply with the background layer, use one of the following box-shadow variables.
// @type shadow
//
// All: Applies an external border to all sides: $xui-shadow-border-all
$xui-shadow-border-all: $xui-token-shadow-border-all;
// Top: Applies an external border to the top: $xui-shadow-border-top
$xui-shadow-border-top: $xui-token-shadow-border-top;
// Right: Applies an external border to the right: $xui-shadow-border-right
$xui-shadow-border-right: $xui-token-shadow-border-right;
// Bottom: Applies an external border to the bottom: $xui-shadow-border-bottom
$xui-shadow-border-bottom: $xui-token-shadow-border-bottom;
// Left: Applies an external border to the left: $xui-shadow-border-left
$xui-shadow-border-left: $xui-token-shadow-border-left;

// @section Standard borders
// @description To create a traditional border around an element, use one of the following border variables. However, unless the background color is constant, we recommend using shadow borders instead, to prevent introducing contrast issues.
// @type border
//
// Standard: Applies a standard border to all sides: $xui-border-standard
$xui-border-standard: $xui-token-shadow-border-standard;
// Controls: Input, Radio, Checkbox, etc.: $xui-border-control
$xui-border-control: $xui-token-shadow-border-control;
// Muted: Applies a muted border to all sides: $xui-border-muted
$xui-border-muted: $xui-token-shadow-border-muted;
