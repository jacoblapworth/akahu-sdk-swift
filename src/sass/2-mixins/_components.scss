@import "../vars";
@import "./elements";
@import "./states";
@import "./typography";

@mixin xui-input-base {
	appearance: none; // For removing default input styling in Safari
	background-color: transparent;
	border-radius: $xui-radius;
	color: inherit;
	font: inherit;
	outline: none;
}

/*
Applies hover button styling and given contents on hover.
*/
@mixin xui-commoninput {
	@include xui-state-focus {
		z-index: 2;
	}
	@include xui-text-line-height; // 1.5
	appearance: none; // For removing drop-shadow on iOS and select arrows in Firefox
	background-color: $xui-input-bg-color;
	border: $xui-border-control;
	border-radius: $xui-radius;
	box-shadow: none;
	color: inherit;
	font-family: inherit;
	font-size: inherit;
	margin: 0; // Safari's default UA styles set 2px vertical padding
	min-height: $xui-control-size-standard;
	outline: none;
	padding: $xui-input-padding;
	position: relative;
	width: 100%;

	&:hover {
		border-color: $xui-control-hover-border-color;
	}

	&:disabled {
		@include xui-disabled-form;
	}
	*::placeholder, // TODO: Go to a single selector when XUIInput is deprecated and only XUITextInput is supported.
	&::placeholder {
		color: $xui-input-placeholder-color;
		opacity: 1;
	}

	&::-ms-clear,
	&::-ms-reveal {
		display: none;
		height: 0;
		width: 0;
	}
}

/*
Adds a before selector which is used to highlight the left side of a component with a certain colour

$bg-color - The colour to use for the highlight
$left-border-radius - Border radius to use - should match the border radius of the element using this
$has-border - Whether the element using this has a border
*/
@mixin xui-highlight-left($bg-color: $xui-color-green, $left-border-radius: 0, $has-border: false) {
	&:before {
		@if $left-border-radius != 0 {
			border-radius: $left-border-radius 0 0 $left-border-radius;
		}
		$alignment: 0;
		@if $has-border {
			$alignment: -1px;
		}
		background-color: $bg-color;
		bottom: $alignment;
		content: "";
		left: $alignment;
		position: absolute;
		top: $alignment;
		width: 4px;
	}
}

// Provides a shadow which indicates there's overflown content that can be scrolled into view
@mixin xui-overflow-shadow {
	background: linear-gradient($xui-color-white, $xui-color-white) 100% 0 / 100% 3px local no-repeat,
		linear-gradient($xui-color-white, $xui-color-white) 0 100% / 100% 3px local no-repeat,
		linear-gradient($xui-color-grey-alpha-6, $xui-color-grey-alpha-6) 100% 0 / 100% 1px scroll no-repeat,
		linear-gradient($xui-color-grey-alpha-6, $xui-color-grey-alpha-6) 0 100% / 100% 1px scroll no-repeat,
		linear-gradient($xui-color-grey-alpha-7, $xui-color-grey-alpha-7) 100% 0 / 100% 3px scroll no-repeat,
		linear-gradient($xui-color-grey-alpha-7, $xui-color-grey-alpha-7) 0 100% / 100% 3px scroll no-repeat,
		$xui-color-white;
}

/*
Flex aligns children

$align - Property to use for align-items
$justify - Property to use for justify-content
*/
@mixin xui-flex-children($align:center, $justify:center) {
	align-items: $align;
	display: flex;
	justify-content: $justify;
}
