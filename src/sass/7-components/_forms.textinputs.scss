/**
 * Styles for form text inputs.
 */

@import "../vars";
@import "../mixins";

$input-text-vertical-padding-xsmall: ($xui-control-size-xsmall - $xui-line-height-xsmall) / 2 - 1px;
$input-text-vertical-padding-small: ($xui-control-size-small - $xui-line-height-small) / 2 - 1px;
$input-text-vertical-padding-standard: ($xui-control-size-standard - $xui-line-height-standard) / 2 - 1px;


.#{$ns}-textinput--input {
	@include xui-input-base;
	border: none;
	flex: 1 1 auto;
	min-width: 0; // Required for inputs to be able to shrink in IE 11
	overflow: hidden;
}

.#{$ns}-textinput {
	@include xui-commoninput;
	@include xui-text-standard;
	align-items: center;
	cursor: text;
	display: flex;
	padding: 0;
}

.#{$ns}-textinputwrapper {
	display: block;
}

/* stylelint-disable no-duplicate-selectors  */
// This is defined below xui-textinput to ensure the correct padding is applied when using xui-textinput and xui-textinput--input on the same element
.#{$ns}-textinput--input {
	@include xui-padding-vertical($input-text-vertical-padding-standard);

	&:first-child,
	&.#{$ns}-textinput {
		padding-left: $xui-s-standard;
	}

	&:last-child,
	&.#{$ns}-textinput {
		padding-right: $xui-s-standard;
	}
}
/* stylelint-enable no-duplicate-selectors  */

.#{$ns}-textinput-focus {
	box-shadow: $xui-shadow-focus;
	outline: none;
	transition: box-shadow 0.1s;
	z-index: 2;
}

.#{$ns}-textinput-is-disabled {
	@include xui-disabled-form;

	.#{$ns}-textinput--input {
		cursor: not-allowed;
	}
}

.#{$ns}-textinput--sideelement {
	align-self: stretch;
	cursor: text;
	display: flex;
	flex-shrink: 0;
	margin: -1px; // This is required to correctly layout sidelement contents considering the input border
}

.#{$ns}-textinput--sideelement-icon {
	padding: $xui-s-2xsmall;
}

.#{$ns}-textinput--sideelement-text {
	@include xui-margin-vertical(0);
	@include xui-padding-vertical($input-text-vertical-padding-standard);

	pointer-events: none;

	&:first-child {
		padding-left: $xui-s-standard;
		padding-right: $xui-s-small;
	}

	&:last-child {
		padding-left: $xui-s-small;
		padding-right: $xui-s-standard;
	}
}

.#{$ns}-textinput--sideelement-avatar {
	@include xui-padding-vertical($xui-s-2xsmall);
	pointer-events: none;

	&:first-child {
		padding-left: $xui-s-2xsmall;
		padding-right: $xui-s-xsmall;
	}

	&:last-child {
		padding-left: $xui-s-xsmall;
		padding-right: $xui-s-2xsmall;
	}
}

.#{$ns}-textinput--sideelement-pill {
	@include xui-padding-vertical($xui-s-2xsmall);

	&:first-child {
		padding-left: $xui-s-2xsmall;
		padding-right: $xui-s-small;
	}

	&:last-child {
		padding-left: $xui-s-small;
		padding-right: $xui-s-2xsmall;
	}
}

.#{$ns}-textinput--sideelement-button {
	@include xui-padding-vertical($xui-s-2xsmall);

	&:first-child {
		padding-left: $xui-s-2xsmall;
		padding-right: $xui-s-small;
	}

	&:last-child {
		padding-left: $xui-s-small;
		padding-right: $xui-s-2xsmall;
	}
}

.#{$ns}-textinput--sideelement-has-background {
	&:first-child {
		border-radius: $xui-radius 0 0 $xui-radius;
		margin-right: $xui-s-small;
	}

	&:last-child {
		border-radius: 0 $xui-radius $xui-radius 0;
		margin-left: $xui-s-small;
	}
}

.#{$ns}-textinput--sideelement-twitter {
	background-color: $xui-color-twitter;
	color: $xui-textinput-sideelement-inverted-color;
}

.#{$ns}-textinput--sideelement-facebook {
	background-color: $xui-color-facebook;
	color: $xui-textinput-sideelement-inverted-color;
}

.#{$ns}-textinput--sideelement-linkedin {
	background-color: $xui-color-linkedin;
	color: $xui-textinput-sideelement-inverted-color;
}

.#{$ns}-textinput-small {
	@include xui-text-small;
	min-height: $xui-control-size-small;

	.#{$ns}-textinput--sideelement-text {
		@include xui-margin-vertical(0);
		padding: $input-text-vertical-padding-small $xui-s-small;
		pointer-events: none;
	}
}

.#{$ns}-textinput--input-small {
	@include xui-padding-vertical($input-text-vertical-padding-small);

	&:first-child,
	&.#{$ns}-textinput {
		padding-left: $xui-s-small;
	}
	&:last-child,
	&.#{$ns}-textinput {
		padding-right: $xui-s-small;
	}
}

.#{$ns}-textinput-xsmall {
	@include xui-text-xsmall;
	min-height: $xui-control-size-xsmall;

	.#{$ns}-textinput--sideelement-text {
		@include xui-margin-vertical(0);
		padding: $input-text-vertical-padding-xsmall $xui-s-xsmall;
		pointer-events: none;
	}
}

.#{$ns}-textinput--input-xsmall {
	@include xui-padding-vertical($input-text-vertical-padding-xsmall);

	&:first-child,
	&.#{$ns}-textinput {
		padding-left: $xui-s-xsmall;
	}
	&:last-child,
	&.#{$ns}-textinput {
		padding-right: $xui-s-xsmall;
	}
}

.#{$ns}-textinput--input-resize-none {
	resize: none;
}

.#{$ns}-textinput--input-resize-vertical {
	resize: vertical;
}

// Borderless inputs

.#{$ns}-textinput-borderless {
	border: 0;

	&:focus {
		box-shadow: none;
	}
}

.#{$ns}-textinput-borderless-transparent {
	background-color: transparent;

	&.#{$ns}-textinput-focus {
		background-color: $xui-textinput-borderless-transparent-focus-bg-color;
		box-shadow: none;
	}

	&.#{$ns}-textinput-borderless-inverted.#{$ns}-textinput-focus {
		background-color: $xui-textinput-borderless-transparent-inverted-focus-bg-color;
	}
}

.#{$ns}-textinput-borderless-solid {
	background-color: $xui-textinput-borderless-solid-bg-color;

	&.#{$ns}-textinput-focus {
		background-color: $xui-textinput-borderless-solid-focus-bg-color;
		box-shadow: none;
	}

	&.#{$ns}-textinput-borderless-inverted {
		background-color: $xui-textinput-borderless-solid-inverted-bg-color;

		&.#{$ns}-textinput-focus {
			background-color: $xui-textinput-borderless-solid-inverted-focus-bg-color;
		}
	}
}

.#{$ns}-textinput-borderless.#{$ns}-textinput-is-invalid {
	background-color: $xui-textinput-borderless-invalid-bg-color;

	&.#{$ns}-textinput-focus {
		background-color: $xui-textinput-borderless-invalid-focus-bg-color;
	}
}

.#{$ns}-textinput-borderless-inverted {
	color: $xui-textinput-borderless-inverted-color;

	&.#{$ns}-textinput--input,
	.#{$ns}-textinput--input {
		color: $xui-textinput-borderless-inverted-color;

		&::placeholder {
			color: $xui-input-placeholder-inverted-color;
		}
	}
}

.#{$ns}-verticaltextinputgroup {
	// Only add top border radius to the first element
	> .#{$ns}-textinput:first-of-type,
	.#{$ns}-textinputwrapper:first-of-type > .#{$ns}-textinput {
		border-radius: $xui-radius $xui-radius 0 0;

		> .#{$ns}-textinput--sideelement:first-child {
			border-radius: $xui-radius 0 0 0;
		}

		> .#{$ns}-textinput--sideelement:last-child {
			border-radius: 0 $xui-radius 0 0;
		}
	}

	// Add the margin adjustment to all elements but the first
	.#{$ns}-textinput:nth-of-type(n+2),
	.#{$ns}-textinputwrapper:nth-of-type(n+2) > .#{$ns}-textinput {
		margin-top: -1px;
	}

	// On all elements except the first and last one, border radius 0 is required
	.#{$ns}-textinput:nth-of-type(n+2):nth-last-of-type(n+2),
	.#{$ns}-textinputwrapper:nth-of-type(n+2):nth-last-of-type(n+2) > .#{$ns}-textinput {
		border-radius: 0;
	}

	// Only add bottom border radius to the last element
	> .#{$ns}-textinput:last-of-type,
	.#{$ns}-textinputwrapper:last-of-type .#{$ns}-textinput {
		border-radius: 0 0 $xui-radius $xui-radius;

		> .#{$ns}-textinput--sideelement:first-child {
			border-radius: 0 0 0 $xui-radius;
		}

		> .#{$ns}-textinput--sideelement:last-child {
			border-radius: 0 0 $xui-radius 0;
		}
	}
}


.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper,
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper > .#{$ns}-button,
.#{$ns}-textinputgroup > .#{$ns}-textinput,
.#{$ns}-textinputgroup > .#{$ns}-button,
.#{$ns}-textinputgroup .#{$ns}-select--control {
	border-radius: 0;

	// All but the first child have a left border
	// There is an exception for invalid styling further down
	&:nth-child(n+2) {
		border-left: 0;
	}
}

// This is excluded from the list above to prevent the nth-child selector kicking in unnecessarily on the wrong element
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper > .#{$ns}-textinput {
	border-radius: 0;

	.#{$ns}-textinput--sideelement {
		border-radius: 0;
	}
}

.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper:nth-child(n+2) > .#{$ns}-textinput {
	border-left: 0;
}

.#{$ns}-textinputgroup .#{$ns}-select:nth-child(n+2) {
	.#{$ns}-select--control {
		border-left: 0;
	}
}

.#{$ns}-textinputgroup > .#{$ns}-textinput:first-child,
.#{$ns}-textinputgroup > .#{$ns}-textinput:first-child > .#{$ns}-textinput--sideelement:first-child,
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper:first-child > .#{$ns}-textinput,
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper:first-child .#{$ns}-textinput--sideelement:first-child,
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper:first-child > .#{$ns}-button,
.#{$ns}-textinputgroup > .#{$ns}-button:first-child,
.#{$ns}-textinputgroup > .#{$ns}-select:first-child > .#{$ns}-select--control {
	border-bottom-left-radius: $xui-radius;
	border-top-left-radius: $xui-radius;
}

.#{$ns}-textinputgroup > .#{$ns}-textinput:last-child,
.#{$ns}-textinputgroup > .#{$ns}-textinput:last-child > .#{$ns}-textinput--sideelement:last-child,
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper:last-child > .#{$ns}-textinput,
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper:last-child > .#{$ns}-textinput--sideelement:last-child,
.#{$ns}-textinputgroup > .#{$ns}-textinputwrapper:last-child > .#{$ns}-button,
.#{$ns}-textinputgroup > .#{$ns}-button:last-child,
.#{$ns}-textinputgroup > .#{$ns}-select:last-child > .#{$ns}-select--control {
	border-bottom-right-radius: $xui-radius;
	border-top-right-radius: $xui-radius;
}

.#{$ns}-textinputgroup {
	@include xui-clearfix;

	.#{$ns}-textinput-is-invalid:nth-child(n+2),
	.#{$ns}-textinputwrapper:nth-child(n+2) .#{$ns}-textinput-is-invalid,
	.#{$ns}-select:nth-child(n+2) > .#{$ns}-select--control.#{$ns}-textinput-is-invalid {
		border-left: 1px solid $xui-textinput-invalid-border-color;
		margin-left: -1px;
	}
}
