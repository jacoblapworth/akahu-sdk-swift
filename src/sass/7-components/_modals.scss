@import '../vars';
@import '../mixins';

// Modal
//
// Components: Modal
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.dmxa22se8ql4
//
// Teaser: Add layers of information or interaction
//
// Introduction: Modals are used to provide additional functionality not available on the base page, and provide intermediary steps between larger flows.
//
// Styleguide: Components.CollectingInput.Modals

// Best practice
//
// Tips:
// Do: Select a modal size that reflects the complexity of the content.
// Warning: Where possible, avoid using modals to confirm user actions. Instead, action them immediately, and provide an undo option via a toast.
// Warning: Avoid ambiguous words like `OK` or `Yes` for footer actions. Be specific.
//
// Styleguide: Components.CollectingInput.Modals.1

// Masks
//
// Modals are positioned inside a semi-transparent mask that prevents the user from clicking background elements while the modal is open.
// Masks are hidden by default, and require an additional modifier to be visible.
//
// Classes:
// xui-mask: Mask for a modal, hidden by default
// xui-mask-is-active:  Add to show the mask
//
// Styleguide: Components.CollectingInput.Modals.2

// Layout
//
// By default, modals are absolutely centered within their mask.
// If however, their content is taller than the height of the viewport, they pin to the top, and the entire mask is scrollable.
//
// Classes:
// xui-modal: Container for a modal
// xui-modal-layout: Recommended layout for a modal
//
// Styleguide: Components.CollectingInput.Modals.3

// Anatomy
//
// A standard modal is comprised of three sections.
// The header must contain a title and a close button, the body contains the main content and the footer may contain up to three buttons, one of which must be a primary button.
//
// Classes:
// xui-modal--header | Container for the modal body
// xui-modal--body | Container for the modal body
// xui-modal--footer | Container for the modal body
// xui-modal--heading | Style for the modal heading
//
// ExampleClass: ds-example-flush ds-example-transparent
//
// Markup:
//	<div class="xui-mask xui-mask-is-active" aria-hidden="false">
//		<section class="xui-modal xui-modal-width-medium xui-modal-layout" tabindex="0" role="dialog">
//			<header class="xui-modal--header">
//				<div class='xui-modal--heading'>New project</div>
//				<button title="Close" class="xui-button xui-button-icon xui-button-icon-medium xui-modal--close" tabindex="0" type="button">
//					<svg focusable="false" class="xui-icon">
//						<use xlink:href="#xui-icon-cross" role="presentation"/>
//					</svg>
//				</button>
//			</header>
//			<div class="xui-modal--body">
// 				<div class="xui-textinputwrapper xui-field-layout">
// 					<label class="xui-text-label xui-fieldlabel-layout" for="a">Contact</label>
// 					<div class="xui-textinput xui-textinput-medium">
// 						<input type="text" class="xui-textinput--input xui-textinput--input-medium" placeholder="Find or create a contact" aria-invalid="false" id="a">
// 					</div>
//				</div>
//				<div class="xui-textinputwrapper xui-field-layout">
// 					<label class="xui-text-label xui-fieldlabel-layout" for="b">Project name</label>
// 					<div class="xui-textinput xui-textinput-medium">
// 						<input type="text" class="xui-textinput--input xui-textinput--input-medium" aria-invalid="false" id="b">
// 					</div>
//				</div>
//				<div class="xui-textinputwrapper xui-field-layout">
// 					<label class="xui-text-label xui-fieldlabel-layout" for="c">Deadline</label>
// 					<button class="xui-button xui-button-standard xui-button-medium xui-button-fullwidth xui-select--button xui-select--button-no-variant" aria-label="Select format">
//						<span class="xui-select--content">Select date</span>
//						<svg focusable="false" class="xui-icon xui-select--caret xui-button--caret">
//							<use xlink:href="#xui-icon-date-end" role="presentation" />
//						</svg>
//					</button>
//				</div>
//			</div>
//			<footer class="xui-modal--footer xui-actions xui-actions-layout">
//				<button class="xui-button xui-button-medium xui-actions--primary xui-button-create" tabindex="0" type="button">Create project</button>
//				<button class="xui-button xui-button-medium xui-actions--secondary xui-button-standard" tabindex="0" type="button">Cancel</button>
//			</footer>
//		</section>
//	</div>
//
// Styleguide: Components.CollectingInput.Modals.4

// Header
//
// Classes:
// xui-modal--header: Container for header content
// xui-modal--heading: Title within the header
// xui-modal--close: Close button within the header
//
// Styleguide: Components.CollectingInput.Modals.4.1

// Body
//
// Classes:
// xui-modal--body: Container for body content
//
// Styleguide: Components.CollectingInput.Modals.4.2

// Footer
//
// In order to be able to alter button layout across the board in the future, please use the following system.
//
// Classes:
// xui-modal--footer: Container for footer content
// xui-actions: Apply to footer to set the correct display alignment
// xui-actions-layout: Apply to footer to stack buttons at narrow viewports
// xui-actions--primary: Apply to primary button to set the correct order
// xui-actions--secondary: Apply to primary button to set the correct order
//
// Styleguide: Components.CollectingInput.Modals.4.3

// Size variants
//
// Modifiers can be applied to xui-modal to adjust its width. This set of widths provide the ability to ensure the most appropriate visual hierarchy. A good rule of thumb is that modals shouldn't be a great deal wider than their height.
// Take note that at narrow viewports, a max-width of 100% overrides any class you may have selected.
//
// Definitions:
// Small: 300px wide: `xui-modal-width-small`
// Medium: 400px wide: `xui-modal-width-medium`
// Large: 600px wide: `xui-modal-width-large`
// xLarge: 800px wide: `xui-modal-width-xlarge`
// Full screen: 100vh height, 100vw width: `xui-modal-fullscreen`
//
// ExampleClass: ds-example-flush ds-example-transparent ds-example-wide
//
// Markup:
// <div class="xui-mask xui-mask-is-active" aria-hidden="false">
// 	<section class="xui-modal xui-modal-layout xui-modal-width-small" tabindex="0" role="dialog">
// 		<header class="xui-modal--header">
//			<div class='xui-modal--heading'>Delete contact</div>
//			<button title="Close" class="xui-button xui-button-icon xui-button-icon-medium xui-modal--close" tabindex="0" type="button">
//				<svg focusable="false" class="xui-icon">
//					<use xlink:href="#xui-icon-cross" role="presentation"/>
//				</svg>
//			</button>
// 		</header>
//		<div class="xui-modal--body">
//			<div>Deleting this contact means you will no longer have access to their data</div>
// 		</div>
//		<footer class="xui-modal--footer xui-actions xui-actions-layout">
//			<button class="xui-button xui-button-medium xui-actions--primary xui-button-negative" tabindex="0" type="button">Delete forever</button>
//		</footer>
// 	</section>
// </div>
// <div class="xui-mask xui-mask-is-active" aria-hidden="false">
// 	<section class="xui-modal xui-modal-layout xui-modal-width-medium" tabindex="0" role="dialog">
// 		<header class="xui-modal--header">
//			<div class='xui-modal--heading'>Delete contact</div>
//			<button title="Close" class="xui-button xui-button-icon xui-button-icon-medium xui-modal--close" tabindex="0" type="button">
//				<svg focusable="false" class="xui-icon">
//					<use xlink:href="#xui-icon-cross" role="presentation"/>
//				</svg>
//			</button>
// 		</header>
//		<div class="xui-modal--body">
//			<div>Deleting this contact means you will no longer have access to their data</div>
// 		</div>
//		<footer class="xui-modal--footer xui-actions xui-actions-layout">
//			<button class="xui-button xui-button-medium xui-actions--primary xui-button-negative" tabindex="0" type="button">Delete forever</button>
//		</footer>
// 	</section>
// </div>
// <div class="xui-mask xui-mask-is-active" aria-hidden="false">
// 	<section class="xui-modal xui-modal-layout xui-modal-width-large" tabindex="0" role="dialog">
// 		<header class="xui-modal--header">
//			<div class='xui-modal--heading'>Delete contact</div>
//			<button title="Close" class="xui-button xui-button-icon xui-button-icon-medium xui-modal--close" tabindex="0" type="button">
//				<svg focusable="false" class="xui-icon">
//					<use xlink:href="#xui-icon-cross" role="presentation"/>
//				</svg>
//			</button>
// 		</header>
//		<div class="xui-modal--body">
//			<div>Deleting this contact means you will no longer have access to their data</div>
// 		</div>
//		<footer class="xui-modal--footer xui-actions xui-actions-layout">
//			<button class="xui-button xui-button-medium xui-actions--primary xui-button-negative" tabindex="0" type="button">Delete forever</button>
//		</footer>
// 	</section>
// </div>
// <div class="xui-mask xui-mask-is-active" aria-hidden="false">
// 	<section class="xui-modal xui-modal-layout xui-modal-width-xlarge" tabindex="0" role="dialog">
// 		<header class="xui-modal--header">
//			<div class='xui-modal--heading'>Delete contact</div>
//			<button title="Close" class="xui-button xui-button-icon xui-button-icon-medium xui-modal--close" tabindex="0" type="button">
//				<svg focusable="false" class="xui-icon">
//					<use xlink:href="#xui-icon-cross" role="presentation"/>
//				</svg>
//			</button>
// 		</header>
//		<div class="xui-modal--body">
//			<div>Deleting this contact means you will no longer have access to their data</div>
// 		</div>
//		<footer class="xui-modal--footer xui-actions xui-actions-layout">
//			<button class="xui-button xui-button-medium xui-actions--primary xui-button-negative" tabindex="0" type="button">Delete forever</button>
//		</footer>
// 	</section>
// </div>
//
// Styleguide: Components.CollectingInput.Modals.5

// Closing a modal
//
// Modals can be closed by either selecting the close button, selecting a button in the modal footer, or pressing ESC while the modal is open.
// Selecting the mask should not close the modal, as accidental clicks may lose any changes made within the modal.
//
// Styleguide: Components.CollectingInput.Modals.6

// Handling overflow
//
// When dealing with modal content taller than the viewport height, the default behavior is to scroll the entire mask.
// However, if necessary, we also support applying a max-height on `xui-modal--body`, to provide inner scroll.
// In both cases, always disable scroll on the background `body` when the mask is active, to prevent double scroll bars.
//
// Classes:
// xui-u-overflow-hidden: Apply to body to temporarily disable scroll
// xui-modal--body-layout: Apply to modal body to set a max height of 45vh
//
// Styleguide: Components.CollectingInput.Modals.7

// Keyboard focus
//
// When a modal is opened, keyboard focus should be moved to the first focusable control within the modal.
// For example, this could the first form element or a button in the footer.
// The concealed page content must also be temporarily disabled and should not be accessible via the keyboard while the modal is open.
//
// Styleguide: Components.CollectingInput.Modals.8

// Accessibility
//
// Adding a `dialog` role to a modal is usually not enough to make it accessible.
// It also needs to be labelled appropriately and keyboard focus must be managed.
// The `aria-labelledby` and `aria-describedby` attributes can be used to ensure the purpose of the modal is clear.
//
// In addition, when opening a modal, apply the `aria-hidden` attribute to any siblings of the modal that should not be interactive when the modal is open.
// This attribute indicates to assistive technology that background content is not for interaction, at that time.
// Take care not to apply the attribute to any ancestors of the modal, and be sure to remove them, when the modal closes.
//
// Styleguide: Components.CollectingInput.Modals.9

.#{$ns}-mask {
  align-items: center;
  background-color: $xui-mask-bg-color;
  bottom: 0;
  display: flex;
  justify-content: center;
  left: 0;
  opacity: 0;
  overflow-y: auto;
  padding: $xui-s-standard;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  transition: opacity $xui-motion-speed-medium $xui-motion-curve-standard;
  visibility: hidden;
  z-index: 10;
}

.#{$ns}-mask-is-active {
  opacity: 1;
  pointer-events: auto;
  visibility: visible;
}

.#{$ns}-unmask {
  background-color: transparentize($xui-color-grey-1, 1);
}

.#{$ns}-modal {
  align-self: flex-start;
  background-color: $xui-modal-bg-color;
  border-radius: $xui-radius;
  box-shadow: $xui-shadow-depth-pop;
  margin-bottom: $xui-s-standard;
  outline: none;
  position: relative;
}

.#{$ns}-modal-layout {
  max-width: calc(100vw - 2.5rem); // Allows for minimum margin at the left/right of modal
  width: map-get($xui-modal-widths, medium);
  // Modal header
  // -----------------------------------------------------------------------------
  .#{$ns}-modal--header {
    align-content: stretch;
    align-items: center;
    // If a background color is specified, ensure the border radius stays
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    display: flex;
    flex-shrink: 0;
    justify-content: space-between;
    padding: $xui-s-small $xui-s-large;
  }

  // Modal close
  // -----------------------------------------------------------------------------
  .#{$ns}-modal--close {
    align-self: flex-start;
    margin-left: auto;
    margin-right: -$xui-s-xsmall;
  }

  // If a heading exists
  .#{$ns}-modal--heading ~ .#{$ns}-modal--close {
    margin-left: $xui-s-large;
  }

  // Modal body
  // -----------------------------------------------------------------------------
  .#{$ns}-modal--body {
    padding: $xui-s-xsmall $xui-s-large;
  }

  // Modal footer
  // -----------------------------------------------------------------------------
  .#{$ns}-modal--footer {
    padding: $xui-s-large;
  }
}

.#{$ns}-modal--body-layout {
  @include xui-overflow-shadow;
  max-height: 45vh;
  overflow-y: scroll;
}

@each $size, $width in $xui-modal-widths {
  .#{$ns}-modal-width-#{$size} {
    width: $width;
  }
}

.#{$ns}-modal-fullscreen {
  border-radius: 0;
  display: flex;
  flex-flow: column nowrap;
  height: 100%;
  left: 0;
  max-height: 100%; // Overrides any max height set by the `modal-layout` class
  max-width: 100vw; // Overrides any max width set by the `modal-layout` class
  overflow: auto;
  position: fixed;
  top: 0;
  width: 100vw;
}

// Modal heading
// -----------------------------------------------------------------------------

.#{$ns}-modal--heading {
  @include xui-heading-large;
}
