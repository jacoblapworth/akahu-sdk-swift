@import "../mixins";
@import "../vars";

// Modal
//
// Components: Modal
//
// Teaser: Add layers of infromation or interaction
//
// Introduction: Modals are used to provide additional functionality not available on the base page, and provide intermediary steps between larger flows.
//
// Styleguide: Compounds.CollectingInput.Modals

// Best practice
//
// Tips:
// Do: Select a modal size that reflects the complexity of the content.
// Warning: Where possible, avoid using modals to confirm user actions. Instead, action them immediately, and provide an undo option via a toast.
// Warning: Avoid ambiguous words like `OK` or `Yes` for footer actions. Be specific.
//
// Styleguide: Compounds.CollectingInput.Modals.1

// Masks
//
// Modals are positioned inside a semi-transparent mask that prevents the user from clicking background elements while the modal is open.
// Masks are hidden by default, and require an additional modifier to be visible.
//
// Classes:
// xui-mask: Mask for a modal, hidden by default
// xui-mask-is-active:  Add to show the mask
//
// Styleguide: Compounds.CollectingInput.Modals.2

// Layout
//
// By default, modals are absolutely centered within their mask.
// If however, their content is taller than the height of the viewport, they pin to the top, and the entire mask is scrollable.
//
// Classes:
// xui-modal: Container for a modal
// xui-modal-layout: Recommended layout for a modal
//
// Styleguide: Compounds.CollectingInput.Modals.3

// Anatomy
//
// A standard modal is comprised of three sections.
// The header must contain a title and a close button, the body contains the main content and the footer may contain up to three buttons, one of which must be a primary button.
//
// Classes:
// xui-modal--header | Container for the modal body
// xui-modal--body | Container for the modal body
// xui-modal--footer | Container for the modal body
// xui-modal--heading | Style for the modal heading
//
// ExampleClass: ds-example-flush ds-example-transparent ds-example-tall
//
// Markup:
//	<div class="xui-mask xui-mask-is-active" aria-hidden="false">
//		<section class="xui-modal xui-modal-layout" tabindex="0" role="dialog">
//			<header class="xui-modal--header">
//				<div class='xui-modal--heading'>New project</div>
//				<button title="Close" class="xui-modal--close xui-button xui-button-icon" tabindex="0" type="button">
//					<svg focusable="false" class="xui-icon">
//						<use xlink:href="#xui-icon-cross" role="presentation"/>
//					</svg>
//				</button>
//			</header>
//			<div class="xui-modal--body">
//				<div class="xui-inputwrapper">
//					<input type="text" class="xui-textinput xui-textinput--input" placeholder="Give it a title">
//				</div>
//			</div>
//			<footer class="xui-modal--footer xui-actions xui-actions-layout">
//				<button class="xui-button xui-actions--primary xui-button-main" tabindex="0" type="button">Create project</button>
//				<button class="xui-button xui-actions--secondary xui-button-standard" tabindex="0" type="button">Cancel</button>
//			</footer>
//		</section>
//	</div>
//
// Styleguide: Compounds.CollectingInput.Modals.4

// Header
//
// Classes:
// xui-modal--header: Container for header content
// xui-modal--heading: Title within the header
// xui-modal--close: Close button within the header
//
// Styleguide: Compounds.CollectingInput.Modals.4.1

// Body
//
// Classes:
// xui-modal--body: Container for body content
//
// Styleguide: Compounds.CollectingInput.Modals.4.2

// Footer
//
// In order to be able to alter button layout across the board in the future, please use the following system.
//
// Classes:
// xui-modal--footer: Container for footer content
// xui-actions: Apply to footer to set the correct display alignment
// xui-actions-layout: Apply to footer to stack buttons at narrow viewports
// xui-actions--primary: Apply to primary button to set the correct order
// xui-actions--secondary: Apply to primary button to set the correct order
//
// Styleguide: Compounds.CollectingInput.Modals.4.3


// Sizes
//
// To change the size of your modal, apply the following modifieres to `xui-modal`.
// Take note that at narrow viewports, a max-width of 100% overrides any class you may have selected.
//
// Definitions:
// Small: 300px wide: `xui-modal-width-small`
// Default: 380px wide: none
// Medium: 460px wide: `xui-modal-width-medium`
// Large: 620px wide: `xui-modal-width-large`
// xLarge: 860px wide: `xui-modal-width-xlarge`
// Full screen: 100vh height, 100vw width: `xui-modal-fullscreen`
//
// Styleguide: Compounds.CollectingInput.Modals.5

// Closing a modal
//
// Modals can be closed by either tapping the close button, tapping a button in the modal footer, or pressing ESC while the modal is open.
// Tapping the mask should not close the modal, as accidental clicks may lose any changes made within the modal.
//
// Styleguide: Compounds.CollectingInput.Modals.6

// Handling overflow
//
// When dealing with modal content taller than the viewport height, the default behavior is to scroll the entire mask.
// However, if neccessary, we also support applying a max-height on `xui-modal--body`, to provide inner scroll.
// In both cases, always disable scroll on the background `body` when the mask is active, to prevent double scroll bars.
//
// Classes:
// xui-u-overflow-hidden: Apply to body to temporarily disable scroll
// xui-modal--body-layout: Apply to modal body to set a max height of 45vh
//
// Styleguide: Compounds.CollectingInput.Modals.7

// Keyboard focus
//
// When a modal is opened, keyboard focus should be moved to the first focusable control within the modal.
// For example, this could the first form element or a button in the footer.
// The concealed page content must also be temporarily disabled and should not be accessible via the keyboard while the modal is open.
//
// Styleguide: Compounds.CollectingInput.Modals.8

// Accessibility
//
// Adding a `dialog` role to a modal is usually not enough to make it accessible.
// It also needs to be labelled appropriately and keyboard focus must be managed.
// The `aria-labelledby` and `aria-describedby` attributes can be used to ensure the purpose of the modal is clear.
//
// In addition, when opening a modal, apply the `aria-hidden` attribute to any siblings of the modal that should not be interactive when the modal is open.
// This attribute indicates to assistive technology that background content is not for interaction, at that time.
// Take care not to apply the attribute to any ancestors of the modal, and be sure to remove them, when the modal closes.
//
// Styleguide: Compounds.CollectingInput.Modals.9

.#{$ns}-mask {
	align-items: center;
	background-color: $xui-mask-bg-color;
	bottom: 0;
	display: flex;
	justify-content: center;
	left: 0;
	opacity: 0;
	overflow-y: auto;
	padding: $xui-s-standard;
	pointer-events: none;
	position: fixed;
	right: 0;
	top: 0;
	transition: opacity $xui-motion-speed-medium $xui-motion-curve-standard;
	visibility: hidden;
	z-index: 10;
}

.#{$ns}-mask-is-active {
	opacity: 1;
	pointer-events: auto;
	visibility: visible;
}

.#{$ns}-modal {
	align-self: flex-start;
	background-color: $xui-modal-bg-color;
	border-radius: $xui-radius;
	box-shadow: $xui-shadow-depth-pop;
	margin-bottom: $xui-s-standard;
	outline: none;
	position: relative;
}

.#{$ns}-modal-layout {
	max-width: calc(100vw - 2.5rem);  // Allows for minimum margin at the left/right of modal
	width: $xui-starting-width + ($xui-base-width * 3);
	// Modal header
	// -----------------------------------------------------------------------------
	.#{$ns}-modal--header {
		align-content: stretch;
		align-items: center;
		// If a background color is specified, ensure the border radius stays
		border-top-left-radius: inherit;
		border-top-right-radius: inherit;
		display: flex;
		flex-shrink: 0;
		justify-content: space-between;
		padding: $xui-s-small $xui-s-large;
	}

	// Modal close
	// -----------------------------------------------------------------------------
	.#{$ns}-modal--close {
		align-self: flex-start;
		margin-left: auto;
		margin-right: -$xui-s-small;
	}

	// If a heading exists
	.#{$ns}-modal--heading ~ .#{$ns}-modal--close {
		margin-left: $xui-s-large;
	}

	// Modal body
	// -----------------------------------------------------------------------------
	.#{$ns}-modal--body {
		padding: $xui-s-small $xui-s-large;
	}

	// Modal footer
	// -----------------------------------------------------------------------------
	.#{$ns}-modal--footer {
		padding: $xui-s-large;
	}

}

.#{$ns}-modal--body-layout {
	@include xui-overflow-shadow;
	max-height: 45vh;
	overflow-y: scroll;
}

@each $number, $variant in $xui-width-variants-modal {
	.#{$ns}-modal-width-#{$variant} {
		width: $xui-starting-width + ($xui-base-width * $number);
	}
}

.#{$ns}-modal-fullscreen {
	border-radius: 0;
	display: flex;
	flex-flow: column nowrap;
	height: 100%;
	left: 0;
	max-height: 100%; // Overrides any max height set by the `modal-layout` class
	max-width: 100vw; // Overrides any max width set by the `modal-layout` class
	overflow: auto;
	position: fixed;
	top: 0;
	width: 100vw;
}

// Modal heading
// -----------------------------------------------------------------------------

.#{$ns}-modal--heading {
	font-size: $xui-font-size-medium;
	font-weight: bold;
}
