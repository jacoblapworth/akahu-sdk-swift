@import '../vars';
@import '../mixins';

// General picklist and pickitem styles

// Total amount is made up of combined width and padding values inside pickitem variants
$pickitem-min-width: $xui-minimum-touch-target + ($xui-s-large * 2);
$pickitem-has-secondarytext-min-width: $pickitem-min-width + $xui-s-standard +
  $xui-minimum-touch-target;
$pickitem-has-leftelement-min-width: ($xui-minimum-touch-target * 2) + $xui-s-small + $xui-s-2xsmall +
  $xui-s-large;
$pickitem-has-leftelement-secondarytext-min-width: $pickitem-has-leftelement-min-width +
  $xui-s-standard + $xui-minimum-touch-target;

// Lists and list-level sub-elements
.#{$ns}-picklist {
  @include xui-listreset;
  position: relative;

  & + .#{$ns}-picklist {
    border-top: 1px solid $xui-color-grey-alpha-6;
  }
}

.#{$ns}-picklist-horizontal {
  display: flex;
  max-width: 100%;
}

.#{$ns}-picklist--header {
  align-items: center;
  color: $xui-pickitem-secondary-text-color;
  display: flex;
  min-height: $xui-s-2xlarge;
}

.#{$ns}-picklist--header--text {
  @include xui-text-xsmall;
  @include xui-padding-horizontal($xui-s-xsmall);
}

.#{$ns}-picklist--divider {
  border-bottom: $xui-border-standard;
  height: 0px;
}

// Pickitems and their sub-elements
.#{$ns}-pickitem {
  align-items: center;
  display: flex;
  flex-grow: 1000000;
  outline: none;
  position: relative;
  &.#{$ns}-pickitem-text-truncated {
    min-width: $pickitem-min-width;
    // These classes are used to set min-width for the pickitem.
    &.#{$ns}-pickitem-has-leftelement-secondarytext {
      min-width: $pickitem-has-leftelement-secondarytext-min-width;
    }
    &.#{$ns}-pickitem-has-secondarytext {
      min-width: $pickitem-has-secondarytext-min-width;
    }
    &.#{$ns}-pickitem-has-leftelement {
      min-width: $pickitem-has-leftelement-min-width;
    }
  }
}

.#{$ns}-pickitem--body {
  align-items: center;
  background: transparent;
  border: 0;
  color: inherit;
  cursor: pointer;
  font-family: $xui-font-family;
  margin-bottom: 0; // Removes some default margins from Safari
  margin-top: 0; // Removes some default margins from Safari
  outline: none;
  padding: 0px; // Removes default browser button padding
  text-align: left;
  text-decoration: none; // In case pickitem body element is a link
  width: 100%;

  .#{$ns}-pickitem:not(.#{$ns}-pickitem-is-disabled) > & {
    &:hover,
    &:focus {
      background: $xui-pickitem-focus-bg-color;
    }
    &:hover {
      cursor: pointer;
    }
    &:active {
      background: $xui-pickitem-active-bg-color;
    }
  }
}

.#{$ns}-pickitem--body-has-icon {
  @include xui-button-has-icon;
}

.#{$ns}-pickitem--text {
  .#{$ns}-pickitem-multiselect--checkbox &.#{$ns}-styledcheckboxradio--label {
    // Use existing pickitem sizing for the checkbox labels.
    font-size: 100%;
    // Overriding in-built margins for checkbox/radio labels.
    @include xui-margin-vertical(2px);
    margin-left: $xui-s-2xsmall;
    margin-right: 0px;
  }
  &.#{$ns}-pickitem-text-truncated {
    display: flex;
  }
  .#{$ns}-pickitem-multiline & {
    display: flex;
    flex-wrap: wrap;
  }
  .#{$ns}-pickitem-text-truncated {
    min-width: $xui-minimum-touch-target;
  }
}
.#{$ns}-pickitem--heading {
  @include xui-text-emphasis;
  width: 100%;
}

.#{$ns}-pickitem--secondary {
  color: $xui-pickitem-secondary-text-color;
  .#{$ns}-pickitem .#{$ns}-pickitem--text .#{$ns}-pickitem--heading + & {
    margin-left: 0px;
    max-width: 100%;
  }
  &.#{$ns}-pickitem-text-truncated {
    // 75% is used as an arbitrary number to prioritise truncation of the secondary label
    max-width: 75%;
  }
}

.#{$ns}-pickitem--pinned {
  align-self: flex-start;
  color: $xui-pickitem-secondary-text-color;
  flex-shrink: 0;
  max-width: 20%;
  padding-right: $xui-s-2xsmall;
  text-align: right;
  .#{$ns}-pickitem--text > & {
    float: right;
  }
  .#{$ns}-pickitem--text.#{$ns}-pickitem-text-truncated > & {
    order: 1;
  }
}

.#{$ns}-pickitem--sideelement {
  align-items: center;
  justify-content: center;
  // Most styles for sideelement are specific to size or orientation.
  .#{$ns}-icon {
    pointer-events: none;
  }
}

.#{$ns}-pickitem--caret {
  @include xui-button--caret;
}

.#{$ns}-pickitem-multiselect--checkbox {
  flex-grow: 1;
  &:last-child {
    padding-right: $xui-s-xsmall;
  }
  &:nth-last-child(n + 2) {
    padding-right: $xui-s-2xsmall;
  }
  &.#{$ns}-pickitem-text-truncated {
    display: inline-flex;
  }
}

.#{$ns}-pickitem-multiselect--label
  > .#{$ns}-pickitem-text-truncated:not(.#{$ns}-pickitem--pinned) {
  display: flex;
  flex: auto;
}

// Nested lists and their controlling elements
.#{$ns}-picklist--nestedcontainer {
  display: flex;
  flex-wrap: wrap;
  position: relative;

  > .#{$ns}-pickitem-split {
    border-right: 1px solid $xui-color-grey-alpha-7;
  }
}

// Submenu more specificity for layout adjustments
.#{$ns}-submenu {
  @include xui-listreset;
  flex: none;
  @include xui-motion-animation(false, transition) {
    transition: all $xui-motion-speed-fast $xui-motion-curve-standard;
  }

  .#{$ns}-pickitem-multiselect--checkbox {
    padding-left: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--sideelement:first-child {
    margin-left: $xui-s-xsmall;
  }
}

.#{$ns}-submenu-layout {
  flex: 0 0 auto;
  max-height: 0;
  overflow: hidden;
  width: 100%;
}

.#{$ns}-submenu-uicontrol {
  display: flex;
  flex: 0 0 auto;
  outline: none;

  .#{$ns}-pickitem--text {
    width: 100%;
  }
  .#{$ns}-pickitem--text:first-child {
    padding-left: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--text:nth-child(n + 2) {
    padding-left: $xui-s-2xsmall;
  }
  .#{$ns}-pickitem--text:last-child {
    padding-right: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $xui-s-2xsmall;
  }
  .#{$ns}-pickitem--sideelement {
    display: flex;
  }
  .#{$ns}-pickitem-split + & {
    border-radius: $xui-radius-circle;
    margin-left: $xui-s-2xsmall;
  }

  &:hover,
  &:focus {
    background: $xui-pickitem-focus-bg-color;
  }

  &:active {
    background: $xui-pickitem-active-bg-color;
  }
}

.#{$ns}-submenu-uicontrol--icon {
  align-self: center;
  color: $xui-submenu-uicontrol-icon-color;
  @include xui-motion-animation(false, transition) {
    transition: all $xui-motion-speed-fast $xui-motion-curve-standard;
  }
}

.#{$ns}-pickitem--submenucontrol {
  @include xui-utility-hidden-visually;
  flex-grow: 0;

  /**
  * If the invisible checkbox is outside the viewport when toggled the viewport will scroll
  * unexpectedly. To ensure the checkbox is in view whenever the pickitem is, we set the height of
  * the checkbox to 100%.
  *
  * `!important` is required to override the height set by `xui-utility-hidden-visually`.
  *
  * If you want to remove this please check what happens when you expand a nested picklist at the
  * edges of the viewport in Google Chrome.
  */
  height: $xui-s-3xlarge !important;

  &:checked {
    & + .#{$ns}-pickitem-split .#{$ns}-submenu-uicontrol--icon {
      transform: rotate(180deg);
    }

    & ~ .#{$ns}-submenu-uicontrol .#{$ns}-submenu-uicontrol--icon {
      transform: rotate(180deg);
    }

    & ~ .#{$ns}-submenu-layout {
      max-height: 100vh;
      overflow: auto;
    }
  }
}

.#{$ns}-pickitem-split {
  align-items: stretch;
  display: flex;
  flex-flow: row nowrap;

  .#{$ns}-pickitem {
    border-right: 1px solid rgba($xui-color-black, 0.1);
    flex: 1 1 auto;
  }
}

.#{$ns}-pickitem--uicontrol {
  align-items: center;
  display: flex;
  padding: 3px;

  &:hover,
  &:focus {
    background: $xui-pickitem-focus-bg-color;
  }

  &:active {
    background: $xui-pickitem-active-bg-color;
  }
}

// Item-level more specific styles
// Vertical
.#{$ns}-pickitem:not(.#{$ns}-pickitem-is-horizontal) {
  .#{$ns}-pickitem--body {
    display: flex;
  }
  .#{$ns}-pickitem--text {
    flex-grow: 100;
    max-width: 100%;
    @include xui-text-wordbreak;
  }
  .#{$ns}-pickitem--body > .#{$ns}-pickitem--text:last-child {
    padding-right: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--body > .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $xui-s-2xsmall;
  }
  &:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body .#{$ns}-pickitem--text:first-child {
    padding-left: $xui-s-xsmall;
  }
  &:not(.#{$ns}-pickitem-multiselect)
    > .#{$ns}-pickitem--body
    .#{$ns}-pickitem--text:nth-child(n + 2) {
    padding-left: $xui-s-2xsmall;
  }
  .#{$ns}-pickitem--sideelement {
    display: flex;
  }
}

// Horizontal
.#{$ns}-pickitem.#{$ns}-pickitem-is-horizontal {
  .#{$ns}-pickitem {
    // Fix for text truncation - see https://scottwhittaker.net/flexbox/2017/02/05/flexbox-and-text-truncation.html
    min-width: 0;
  }
  .#{$ns}-pickitem--sideelement {
    display: inline-flex;
    vertical-align: middle;
  }
  .#{$ns}-pickitem--body {
    display: flex;
    height: 100%;
    justify-content: center;
    text-align: center;
    &.#{$ns}-pickitem--body-has-leftelement {
      padding-left: $xui-s-small;
    }
    &.#{$ns}-pickitem--body-has-rightelement {
      padding-right: $xui-s-small;
    }
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) {
    // This selector shouldn't need to be so strong.
    .#{$ns}-pickitem--body:before {
      /* Remove default left border */
      border-left: none;
      border-top: none;
      width: 100%;
    }
  }
  .#{$ns}-pickitem--text {
    justify-content: center;
  }
  .#{$ns}-pickitem--text,
  .#{$ns}-pickitem--pinned {
    vertical-align: middle;
  }
}

.#{$ns}-pickitem-medium {
  .#{$ns}-pickitem--body {
    @include xui-text-medium;
    min-height: $xui-s-3xlarge;
  }
  .#{$ns}-pickitem--body .#{$ns}-pickitem--input {
    margin: ($xui-s-xsmall + 2);
  }
  .#{$ns}-submenu & .#{$ns}-pickitem--body {
    padding-left: $xui-s-large;
  }
  &:not(.#{$ns}-pickitem-is-horizontal) .#{$ns}-pickitem--text,
  &:not(.#{$ns}-pickitem-multiselect) .#{$ns}-pickitem--pinned {
    @include xui-padding-vertical($xui-s-xsmall);
  }
  &.#{$ns}-pickitem-split + .#{$ns}-submenu-uicontrol {
    margin-right: $xui-s-small;
  }
  &.#{$ns}-pickitem-is-horizontal .#{$ns}-pickitem--sideelement {
    min-width: $xui-s-3xlarge;
  }
}

.#{$ns}-picklist-medium .#{$ns}-submenu-uicontrol:nth-child(2) {
  @include xui-padding-horizontal($xui-s-small);
}

// Size-specific vertical
.#{$ns}-pickitem-medium:not(.#{$ns}-pickitem-is-horizontal) {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-small);
  }
  .#{$ns}-pickitem--sideelement {
    height: $xui-s-3xlarge;
    min-width: $xui-s-3xlarge;
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body::before {
    border-left-width: 3px;
    width: 3px;
  }
  .#{$ns}-pickitem--secondary,
  .#{$ns}-pickitem--pinned {
    margin-left: $xui-s-standard;
  }
}

// Size-specific horizontal
.#{$ns}-pickitem-medium.#{$ns}-pickitem-is-horizontal {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-large);
  }
  &:not(.#{$ns}-pickitem-text-truncated) > .#{$ns}-pickitem--body {
    @include xui-padding-vertical($xui-s-xsmall);
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body:before {
    border-bottom-width: 3px;
  }
  .#{$ns}-pickitem--text:nth-child(n + 2),
  .#{$ns}-pickitem--secondary {
    padding-left: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $xui-s-xsmall;
  }
}

// State-specific
.#{$ns}-pickitem-is-invalid .#{$ns}-pickitem--body {
  color: $xui-invalid-color;
}

.#{$ns}-pickitem-is-hovered {
  background: $xui-pickitem-focus-bg-color;
  &:hover,
  &:focus {
    background: $xui-pickitem-focus-bg-color;
  }

  &:active {
    background: $xui-pickitem-active-bg-color;
  }
  // Specificity exists to encapsulate the style update and eliminate nested menus
  // also receiving these styles.
  > .#{$ns}-pickitem--body {
    background: transparent;
    &:focus,
    &:hover,
    &:active {
      background: transparent;
    }
  }
}

.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) {
  &:not(.#{$ns}-pickitem-is-invalid):not(.#{$ns}-pickitem-is-disabled) > .#{$ns}-pickitem--body {
    color: $xui-pickitem-selected-color;
  }
  > .#{$ns}-pickitem--body::before {
    border-color: currentColor;
    border-right-width: 0px;
    border-style: solid;
    bottom: 0;
    content: ' ';
    display: block;
    left: 0;
    position: absolute;
    top: 0;
    z-index: $xui-z-index-body;
  }
  &:hover,
  &:focus {
    color: $xui-pickitem-selected-hover-color;
  }
  &:active {
    color: $xui-pickitem-selected-active-color;
  }
}

// Size-specific
.#{$ns}-picklist-medium {
  // List-level
  &.#{$ns}-picklist-layout {
    @include xui-padding-vertical($xui-s-small);
  }
  > .#{$ns}-picklist--header {
    @include xui-padding-horizontal($xui-s-small);
  }
  > .#{$ns}-picklist--divider {
    @include xui-margin-vertical($xui-s-small);
  }

  // Item-level by list size
  .#{$ns}-picklist--nestedcontainer > .#{$ns}-pickitem--body {
    @include xui-text-medium;
    min-height: $xui-s-3xlarge;
  }
  .#{$ns}-submenu-uicontrol--icon.#{$ns}-iconwrapper {
    height: $xui-s-3xlarge;
    width: $xui-s-3xlarge;
  }
  .#{$ns}-pickitem--submenucontrol:checked ~ .#{$ns}-submenu-layout {
    @include xui-padding-vertical($xui-s-small);
  }
  .#{$ns}-submenu .#{$ns}-pickitem--body {
    padding-left: $xui-s-small + $xui-s-large; // Double indent for sub menus.
  }
}

// Utility style that can be applied to pickitems and sub-elements.
.#{$ns}-pickitem-text-truncated {
  @include xui-text-truncated;
}

.#{$ns}-pickitem-is-disabled {
  .#{$ns}-pickitem--body {
    color: $xui-checkboxradio-label-disabled-color;
    cursor: not-allowed;
  }
  &:hover {
    background-color: transparent;
    cursor: not-allowed;
  }
}
