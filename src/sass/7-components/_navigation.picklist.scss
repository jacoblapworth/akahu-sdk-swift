@import '../vars';
@import '../mixins';

// Picklist
//
// Teaser: A list of actions, filters or tabs.
//
// Introduction: Picklists are used to group a list of pickitem actions, filters or tabs. Picklists are usually contained inside a panel or a dropdown.
//
// Components: Picklist
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.41heitrj0iir
//
// Styleguide: Compounds.DisplayingData.Picklist

// Anatomy
//
// To create a group of pickitems, apply the following `picklist` and `pickitem` classes to `<ul>` and `<li>` elements, respectively.
//
// Classes:
// xui-picklist: Container for a group of pickitems
// xui-picklist-layout: Recommended layout for a group of pickitems
// xui-pickitem: Container for an individual pickitem
// xui-pickitem--body: A selectable pickitem
// xui-pickitem--text: Text content within a pickitem
//
// Tips:
// Warning: Avoid using picklists on anything but a white background, as colour contrast is not accessible
//
// Markup:
// <div class="xui-panel">
//  <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//    <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Save</span>
//      </button>
//    </li>
//    <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Save & add another</span>
//      </button>
//    </li>
//    <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Discard draft</span>
//      </button>
//    </li>
//  </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.1

// Pick item states
//
// To adjust the state of a pickitem, apply the following modifiers.
//
// Classes:
// xui-pickitem-is-selected: Selected pickitem
// xui-pickitem-is-disabled: Disabled pickitem
// xui-pickitem-is-invalid: Invalid pickitem
//
// Markup:
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Invoices</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Bills</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-disabled" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Invoices</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-disabled" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Bills</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-invalid" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Invoices</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-invalid" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Bills</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.2

// Size variants
//
// Picklist offers a range of size variants. All but `-medium` are being “sunset” because they don’t meet our minimum touch target standards.
//
// Tips:
// Do: Medium size should be used for all picklists
// Dont: Don't use small and xsmall size variants. Small and xsmall variants now have a “Sunsetting” flag because they don’t meet our minimum touch target standards.
//
// Styleguide: Compounds.DisplayingData.Picklist.3

// Medium
//
// Definitions:
// Size variant: **Height**: **Class**
// medium: 40px: `xui-picklist-medium`<br>`xui-pickitem-medium`
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Today</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Tomorrow</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Next week</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Next month</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.3.1

// Small, xsmall
//
// flags: sunsetting
//
// Definitions:
// Size variant: **Height**: **Class**
// small: 32px: `xui-picklist-small`<br>`xui-pickitem-small`
// xsmall: 24px: `xui-picklist-xsmall`<br>`xui-pickitem-xsmall`
//
// Markup:
// <div class="xui-panel xui-margin-bottom">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-small" role="tree">
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-small" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Today</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-small" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Tomorrow</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-small" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Next week</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-small" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Next month</span>
//       </button>
//     </li>
//   </ul>
// </div>
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-xsmall" role="tree">
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-xsmall" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Today</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-xsmall" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Tomorrow</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-xsmall" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Next week</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-xsmall" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Next month</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.3.2

// Text styling
//
// Classes:
// xui-pickitem--secondary: Apply to style inline secondary text
// xui-pickitem--pinned: Apply to style right pinned text
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">Nicole Crosby<span class="xui-pickitem--secondary">Admin</span></span>
//         <span class="xui-pickitem--pinned">50.00</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">Rosie Cox<span class="xui-pickitem--secondary">Admin</span></span>
//         <span class="xui-pickitem--pinned">60.00</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">Michael Lillis</span>
//         <span class="xui-pickitem--pinned">50.00</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.4

// Side elements
//
// A side element is a generalised term for visual and interactive content, that is pinned to the left or right-hand side of a container. Below are prescribed elements that you can use inside the `xui-pickitem--sideelement` wrapper class. Side elements can be aligned left or right, depending on whether they are placed before or after the `xui-pickitem--text` container.
//
// Classes:
// xui-pickitem--sideelement: Side element wrapper class
//
// Styleguide: Compounds.DisplayingData.Picklist.5

// Icons
//
// Classes:
// xui-icon: Apply to SVG icon within side element wrapper
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">High priority</span>
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon xui-u-rotate-270">
//             <use xlink:href="#xui-icon-arrow" role="presentation"></use>
//           </svg>
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Medium priority</span>
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon xui-u-rotate-270">
//             <use xlink:href="#xui-icon-arrow" role="presentation"></use>
//           </svg>
//         </span>
//       </button>
//     </li>
//   </ul>
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <svg focusable="false" class="xui-icon">
//             <use xlink:href="#xui-icon-plus" role="presentation"></use>
//           </svg>
//         </span>
//         <span class="xui-pickitem--text">Create new group</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.5.1

// Avatars
//
// Classes:
// xui-avatar-small: Apply to avatar within side element wrapper
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-1" role="presentation">JS</abbr>
//         </span>
//         <span class="xui-pickitem--text">Jam Sudson</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium">
//       <button class="xui-pickitem--body">
//         <span class="xui-pickitem--sideelement">
//           <abbr class="xui-avatar xui-avatar-small xui-avatar-color-2" role="presentation">HB</abbr>
//         </span>
//         <span class="xui-pickitem--text">Harry Bannah</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.5.2

// Truncating
//
// The default behaviour of pickitem text is to wrap.
// To prevent wrapping, apply the following utility class.
//
// Classes:
// xui-pickitem-text-truncated: Apply to pickitem text
//
// Styleguide: Compounds.DisplayingData.Picklist.6

// Headers and dividers
//
// Classes:
// xui-picklist--header: Apply to heading list item wrapper
// xui-picklist--header--text: Apply to heading text wrapper
// xui-picklist--divider: Adds dividing line break between items
//
// Markup:
// <div class="xui-panel">
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
//     <li class="xui-picklist--header">
//       <span class="xui-picklist--header--text">Recent</span>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">Monique Smith</span>
//       </button>
//     </li>
//     <li class="xui-picklist--divider"></li>
//     <li class="xui-picklist--header">
//       <span class="xui-picklist--header--text">Suggested</span>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">Ben Watts</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-medium" role="treeitem">
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">Cleo Mitchell</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.7

// Multiselect picklist
//
// Tips:
// Do: Replace any left side elements with checkbox when using a multiselect picklist
// Dont: Don't display a left side element alongside a checkbox inside a pickitem
// Dont: Multiselect is not supported for xsmall size variant picklists
//
// Classes:
// xui-pickitem-multiselect: Apply to pickitems
// xui-pickitem-multiselect--checkbox: Apply to pickitem label
// xui-pickitem--input: Apply to style checkbox
// xui-pickitem-multiselect--label: Apply to pickitem text wrapper
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="group">
// 		<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" aria-selected="false" role="option" id="0-1">
// 			<div class="xui-pickitem--body" role="presentation">
// 				<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" role="presentation">
// 					<input type="checkbox" tabindex="-1" aria-labelledby="aaa" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" value="">
// 					<div class="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small"></div>
// 					<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label" id="aaa">
// 						<span class="">Retail</span>
// 					</span>
// 				</label>
// 			</div>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" aria-selected="false" role="option" id="0-1">
// 			<div class="xui-pickitem--body" role="presentation">
// 				<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" role="presentation">
// 					<input type="checkbox" tabindex="-1" aria-labelledby="aab" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" value="">
// 					<div class="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small"></div>
// 					<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label" id="aab">
// 						<span class="">Construction</span>
// 					</span>
// 				</label>
// 			</div>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" aria-selected="false" role="option" id="0-1">
// 			<div class="xui-pickitem--body" role="presentation">
// 				<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" role="presentation">
// 					<input type="checkbox" tabindex="-1" aria-labelledby="aac" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" value="">
// 					<div class="xui-styledcheckboxradio--checkbox xui-pickitem--input xui-styledcheckboxradio--checkbox-small"></div>
// 					<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text xui-pickitem-multiselect--label" id="aac">
// 						<span class="">Professional services</span>
// 					</span>
// 				</label>
// 			</div>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.8

// Multiline pickitems
//
// Classes:
// xui-pickitem-multiline: Apply to pickitem to wrap content
// xui-pickitem--heading: Apply to primary content
// xui-pickitem--secondary: Apply to secondary content
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
// 		<li class="xui-pickitem xui-pickitem-multiline xui-pickitem-medium" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--sideelement">
// 					<abbr class="xui-avatar xui-avatar-small xui-avatar-color-5" role="presentation">CT</abbr>
// 				</span>
// 				<span class="xui-pickitem--text">
// 					<span class="xui-pickitem--heading xui-pickitem-text-truncated">Cam Trollope</span>
// 					<span class="xui-pickitem--secondary xui-pickitem-text-truncated">cam.trollope@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiline xui-pickitem-medium" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--sideelement">
// 					<abbr class="xui-avatar xui-avatar-small xui-avatar-color-6" role="presentation">GC</abbr>
// 				</span>
// 				<span class="xui-pickitem--text">
// 					<span class="xui-pickitem--heading xui-pickitem-text-truncated">Georgia Cottrell</span>
// 					<span class="xui-pickitem--secondary xui-pickitem-text-truncated">georgia.cottrell@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 	</ul>
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
// 		<li class="xui-picklist--header">
// 			<span class="xui-picklist--header--text">Removed users</span>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiline xui-pickitem-medium" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--sideelement">
// 					<svg focusable="false" class="xui-icon">
// 						<use xlink:href="#xui-icon-contact" role="presentation"></use>
// 					</svg>
// 				</span>
// 				<span class="xui-pickitem--text">
// 					<span class="xui-pickitem--heading xui-pickitem-text-truncated">Robb Schiller</span>
// 					<span class="xui-pickitem--secondary xui-pickitem-text-truncated">robb.schiller@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.9

// Expanding picklists
//
// To hide and show a list of sub-menu pickitems, apply the following classes.
//
// Classes:
// xui-picklist--nestedcontainer: Apply to expanding pickitem
// xui-pickitem--submenucontrol: Apply to checkbox that opens and closes nested list
// xui-submenu-uicontrol--icon: Apply to icon nested within label
// xui-submenu: Container for a group of nested pickitems
// xui-submenu-layout: Recommended layout modifier for a group of pickitems
//
// Styleguide: Compounds.DisplayingData.Picklist.10

// Standard
//
// If the parent pickitem does not have a destination or function, use the standard (non-split) variant.
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="group">
// 		<li class="xui-picklist--nestedcontainer" aria-expanded="true">
//			<input role="treeitem" type="checkbox" class="xui-pickitem--submenucontrol" id="nested-checkbox" tabindex="-1" aria-owns="nested">
//			<label role="button" for="nested-checkbox" class="xui-submenu-uicontrol xui-pickitem--body" tabindex="0" aria-label="Toggle submenu">
//				<span class="xui-pickitem--text">Clients</span>
//				<div class="xui-submenu-uicontrol--icon xui-iconwrapper">
// 					<svg focusable="false" class="xui-icon">
// 						<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 					</svg>
//				</div>
//			</label>
//			<ul role="listbox" class="xui-submenu xui-submenu-layout" id="nested">
//				<li class="xui-pickitem xui-pickitem-medium" role="option" id="0-1">
//					<button type="button" class="xui-pickitem--body">
// 						<span class="xui-pickitem--sideelement">
// 							<abbr class="xui-avatar xui-avatar-business xui-avatar-small xui-avatar-color-7" role="presentation">AC</abbr>
// 						</span>
//						<span class="xui-pickitem--text">Andy Carrell</span>
//					</button>
//				</li>
//				<li class="xui-pickitem xui-pickitem-medium" role="option" id="0-2">
//					<button type="button" class="xui-pickitem--body">
// 						<span class="xui-pickitem--sideelement">
// 							<abbr class="xui-avatar xui-avatar-business xui-avatar-small xui-avatar-color-8" role="presentation">JK</abbr>
// 						</span>
//						<span class="xui-pickitem--text">Jishaal Kalyan</span>
//					</button>
//				</li>
//				<li class="xui-pickitem xui-pickitem-medium" role="option" id="0-3">
//					<button type="button" class="xui-pickitem--body">
// 						<span class="xui-pickitem--sideelement">
// 							<abbr class="xui-avatar xui-avatar-business xui-avatar-small xui-avatar-color-9" role="presentation">SK</abbr>
// 						</span>
//						<span class="xui-pickitem--text">Simar Karla</span>
//					</button>
//				</li>
//			</ul>
//		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.10.1

// Split
//
// If the parent pickitem can be selected separately from it's children, the split variant is the appropriate functionality to use. This creates distinct controls for selecting the parent, as well as opening the sub-menu of pickitems.
//
// Classes:
// xui-pickitem-split: Add to pickitem
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-medium" role="tree">
// 		<li class="xui-picklist--nestedcontainer" role="treeitem" aria-expanded="false">
// 			<input id="split-checkbox" type="checkbox" class="xui-pickitem--submenucontrol" tabindex="-1"/>
// 			<div class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium xui-pickitem-split" id="splitTrigger">
// 				<div class="xui-pickitem--body">
// 					<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio">
// 						<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small checked" tabindex="-1" checked>
// 						<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 						<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 							<span>Staff</span>
// 						</span>
// 					</label>
// 				</div>
// 			</div>
// 			<label for="split-checkbox" class="xui-submenu-uicontrol" title="Show or hide more options" aria-label="Show or hide more options" tabindex="-1" >
// 				<div class="xui-iconwrapper xui-submenu-uicontrol--icon">
// 					<svg focusable="false" class="xui-icon">
// 						<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 					</svg>
// 				</div>
// 			</label>
// 			<ul id="split" class="xui-submenu xui-submenu-layout xui-picklist-medium" role="group">
// 				<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" role="option">
// 					<div class="xui-pickitem--body">
// 						<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="tim">
// 							<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="tim">
// 							<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 							<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 								<span>Tim Redmond</span>
// 							</span>
// 						</label>
// 					</div>
// 				</li>
// 				<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" role="option">
// 					<div class="xui-pickitem--body">
// 						<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="finn">
// 							<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="finn">
// 							<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 							<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 								<span>Finn Clark</span>
// 							</span>
// 						</label>
// 					</div>
// 				</li>
// 				<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-medium" role="option">
// 					<div class="xui-pickitem--body">
// 						<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="grzegorz">
// 							<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="grzegorz">
// 							<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 							<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 								<span>Grzegorz Pawłowski-Chudziński</span>
// 							</span>
// 						</label>
// 					</div>
// 				</li>
// 			</ul>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.10.2

// Horizontal picklists
//
// flags: updatesComing
//
// To create a horizontal picklist, commonly referred to as tabs, apply the following modifier.
// We also recommend removing `xui-picklist-layout` to allow pickitems to stretch the full height or their containing element.
//
// Classes:
// xui-picklist-horizontal: Apply to picklist
// xui-pickitem-is-horizontal: Apply to pickitem
//
// Markup:
// <div class="xui-panel">
//   <div class="xui-u-flex">
//     <ul class="xui-picklist xui-picklist-horizontal xui-picklist-medium" role="tree">
//       <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//         <button type="button" class="xui-pickitem--body">
//           <span class="xui-pickitem--text">All</span>
//         </button>
//       </li>
//       <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//         <button type="button" class="xui-pickitem--body">
//           <span class="xui-pickitem--text">Current</span>
//         </button>
//       </li>
//       <li class="xui-pickitem xui-pickitem-medium xui-pickitem-is-horizontal" role="treeitem" tabindex="-1" >
//         <button type="button" class="xui-pickitem--body">
//           <span class="xui-pickitem--text">History</span>
//         </button>
//       </li>
//     </ul>
//   </div>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.11

// Accessibility
//
// These demos do not illustrate the recommended keyboard interaction, as it is not possible with static HTML.
// If you are using React, the component handles keyboard interaction and `tabindex` values for you.
// The resulting behaviour is that each picklist is a single tab stop with arrow keys being used to navigate to each pickitem.
// For more information on keyboard accessibility, view the [W3 documentation](https://www.w3.org/WAI/GL/wiki/Using_ARIA_trees#Keyboard_Support).
//
// A picklist is an implementation of a tree control.
// To be accessible, each picklist must have the `tree` role applied as well as an `aria-label` or `aria-labelledby` attribute directing to the desired label.
// Individual pickitems must have the `treeitem` role applied.
// For more information on tree controls, view the [W3 documentation](https://www.w3.org/WAI/GL/wiki/Using_ARIA_trees).
//
// In the case of an expanding pickitem, the parent must have the `group` role applied, and children must have the `option` role applied instead.
// Use the `aria-hidden` and `aria-expended` attributes when expanding or collapsing a pickitem with children.
//
// For selected pickitems, make sure to apply the `aria-selected` attribute.
//
// Styleguide: Compounds.DisplayingData.Picklist.13

// General picklist and pickitem styles

$pickitem-small-padding: $xui-s-xsmall - 2; // Standard 6px padding for small variant.

// Lists and list-level sub-elements
.#{$ns}-picklist {
  @include xui-listreset;
  position: relative;

  & + .#{$ns}-picklist {
    border-top: 1px solid $xui-color-grey-alpha-6;
  }
}

.#{$ns}-picklist-horizontal {
  display: flex;
  max-width: 100%;
  min-height: inherit; // IE11 bug fix
}

.#{$ns}-picklist--header {
  align-items: center;
  color: $xui-pickitem-secondary-text-color;
  display: flex;
  min-height: $xui-s-2xlarge;
}

.#{$ns}-picklist--header--text {
  @include xui-text-xsmall;
  @include xui-padding-horizontal($xui-s-xsmall);
}

.#{$ns}-picklist--divider {
  border-bottom: $xui-border-standard;
  height: 0px;
}

// Pickitems and their sub-elements
.#{$ns}-pickitem {
  align-items: center;
  display: flex;
  flex-grow: 1000000;
  outline: none;
  position: relative;
}

.#{$ns}-pickitem--body {
  align-items: center;
  background: transparent;
  border: 0;
  color: inherit;
  cursor: pointer;
  font-family: $xui-font-family;
  margin-bottom: 0; // Removes some default margins from Safari
  margin-top: 0; // Removes some default margins from Safari
  outline: none;
  padding: 0px; // Removes default browser button padding
  text-align: left;
  text-decoration: none; // In case pickitem body element is a link
  width: 100%;

  // In the specific context of a dropdownfooter, pickitems should be blue.
  .#{$ns}-dropdown--footer--picklist & {
    color: $xui-action-primary-color;
  }
  .#{$ns}-pickitem:not(.#{$ns}-pickitem-is-disabled) > & {
    &:hover,
    &:focus {
      background: $xui-pickitem-focus-bg-color;
    }
    &:hover {
      cursor: pointer;
    }
    &:active {
      background: $xui-pickitem-active-bg-color;
    }
  }
}

.#{$ns}-pickitem--text {
  @include xui-text-wordbreak;

  .#{$ns}-pickitem-multiselect--checkbox &.#{$ns}-styledcheckboxradio--label {
    // Use existing pickitem sizing for the checkbox labels.
    font-size: 100%;
    // Overriding in-built margins for checkbox/radio labels.
    @include xui-margin-vertical(2px);
    margin-left: $xui-s-2xsmall;
    margin-right: 0px;
  }
  &.#{$ns}-pickitem-text-truncated {
    display: flex;
  }
  .#{$ns}-pickitem-multiline & {
    flex-wrap: wrap;
  }
}
.#{$ns}-pickitem--heading {
  @include xui-text-emphasis;
  width: 100%;
}

.#{$ns}-pickitem--secondary {
  color: $xui-pickitem-secondary-text-color;
  .#{$ns}-pickitem .#{$ns}-pickitem--text .#{$ns}-pickitem--heading + & {
    margin-left: 0px;
    max-width: 100%;
  }
  &.#{$ns}-pickitem-text-truncated {
    max-width: 60%;
    min-width: 20%;
  }
}

.#{$ns}-pickitem--pinned {
  align-self: flex-start;
  color: $xui-pickitem-secondary-text-color;
  flex-shrink: 0;
  max-width: 20%;
  padding-right: $xui-s-2xsmall;
  text-align: right;
  .#{$ns}-pickitem--text > & {
    float: right;
  }
  .#{$ns}-pickitem--text.#{$ns}-pickitem-text-truncated > & {
    order: 1;
  }
}

.#{$ns}-pickitem--sideelement {
  align-items: center;
  justify-content: center;
  // Most styles for sideelement are specific to size or orientation.
  .#{$ns}-icon {
    pointer-events: none;
  }
}

.#{$ns}-pickitem-multiselect--checkbox {
  flex-grow: 1;
  &:last-child {
    padding-right: $xui-s-xsmall;
  }
  &:nth-last-child(n + 2) {
    padding-right: $xui-s-2xsmall;
  }
  &.#{$ns}-pickitem-text-truncated {
    display: inline-flex;
  }
}

.#{$ns}-pickitem-multiselect--label
  > .#{$ns}-pickitem-text-truncated:not(.#{$ns}-pickitem--pinned) {
  display: flex;
  flex: auto;
}

// Nested lists and their controlling elements
.#{$ns}-picklist--nestedcontainer {
  display: flex;
  flex-wrap: wrap;

  > .#{$ns}-pickitem-split {
    border-right: 1px solid $xui-color-grey-alpha-7;
  }
}

// Submenu more specificity for layout adjustments
.#{$ns}-submenu {
  @include xui-listreset;
  flex: none;
  transition: all $xui-motion-speed-fast $xui-motion-curve-standard;

  .#{$ns}-pickitem-multiselect--checkbox {
    padding-left: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--sideelement:first-child {
    margin-left: $xui-s-xsmall;
  }
}

.#{$ns}-submenu-layout {
  flex: 0 0 auto;
  max-height: 0;
  overflow: hidden;
  width: 100%;
}

.#{$ns}-submenu-uicontrol {
  display: flex;
  flex: 0 0 auto;
  outline: none;

  .#{$ns}-pickitem--text {
    width: 100%;
  }
  .#{$ns}-pickitem--text:first-child {
    padding-left: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--text:nth-child(n + 2) {
    padding-left: $xui-s-2xsmall;
  }
  .#{$ns}-pickitem--text:last-child {
    padding-right: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $xui-s-2xsmall;
  }
  .#{$ns}-pickitem--sideelement {
    display: flex;
  }
  .#{$ns}-pickitem-split + & {
    border-radius: 50%;
    margin-left: $xui-s-2xsmall;
  }

  &:hover,
  &:focus {
    background: $xui-pickitem-focus-bg-color;
  }

  &:active {
    background: $xui-pickitem-active-bg-color;
  }
}

.#{$ns}-submenu-uicontrol--icon {
  align-self: center;
  color: $xui-submenu-uicontrol-icon-color;
  transition: all $xui-motion-speed-fast $xui-motion-curve-standard;
}

.#{$ns}-pickitem--submenucontrol {
  @include xui-utility-hidden-visually;
  flex-grow: 0;

  &:checked {
    & + .#{$ns}-pickitem-split .#{$ns}-submenu-uicontrol--icon {
      transform: rotate(180deg);
    }

    & ~ .#{$ns}-submenu-uicontrol .#{$ns}-submenu-uicontrol--icon {
      transform: rotate(180deg);
    }

    & ~ .#{$ns}-submenu-layout {
      max-height: 100vh;
      overflow: auto;
    }
  }
}

.#{$ns}-pickitem-split {
  align-items: stretch;
  display: flex;
  flex-flow: row nowrap;

  .#{$ns}-pickitem {
    border-right: 1px solid rgba($xui-color-black, 0.1);
    flex: 1 1 auto;
  }
}

.#{$ns}-pickitem--uicontrol {
  align-items: center;
  display: flex;
  padding: 3px;

  &:hover,
  &:focus {
    background: $xui-pickitem-focus-bg-color;
  }

  &:active {
    background: $xui-pickitem-active-bg-color;
  }
}

// Item-level more specific styles
// Vertical
.#{$ns}-pickitem:not(.#{$ns}-pickitem-is-horizontal) {
  .#{$ns}-pickitem--body {
    display: flex;
  }
  .#{$ns}-pickitem--text {
    flex-grow: 100;
    max-width: 100%;
  }
  .#{$ns}-pickitem--body > .#{$ns}-pickitem--text:last-child {
    padding-right: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--body > .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $xui-s-2xsmall;
  }
  &:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body .#{$ns}-pickitem--text:first-child {
    padding-left: $xui-s-xsmall;
  }
  &:not(.#{$ns}-pickitem-multiselect)
    > .#{$ns}-pickitem--body
    .#{$ns}-pickitem--text:nth-child(n + 2) {
    padding-left: $xui-s-2xsmall;
  }
  .#{$ns}-pickitem--sideelement {
    display: flex;
  }
}

// Horizontal
.#{$ns}-pickitem.#{$ns}-pickitem-is-horizontal {
  .#{$ns}-pickitem {
    // Fix for text truncation - see https://scottwhittaker.net/flexbox/2017/02/05/flexbox-and-text-truncation.html
    min-width: 0;
  }
  .#{$ns}-pickitem--sideelement {
    display: inline-flex;
    vertical-align: middle;
  }
  .#{$ns}-pickitem--body {
    height: 100%;
    text-align: left;
  }
  &.#{$ns}-pickitem-text-truncated .#{$ns}-pickitem--body {
    display: flex;
  }
  &:not(.#{$ns}-pickitem-text-truncated) .#{$ns}-pickitem--body {
    display: block;
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) {
    // This selector shouldn't need to be so strong.
    .#{$ns}-pickitem--body:before {
      /* Remove default left border */
      border-left: none;
      border-top: none;
      width: 100%;
    }
  }
  .#{$ns}-pickitem--text {
    width: 100%;
  }
  .#{$ns}-pickitem--text,
  .#{$ns}-pickitem--pinned {
    vertical-align: middle;
  }
}

.#{$ns}-pickitem-medium {
  .#{$ns}-pickitem--body {
    @include xui-text-medium;
    min-height: $xui-s-3xlarge;
  }
  .#{$ns}-pickitem--body .#{$ns}-pickitem--input {
    margin: ($xui-s-xsmall + 2);
  }
  .#{$ns}-submenu & .#{$ns}-pickitem--body {
    padding-left: $xui-s-large;
  }
  .#{$ns}-pickitem--text,
  &:not(.#{$ns}-pickitem-multiselect) .#{$ns}-pickitem--pinned {
    @include xui-padding-vertical($xui-s-xsmall);
  }
  &.#{$ns}-pickitem-split + .#{$ns}-submenu-uicontrol {
    margin-right: $xui-s-small;
  }
}
.#{$ns}-pickitem-small {
  .#{$ns}-pickitem--body {
    @include xui-text-small;
    min-height: $xui-s-2xlarge;
  }
  .#{$ns}-pickitem--body .#{$ns}-pickitem--input {
    margin: $xui-s-xsmall;
  }
  .#{$ns}-submenu & .#{$ns}-pickitem--body {
    padding-left: $xui-s-standard;
  }
  .#{$ns}-pickitem--text,
  &:not(.#{$ns}-pickitem-multiselect) .#{$ns}-pickitem--pinned {
    @include xui-padding-vertical($pickitem-small-padding);
  }
  &.#{$ns}-pickitem-split + .#{$ns}-submenu-uicontrol {
    margin-right: $xui-s-xsmall;
  }
}
.#{$ns}-pickitem-xsmall {
  .#{$ns}-pickitem--body {
    @include xui-text-xsmall;
    min-height: $xui-s-xlarge;
  }
  .#{$ns}-submenu & .#{$ns}-pickitem--body {
    padding-left: $xui-s-small;
  }
  .#{$ns}-pickitem--text,
  .#{$ns}-pickitem--pinned {
    @include xui-padding-vertical($xui-s-2xsmall);
  }
  &.#{$ns}-pickitem-split + .#{$ns}-submenu-uicontrol {
    margin-right: $xui-s-2xsmall;
  }
}

.#{$ns}-picklist-medium .#{$ns}-submenu-uicontrol:nth-child(2) {
  @include xui-padding-horizontal($xui-s-small);
}
.#{$ns}-picklist-small .#{$ns}-submenu-uicontrol:nth-child(2) {
  @include xui-padding-horizontal($xui-s-xsmall);
}
.#{$ns}-picklist-xsmall .#{$ns}-submenu-uicontrol:nth-child(2) {
  @include xui-padding-horizontal($xui-s-2xsmall);
}

// Size-specific vertical
.#{$ns}-pickitem-medium:not(.#{$ns}-pickitem-is-horizontal) {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-small);
  }
  .#{$ns}-pickitem--sideelement {
    height: $xui-s-3xlarge;
    min-width: $xui-s-3xlarge;
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body::before {
    border-left-width: 3px;
    width: 3px;
  }
  .#{$ns}-pickitem--secondary,
  .#{$ns}-pickitem--pinned {
    margin-left: $xui-s-standard;
  }
}
.#{$ns}-pickitem-small:not(.#{$ns}-pickitem-is-horizontal) {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-xsmall);
  }
  .#{$ns}-pickitem--sideelement {
    height: $xui-s-2xlarge;
    min-width: $xui-s-2xlarge;
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body::before {
    border-left-width: 2px;
    width: 2px;
  }
  .#{$ns}-pickitem--secondary,
  .#{$ns}-pickitem--pinned {
    margin-left: $xui-s-small;
  }
}
.#{$ns}-pickitem-xsmall:not(.#{$ns}-pickitem-is-horizontal) {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-2xsmall);
  }
  .#{$ns}-pickitem--sideelement {
    height: $xui-s-xlarge;
    min-width: $xui-s-xlarge;
  }
  &.#{$ns}-pickitem-is-selected > .#{$ns}-pickitem--body::before {
    border-left-width: 1px;
    width: 1px;
  }
  .#{$ns}-pickitem--secondary,
  .#{$ns}-pickitem--pinned {
    margin-left: $xui-s-xsmall;
  }
}

// Size-specific horizontal
.#{$ns}-pickitem-medium.#{$ns}-pickitem-is-horizontal {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-large);
  }
  &:not(.#{$ns}-pickitem-text-truncated) > .#{$ns}-pickitem--body {
    @include xui-padding-vertical($xui-s-xsmall);
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body:before {
    border-bottom-width: 3px;
  }
  .#{$ns}-pickitem--text:nth-child(n + 2),
  .#{$ns}-pickitem--secondary {
    padding-left: $xui-s-xsmall;
  }
  .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $xui-s-xsmall;
  }
}
.#{$ns}-pickitem-small.#{$ns}-pickitem-is-horizontal {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-standard);
  }
  &:not(.#{$ns}-pickitem-text-truncated) > .#{$ns}-pickitem--body {
    @include xui-padding-vertical($pickitem-small-padding);
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body:before {
    border-bottom-width: 2px;
  }
  .#{$ns}-pickitem--text:nth-child(n + 2),
  .#{$ns}-pickitem--secondary {
    padding-left: $pickitem-small-padding;
  }
  .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $pickitem-small-padding;
  }
}
.#{$ns}-pickitem-xsmall.#{$ns}-pickitem-is-horizontal {
  .#{$ns}-pickitem--body {
    @include xui-padding-horizontal($xui-s-small);
  }
  &:not(.#{$ns}-pickitem-text-truncated) > .#{$ns}-pickitem--body {
    @include xui-padding-vertical($xui-s-2xsmall);
  }
  &.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body:before {
    border-bottom-width: 1px;
  }
  .#{$ns}-pickitem--text:nth-child(n + 2),
  .#{$ns}-pickitem--secondary {
    padding-left: $xui-s-2xsmall;
  }
  .#{$ns}-pickitem--text:nth-last-child(n + 2) {
    padding-right: $xui-s-2xsmall;
  }
}

// State-specific
.#{$ns}-pickitem-is-invalid .#{$ns}-pickitem--body {
  color: $xui-invalid-color;
}

.#{$ns}-pickitem-is-hovered {
  background: $xui-pickitem-focus-bg-color;
  &:hover,
  &:focus {
    background: $xui-pickitem-focus-bg-color;
  }

  &:active {
    background: $xui-pickitem-active-bg-color;
  }
  // Specificity exists to encapsulate the style update and eliminate nested menus
  // also receiving these styles.
  > .#{$ns}-pickitem--body {
    background: transparent;
    &:focus,
    &:hover,
    &:active {
      background: transparent;
    }
  }
}

.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) {
  &:not(.#{$ns}-pickitem-is-invalid):not(.#{$ns}-pickitem-is-disabled) > .#{$ns}-pickitem--body {
    color: $xui-pickitem-selected-color;
  }
  > .#{$ns}-pickitem--body::before {
    border-color: currentColor;
    border-right-width: 0px;
    border-style: solid;
    bottom: 0;
    content: ' ';
    display: block;
    left: 0;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  &:hover,
  &:focus {
    color: $xui-pickitem-selected-hover-color;
  }
  &:active {
    color: $xui-pickitem-selected-active-color;
  }
}

// Size-specific
.#{$ns}-picklist-medium {
  // List-level
  &.#{$ns}-picklist-layout {
    @include xui-padding-vertical($xui-s-small);
  }
  > .#{$ns}-picklist--header {
    @include xui-padding-horizontal($xui-s-small);
  }
  > .#{$ns}-picklist--divider {
    @include xui-margin-vertical($xui-s-small);
  }

  // Item-level by list size
  .#{$ns}-picklist--nestedcontainer > .#{$ns}-pickitem--body {
    @include xui-text-medium;
    min-height: $xui-s-3xlarge;
  }
  .#{$ns}-submenu-uicontrol--icon.#{$ns}-iconwrapper {
    height: $xui-s-3xlarge;
    width: $xui-s-3xlarge;
  }
  .#{$ns}-pickitem--submenucontrol:checked ~ .#{$ns}-submenu-layout {
    @include xui-padding-vertical($xui-s-small);
  }
  .#{$ns}-submenu .#{$ns}-pickitem--body {
    padding-left: $xui-s-small + $xui-s-large; // Double indent for sub menus.
  }
}
.#{$ns}-picklist-small {
  // List-level
  &.#{$ns}-picklist-layout {
    @include xui-padding-vertical($xui-s-xsmall);
  }
  > .#{$ns}-picklist--header {
    @include xui-padding-horizontal($xui-s-xsmall);
  }
  > .#{$ns}-picklist--divider {
    @include xui-margin-vertical($xui-s-xsmall);
  }

  // Item-level by list size
  .#{$ns}-picklist--nestedcontainer > .#{$ns}-pickitem--body {
    @include xui-text-small;
    min-height: $xui-s-2xlarge;
  }
  .#{$ns}-submenu-uicontrol--icon.#{$ns}-iconwrapper {
    height: $xui-s-2xlarge;
    width: $xui-s-2xlarge;
  }
  .#{$ns}-pickitem--submenucontrol:checked ~ .#{$ns}-submenu-layout {
    @include xui-padding-vertical($xui-s-xsmall);
  }
  .#{$ns}-submenu .#{$ns}-pickitem--body {
    padding-left: $xui-s-xsmall + $xui-s-standard; // Double indent for sub menus.
  }
}
.#{$ns}-picklist-xsmall {
  // List-level
  &.#{$ns}-picklist-layout {
    @include xui-padding-vertical($xui-s-2xsmall);
  }
  > .#{$ns}-picklist--header {
    @include xui-padding-horizontal($xui-s-2xsmall);
  }
  > .#{$ns}-picklist--divider {
    @include xui-margin-vertical($xui-s-2xsmall);
  }

  // Item-level by list size
  .#{$ns}-picklist--nestedcontainer > .#{$ns}-pickitem--body {
    @include xui-text-xsmall;
    min-height: $xui-s-xlarge;
  }
  .#{$ns}-submenu-uicontrol--icon.#{$ns}-iconwrapper {
    height: $xui-s-xlarge;
    width: $xui-s-xlarge;
  }
  .#{$ns}-pickitem--submenucontrol:checked ~ .#{$ns}-submenu-layout {
    @include xui-padding-vertical($xui-s-2xsmall);
  }
  .#{$ns}-submenu .#{$ns}-pickitem--body {
    padding-left: $xui-s-2xsmall + $xui-s-small; // Double indent for sub menus.
  }
}

// Utility style that can be applied to pickitems and sub-elements.
.#{$ns}-pickitem-text-truncated {
  @include xui-text-truncated;
}

.#{$ns}-pickitem-is-disabled {
  .#{$ns}-pickitem--body {
    color: $xui-checkboxradio-label-disabled-color;
    cursor: not-allowed;
  }
  &:hover {
    background-color: transparent;
    cursor: not-allowed;
  }
}
