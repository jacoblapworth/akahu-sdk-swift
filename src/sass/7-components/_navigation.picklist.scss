@import "../vars";
@import "../mixins";

// Picklist
//
// Teaser: A list of actions, filters or tabs.
//
// Introduction: Picklists are used to group a list of actions, filters or tabs.
//
// Components: Picklist
//
// Styleguide: Compounds.DisplayingData.Picklist

// Anatomy
//
// To create a group of pickitems, apply the following `picklist` and `pickitem` classes to `<ul>` and `<li>` elements, respectively.
//
// Classes:
// xui-picklist: Container for a group of pickitems
// xui-picklist-layout: Recommended layout for a group of pickitems
// xui-pickitem: Container for an individual pickitem
// xui-pickitem--body: A selectable pickitem
// xui-pickitem--text: Text content within a pickitem
//
// Markup:
// <div class='xui-panel'>
//  <ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
//    <li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Save</span>
//      </button>
//    </li>
//    <li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Save & add another</span>
//      </button>
//    </li>
//    <li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
//      <button type="button" class="xui-pickitem--body">
//        <span class="xui-pickitem--text">Discard draft</span>
//      </button>
//    </li>
//  </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.1

// Selecting
//
// To indicate a pickitem has been selected, apply the following modifier.
//
// Classes:
// xui-pickitem-is-selected: Apply to item
//
// Markup:
// <div class='xui-panel'>
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Status</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-standard" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Date</span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
//       <button type="button" class="xui-pickitem--body">
//         <span class="xui-pickitem--text">Amount</span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.2


// Changing direction
//
// To create a horizontal picklist, commonly referred to as tabs, apply the following modifier.
// We also recommend removing `xui-picklist-layout` to allow pickitems to stretch the full height or their containing element.
//
// Classes:
// xui-picklist-horizontal: Apply to picklist
//
// Markup:
// <div class='xui-panel'>
//   <div class='xui-panel--header xui-u-flex'>
//     <ul class="xui-picklist xui-picklist-horizontal xui-picklist-standard" role="tree">
//       <li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
//         <button type="button" class="xui-pickitem--body">
//           <span class="xui-pickitem--text">All</span>
//         </button>
//       </li>
//       <li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-standard" role="treeitem" tabindex="-1" >
//         <button type="button" class="xui-pickitem--body">
//           <span class="xui-pickitem--text">Current</span>
//         </button>
//       </li>
//       <li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
//         <button type="button" class="xui-pickitem--body">
//           <span class="xui-pickitem--text">History</span>
//         </button>
//       </li>
//     </ul>
//   </div>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.3

// Truncating
//
// The default behaviour of pickitem text is to wrap.
// To prevent wrapping, apply the following utility class.
//
// Classes:
// xui-pickitem-text-truncated: Apply to pickitem text
//
// Styleguide: Compounds.DisplayingData.Picklist.4

// Common layouts
//
// Many different layouts are achievable by adding a few typography presets and utility classes.
//
// Styleguide: Compounds.DisplayingData.Picklist.6

// Headings
//
// Classes:
// xui-text-minor: Apply to heading
//
// Markup:
// <div class='xui-panel'>
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree" aria-labelledby="recent">
//     <li id="recent" class="xui-margin-vertical-xsmall xui-padding-horizontal-large xui-text-minor xui-pickitem-text-truncated">
//       Recent
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <button type='button' class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           302 — Entertainment
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <button type='button' class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           440 — Overseas Travel
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <button type='button' class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           301 — Office Supplies
//         </span>
//       </button>
//     </li>
//   </ul>
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree" aria-labelledby="all">
//     <li id="all" class="xui-margin-vertical-xsmall xui-padding-horizontal-large xui-text-minor xui-pickitem-text-truncated">
//       All
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <button type='button' class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           300 — Sales
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <button type='button' class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           400 — Expenses
//         </span>
//       </button>
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <button type='button' class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           500 — Fixed assets
//         </span>
//       </button>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.6.1

// Icon
//
// Classes:
// xui-pickitem--icon: Apply to icon
//
// Markup:
// <div class='xui-panel'>
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <div class="xui-iconwrapper xui-pickitem--icon">
//         <svg focusable="false" class="xui-icon xui-icon-color-black-muted">
//           <use xlink:href="#xui-icon-plus" role="presentation"></use>
//         </svg>
//       </div>
//       <span class="xui-pickitem--body">
//         <span class="xui-pickitem--text">
//           Create new
//         </span>
//       </span>
//     </li>
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <div class="xui-iconwrapper xui-pickitem--icon">
//         <svg focusable="false" class="xui-icon xui-icon-color-black-muted">
//           <use xlink:href="#xui-icon-help" role="presentation"></use>
//         </svg>
//       </div>
//       <span class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           Help
//         </span>
//       </span>
//     </li>
//   </ul>
//   <ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
//     <li class="xui-pickitem xui-pickitem-standard" role="treeitem">
//       <div class="xui-iconwrapper xui-pickitem--icon">
//         <svg focusable="false" class="xui-icon xui-icon-color-black-muted">
//           <use xlink:href="#xui-icon-lock" role="presentation"></use>
//         </svg>
//       </div>
//       <span class="xui-pickitem--body">
//         <span class="xui-pickitem--text xui-pickitem-text-truncated">
//           Logout
//         </span>
//       </span>
//     </li>
//   </ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.6.2

// Nested parent
//
// Classes:
// xui-text-secondary: Apply to secondary content
// xui-icon-color-black-muted: Apply to icon
//
// Markup:
// <div class='xui-panel'>
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text xui-pickitem-text-truncated">
// 					<span>Status</span>
// 					<span class="xui-text-secondary xui-margin-left-small">Draft, Sent</span>
// 				</span>
// 				<div class="xui-iconwrapper xui-margin-right-small">
// 					<svg focusable="false" class="xui-icon xui-icon-rotate-270 xui-icon-color-black-muted">
// 						<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 					</svg>
// 				</div>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text xui-pickitem-text-truncated">
// 					<span>Date range</span>
// 					<span class="xui-text-secondary xui-margin-left-small">1 Apr 2016 — 31 Mar 2017</span>
// 				</span>
// 				<div class="xui-iconwrapper xui-margin-right-small">
// 					<svg focusable="false" class="xui-icon xui-icon-rotate-270 xui-icon-color-black-muted">
// 						<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 					</svg>
// 				</div>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text xui-pickitem-text-truncated">
// 					<span>Created by</span>
// 					<span class="xui-text-secondary xui-margin-left-small">Tim Redmond +2 others</span>
// 				</span>
// 				<div class="xui-iconwrapper xui-margin-right-small">
// 					<svg focusable="false" class="xui-icon xui-icon-rotate-270 xui-icon-color-black-muted">
// 						<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 					</svg>
// 				</div>
// 			</button>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.6.3

// Pinned value
//
// Classes:
// xui-text-secondary: Apply to pinned value
// xui-u-flex-inherit: Apply to pickitem text
//
// Markup:
// <div class='xui-panel'>
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text xui-u-flex-inherit">
// 					<span class="xui-u-flex-1 xui-pickitem-text-truncated">Draft</span>
// 					<span class="xui-text-secondary xui-padding-left-small">18</span>
// 				</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text xui-u-flex-inherit">
// 					<span class="xui-u-flex-1 xui-pickitem-text-truncated">Sent</span>
// 					<span class="xui-text-secondary xui-padding-left-small">3</span>
// 				</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<span class="xui-pickitem--text xui-u-flex-inherit">
// 					<span class="xui-u-flex-1 xui-pickitem-text-truncated">Paid</span>
// 					<span class="xui-text-secondary xui-padding-left-small">42</span>
// 				</span>
// 			</button>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.6.4

// Checkbox
//
// Classes:
// xui-pickitem--input: Apply to the checkbox
// xui-pickitem--text: Apply to pickitem text
//
// Markup:
// <div class='xui-panel'>
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="group">
// 		<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-standard" role="option">
// 			<div class="xui-pickitem--body">
// 				<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="discount">
// 					<input type="checkbox" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="discount">
// 					<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 					<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
//						<span>Discount</span>
// 					</span>
// 				</label>
// 			</div>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-standard" role="option">
// 			<div class="xui-pickitem--body">
// 				<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="reference">
// 					<input type="checkbox" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="reference">
// 					<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 					<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
//						<span>Reference</span>
// 					</span>
// 				</label>
// 			</div>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-standard" role="option">
// 			<div class="xui-pickitem--body">
// 				<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="quantity">
// 					<input type="checkbox" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="quantity">
// 					<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 					<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
//						<span>Quantity</span>
// 					</span>
// 				</label>
// 			</div>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.6.5

// Avatar
//
// Classes:
// xui-avatar-small: Apply to avatar
//
// Markup:
// <div class='xui-panel'>
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem">
// 			<button type="button" class="xui-pickitem--body">
// 				<abbr class="xui-avatar xui-avatar-small xui-avatar-color-8 xui-margin-right">JM</abbr>
// 				<span class="xui-pickitem--text xui-pickitem-text-truncated">James Magness</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem">
// 			<button type="button" class="xui-pickitem--body">
// 				<abbr class="xui-avatar xui-avatar-small xui-avatar-color-5 xui-margin-right">TR</abbr>
// 				<span class="xui-pickitem--text xui-pickitem-text-truncated">Tim Redmond</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem">
// 			<button type="button" class="xui-pickitem--body">
// 				<abbr class="xui-avatar xui-avatar-small xui-avatar-color-2 xui-margin-right">ME</abbr>
// 				<span class="xui-pickitem--text xui-pickitem-text-truncated">Maxine Ellah</span>
// 			</button>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.6.6

// Multine avatar
//
// Classes:
// xui-text-emphasis: Apply to primary content
// xui-text-secondary: Apply to secondary content
//
// Markup:
// <div class='xui-panel'>
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<abbr class="xui-avatar xui-avatar xui-avatar-color-8 xui-margin-right-small">JM</abbr>
// 				<span class="xui-pickitem--text xui-u-overflow-hidden xui-u-flex xui-u-flex-column">
// 					<span class="xui-text-emphasis xui-pickitem-text-truncated">James Magness</span>
// 					<span class="xui-text-secondary xui-pickitem-text-truncated">james.magness@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<abbr class="xui-avatar xui-avatar xui-avatar-color-5 xui-margin-right-small">KH</abbr>
// 				<span class="xui-pickitem--text xui-u-overflow-hidden xui-u-flex xui-u-flex-column">
// 					<span class="xui-text-emphasis xui-pickitem-text-truncated">Tim Redmond</span>
// 					<span class="xui-text-secondary xui-pickitem-text-truncated">tim.redmond@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 		<li class="xui-pickitem xui-pickitem-standard" role="treeitem" tabindex="-1" >
// 			<button type="button" class="xui-pickitem--body">
// 				<abbr class="xui-avatar xui-avatar xui-avatar-color-2 xui-margin-right-small">FP</abbr>
// 				<span class="xui-pickitem--text xui-u-overflow-hidden  xui-u-flex xui-u-flex-column">
// 					<span class="xui-text-emphasis xui-pickitem-text-truncated">Maxine Ellah</span>
// 					<span class="xui-text-secondary xui-pickitem-text-truncated">maxine.ellah@xero.com</span>
// 				</span>
// 			</button>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.6.7

// Expanding lists
//
// To hide and show a list of sub pickitems, apply the following classes.
//
// Classes:
// xui-picklist--nestedcontainer: Apply to expanding pickitem
// xui-pickitem--submenucontrol: Apply to checkbox that opens and closes nested list
// xui-submenu-uicontrol--icon: Apply to icon nested within label
// xui-submenu: Container for a group of nested pickitems
// xui-submenu-layout: Recommended layout modifier for a group of pickitems
//
// Styleguide: Compounds.DisplayingData.Picklist.8

// Standard
//
// Tips:
// Do: If the parent pickitem does not have a destination, the whole row toggles visibility of children pickitems.
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
// 		<li class="xui-picklist--nestedcontainer" role="treeitem" aria-expanded="false">
// 			<input id="nested-checkbox" type="checkbox" class="xui-pickitem--submenucontrol" aria-owns="nested" value="on" tabindex="-1">
// 			<label for="nested-checkbox" class="xui-pickitem--body" title="Open or close the menu" role="button" aria-label="Open or close the menu" tabindex="-1">
// 				<span class="xui-pickitem--text">Accounts</span>
// 				<div class="xui-iconwrapper xui-submenu-uicontrol--icon">
// 					<svg focusable="false" class="xui-icon">
// 						<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 					</svg>
// 				</div>
// 			</label>
// 			<ul id="nested" class="xui-submenu xui-submenu-layout xui-picklist-standard" role="group">
// 				<li class="xui-pickitem xui-pickitem-standard" role="option">
// 					<button type="button" class="xui-pickitem--body" tabindex="-1">
// 						<span class="xui-pickitem--text">Sales</span>
// 					</button>
// 				</li>
// 				<li class="xui-pickitem xui-pickitem-is-selected xui-pickitem-standard" role="option">
// 					<button type="button" class="xui-pickitem--body" tabindex="-1">
// 						<span class="xui-pickitem--text">Purchases</span>
// 					</button>
// 				</li>
// 				<li class="xui-pickitem xui-pickitem-standard" aria-selected="false" role="option">
// 					<button type="button" class="xui-pickitem--body" tabindex="-1">
// 						<span class="xui-pickitem--text">Expenses</span>
// 					</button>
// 				</li>
// 			</ul>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.8.1

// Split
//
// Tips:
// Do: If the parent pickitem can be selected separately from it's children, the row selects it, and a separate control toggles visibility of children pickitems
//
// Classes:
// xui-pickitem-split: Add to pickitem
//
// Markup:
// <div class="xui-panel">
// 	<ul class="xui-picklist xui-picklist-layout xui-picklist-standard" role="tree">
// 		<li class="xui-picklist--nestedcontainer" role="treeitem" aria-expanded="false">
// 			<input id="split-checkbox" type="checkbox" class="xui-pickitem--submenucontrol" tabindex="-1"/>
// 			<div class="xui-pickitem xui-pickitem-multiselect xui-pickitem-standard xui-pickitem-split" id="splitTrigger">
// 				<div class="xui-pickitem--body">
// 					<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio">
// 						<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small checked" tabindex="-1" checked>
// 						<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 						<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 							<span>Staff</span>
// 						</span>
// 					</label>
// 				</div>
// 			</div>
// 		<label for="split-checkbox" class="xui-submenu-uicontrol" title="Show or hide more options" aria-label="Show or hide more options" tabindex="-1" >
// 			<div class="xui-iconwrapper xui-submenu-uicontrol--icon">
// 				<svg focusable="false" class="xui-icon">
// 					<use xlink:href="#xui-icon-arrow" role="presentation"></use>
// 				</svg>
// 			</div>
// 		</label>
// 		<ul id="split" class="xui-submenu xui-submenu-layout xui-picklist-standard" role="group">
// 			<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-standard" role="option">
// 				<div class="xui-pickitem--body">
// 					<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="tim">
// 						<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="tim">
// 						<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 						<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 							<span>Tim Redmond</span>
// 						</span>
// 					</label>
// 				</div>
// 			</li>
// 			<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-standard" role="option">
// 				<div class="xui-pickitem--body">
// 					<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="fin">
// 						<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="finn">
// 						<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 						<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 							<span>Finn Clark</span>
// 						</span>
// 					</label>
// 				</div>
// 			</li>
// 			<li class="xui-pickitem xui-pickitem-multiselect xui-pickitem-standard" role="option">
// 				<div class="xui-pickitem--body">
// 					<label class="xui-pickitem-multiselect--checkbox xui-styledcheckboxradio" for="maxine">
// 						<input type="checkbox" tabindex="-1" class="xui-styledcheckboxradio--input xui-styledcheckboxradio--input-small" id="maxine">
// 						<div class="xui-styledcheckboxradio--checkbox xui-styledcheckboxradio--checkbox-small xui-pickitem--input"></div>
// 						<span class="xui-styledcheckboxradio--label xui-styledcheckboxradio--label-small xui-pickitem--text">
// 							<span>Maxine Ellah</span>
// 						</span>
// 					</label>
// 				</div>
// 			</li>
// 		</ul>
// 		</li>
// 	</ul>
// </div>
//
// Styleguide: Compounds.DisplayingData.Picklist.8.2

// Accessibility
//
// These demos do not illustrate the recommended keyboard interaction, as it is not possible with static HTML.
// If you are using React, the component handles keyboard interaction and `tabindex` values for you.
// The resulting behaviour is that each picklist is a single tab stop with arrow keys being used to navigate to each pickitem.
// For more information on keyboard accessibility, view the [W3 documentation](https://www.w3.org/WAI/GL/wiki/Using_ARIA_trees#Keyboard_Support).
//
// A picklist is an implementation of a tree control.
// To be accessible, each picklist must have the `tree` role applied as well as an `aria-label` or `aria-labelledby` attribute directing to the desired label.
// Individual pickitems must have the `treeitem` role applied.
// For more information on tree controls, view the [W3 documentation](https://www.w3.org/WAI/GL/wiki/Using_ARIA_trees).
//
// In the case of an expanding pickitem, the parent must have the `group` role applied, and children must have the `option` role applied instead.
// Use the `aria-hidden` and `aria-expended` attributes when expanding or collapsing a pickitem with children.
//
// For selected pickitems, make sure to apply the `aria-selected` attribute.
//
// Styleguide: Compounds.DisplayingData.Picklist.10

// General picklist and pickitem styles

$pickitem-small-padding: $xui-s-xsmall - 2; // Standard 6px padding for small variant.

// Lists and list-level sub-elements
.#{$ns}-picklist {
	@include xui-listreset;
	position: relative;

	& + .#{$ns}-picklist {
		border-top: 1px solid $xui-color-grey-alpha-6;
	}
}

.#{$ns}-picklist-horizontal {
	display: inline-flex;
	max-width: 100%;
	min-height: inherit; // IE11 bug fix
}

.#{$ns}-picklist--header {
	align-items: center;
	color: $xui-pickitem-secondary-text-color;
	display: flex;
	min-height: $xui-s-2xlarge;
}

.#{$ns}-picklist--header--text {
	@include xui-text-xsmall;
	@include xui-padding-horizontal($xui-s-xsmall);
}

.#{$ns}-picklist--divider {
	border-bottom: $xui-border-standard;
	height: 0px;
}

// Pickitems and their sub-elements
.#{$ns}-pickitem {
	align-items: center;
	display: flex;
	flex-grow: 1000000;
	outline: none;
	position: relative;
	&:hover,
	&:focus {
		background: $xui-pickitem-focus-bg-color;
	}
	&:hover {
		cursor: pointer;
	}
	&:active {
		background: $xui-pickitem-active-bg-color;
	}
}

.#{$ns}-pickitem--body {
	align-items: center;
	background: transparent;
	border: 0;
	color: inherit;
	cursor: pointer;
	font-family: $xui-font-family;
	outline: none;
	padding: 0px; // Removes default browser button padding
	text-align: left;
	text-decoration: none; // In case pickitem body element is a link
	width: 100%;

	// In the specific context of a dropdownfooter, pickitems should be blue.
	.#{$ns}-dropdown--footer--picklist & {
		color: $xui-action-primary-color;
	}
}

.#{$ns}-pickitem--text {
	@include xui-text-wordbreak;

	.#{$ns}-pickitem-multiselect--checkbox &.#{$ns}-styledcheckboxradio--label {
		// Use existing pickitem sizing for the checkbox labels.
		font-size: 100%;
		// Overriding in-built margins for checkbox/radio labels.
		margin-left: $xui-s-2xsmall;
		margin-right: 0px;
	}
	&.#{$ns}-pickitem-text-truncated {
		display: flex;
	}
	.#{$ns}-pickitem-multiline & {
		flex-wrap: wrap;
	}
}
.#{$ns}-pickitem--heading {
	@include xui-text-emphasis;
	width: 100%;
}

.#{$ns}-pickitem--secondary {
	color: $xui-pickitem-secondary-text-color;
	.#{$ns}-pickitem .#{$ns}-pickitem--text .#{$ns}-pickitem--heading + & {
		margin-left: 0px;
		max-width: 100%;
	}
	&.#{$ns}-pickitem-text-truncated {
		max-width: 60%;
		min-width: 20%;
	}
}

.#{$ns}-pickitem--pinned {
	align-self: flex-start;
	color: $xui-pickitem-secondary-text-color;
	flex-shrink: 0;
	max-width: 20%;
	padding-right: $xui-s-2xsmall;
	text-align: right;
	.#{$ns}-pickitem--text > & {
		float: right;
	}
	.#{$ns}-pickitem--text.#{$ns}-pickitem-text-truncated > & {
		order: 1;
	}
}

.#{$ns}-pickitem--sideelement {
	align-items: center;
	justify-content: center;
	// Most styles for sideelement are specific to size or orientation.
	.#{$ns}-icon {
		pointer-events: none;
	}
}

.#{$ns}-pickitem-multiselect--checkbox {
	flex-grow: 1;
	&:last-child {
		padding-right: $xui-s-xsmall;
	}
	&:nth-last-child(n+2) {
		padding-right: $xui-s-2xsmall;
	}
	&.#{$ns}-pickitem-text-truncated {
		display: inline-flex;
	}
}

.#{$ns}-pickitem-multiselect--label > .#{$ns}-pickitem-text-truncated:not(.#{$ns}-pickitem--pinned) {
	display: flex;
	flex: auto;
}

// Nested lists and their controlling elements
.#{$ns}-picklist--nestedcontainer {
	display: flex;
	flex-wrap: wrap;

	> .#{$ns}-pickitem-split {
		border-right: 1px solid $xui-color-grey-alpha-7;
	}
}

// Submenu more specificity for layout adjustments
.#{$ns}-submenu {
	@include xui-listreset;
	flex: none;
	transition: all $xui-motion-speed-fast $xui-motion-curve-standard;

	.#{$ns}-pickitem-multiselect--checkbox {
		padding-left: $xui-s-xsmall;
	}
	.#{$ns}-pickitem--sideelement:first-child {
		margin-left: $xui-s-xsmall;
	}
}

.#{$ns}-submenu-layout {
	flex: 0 0 auto;
	max-height: 0;
	overflow: hidden;
	width: 100%;
}

.#{$ns}-submenu-uicontrol {
	display: flex;
	flex: 0 0 auto;
	outline: none;

	.#{$ns}-pickitem--text {
		width: 100%;
	}
	.#{$ns}-pickitem--text:first-child {
		padding-left: $xui-s-xsmall;
	}
	.#{$ns}-pickitem--text:nth-child(n + 2) {
		padding-left: $xui-s-2xsmall;
	}
	.#{$ns}-pickitem--text:last-child {
		padding-right: $xui-s-xsmall;
	}
	.#{$ns}-pickitem--text:nth-last-child(n + 2) {
		padding-right: $xui-s-2xsmall;
	}
	.#{$ns}-pickitem--sideelement {
		display: flex;
	}
	.#{$ns}-pickitem-split + & {
		border-radius: 50%;
		margin-left: $xui-s-2xsmall;
	}

	&:hover,
	&:focus {
		background: $xui-pickitem-focus-bg-color;
	}

	&:active {
		background: $xui-pickitem-active-bg-color;
	}
}

.#{$ns}-submenu-uicontrol--icon {
	align-self: center;
	color: $xui-submenu-uicontrol-icon-color;
	transition: all $xui-motion-speed-fast $xui-motion-curve-standard;
}

.#{$ns}-pickitem--submenucontrol {
	@include xui-utility-hidden-visually;
	flex-grow: 0;

	&:checked {

		& + .#{$ns}-pickitem--split .#{$ns}-submenu-uicontrol--icon, // TODO: remove this old selector
		& + .#{$ns}-pickitem-split .#{$ns}-submenu-uicontrol--icon {
			transform: rotate(180deg);
		}

		& ~ .#{$ns}-submenu-uicontrol .#{$ns}-submenu-uicontrol--icon {
			transform: rotate(180deg);
		}

		& ~ .#{$ns}-submenu-layout {
			max-height: 100vh;
			overflow: auto;
		}

	}
}

.#{$ns}-pickitem-split {
	align-items: stretch;
	display: flex;
	flex-flow: row nowrap;

	.#{$ns}-pickitem {
		border-right: 1px solid rgba($xui-color-black, 0.1);
		flex: 1 1 auto;
	}

}

.#{$ns}-pickitem--uicontrol {
	align-items: center;
	display: flex;
	padding: 3px;

	&:hover,
	&:focus {
		background: $xui-pickitem-focus-bg-color;
	}

	&:active {
		background: $xui-pickitem-active-bg-color;
	}
}

// Item-level more specific styles
// Vertical
.#{$ns}-pickitem:not(.#{$ns}-pickitem-is-horizontal) {
	.#{$ns}-pickitem--body {
		display: flex;
	}
	.#{$ns}-pickitem--text {
		flex-grow: 100;
		max-width: 100%;
	}
	.#{$ns}-pickitem--body > .#{$ns}-pickitem--text:last-child {
		padding-right: $xui-s-xsmall;
	}
	.#{$ns}-pickitem--body > .#{$ns}-pickitem--text:nth-last-child(n+2) {
		padding-right: $xui-s-2xsmall;
	}
	&:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body .#{$ns}-pickitem--text:first-child {
		padding-left: $xui-s-xsmall;
	}
	&:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body .#{$ns}-pickitem--text:nth-child(n+2) {
		padding-left: $xui-s-2xsmall;
	}
	.#{$ns}-pickitem--sideelement {
		display: flex;
	}
}

// Horizontal
.#{$ns}-pickitem.#{$ns}-pickitem-is-horizontal {
	.#{$ns}-pickitem {
		// Fix for text truncation - see https://scottwhittaker.net/flexbox/2017/02/05/flexbox-and-text-truncation.html
		min-width: 0;
	}
	.#{$ns}-pickitem--sideelement {
		display: inline-flex;
		vertical-align: middle;
	}
	.#{$ns}-pickitem--body {
		text-align: left;
	}
	&.#{$ns}-pickitem-text-truncated .#{$ns}-pickitem--body {
		display: flex;
	}
	&:not(.#{$ns}-pickitem-text-truncated) .#{$ns}-pickitem--body {
		display: block;
	}
	.#{$ns}-pickitem--body::after {
		content: "";
		display: inline-block;
		vertical-align: middle;
	}
	&.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) {
		// This selector shouldn't need to be so strong.
		.#{$ns}-pickitem--body:before {
			/* Remove default left border */
			border-left: none;
			border-top: none;
			width: 100%;
		}
	}
	.#{$ns}-pickitem--text {
		width: 100%;
	}
	.#{$ns}-pickitem--text,
	.#{$ns}-pickitem--pinned {
		vertical-align: middle;
	}
}

// Size-specific
.#{$ns}-picklist-standard {
	// List-level
	&.#{$ns}-picklist-layout {
		@include xui-padding-vertical($xui-s-small);
	}
	> .#{$ns}-picklist--header {
		@include xui-padding-horizontal($xui-s-small);
	}
	> .#{$ns}-picklist--divider {
		@include xui-margin-vertical($xui-s-small);
	}

	// Item-level by list size
	.#{$ns}-picklist--nestedcontainer > .#{$ns}-pickitem--body {
		@include xui-text-standard;
		min-height: $xui-s-3xlarge;
	}
	.#{$ns}-submenu-uicontrol--icon.#{$ns}-iconwrapper {
		height: $xui-s-3xlarge;
		min-width: $xui-s-3xlarge;
	}
	.#{$ns}-pickitem--submenucontrol:checked ~ .#{$ns}-submenu-layout {
		@include xui-padding-vertical($xui-s-small);
	}
}
.#{$ns}-picklist-small {
	// List-level
	&.#{$ns}-picklist-layout {
		@include xui-padding-vertical($xui-s-xsmall);
	}
	> .#{$ns}-picklist--header {
		@include xui-padding-horizontal($xui-s-xsmall);
	}
	> .#{$ns}-picklist--divider {
		@include xui-margin-vertical($xui-s-xsmall);
	}

	// Item-level by list size
	.#{$ns}-picklist--nestedcontainer > .#{$ns}-pickitem--body {
		@include xui-text-small;
		min-height: $xui-s-2xlarge;
	}
	.#{$ns}-submenu-uicontrol--icon.#{$ns}-iconwrapper {
		height: $xui-s-2xlarge;
		min-width: $xui-s-2xlarge;
	}
	.#{$ns}-pickitem--submenucontrol:checked ~ .#{$ns}-submenu-layout {
		@include xui-padding-vertical($xui-s-xsmall);
	}
}
.#{$ns}-picklist-xsmall {
	// List-level
	&.#{$ns}-picklist-layout {
		@include xui-padding-vertical($xui-s-2xsmall);
	}
	> .#{$ns}-picklist--header {
		@include xui-padding-horizontal($xui-s-2xsmall);
	}
	> .#{$ns}-picklist--divider {
		@include xui-margin-vertical($xui-s-2xsmall);
	}

	// Item-level by list size
	.#{$ns}-picklist--nestedcontainer > .#{$ns}-pickitem--body {
		@include xui-text-xsmall;
		min-height: $xui-s-xlarge;
	}
	.#{$ns}-submenu-uicontrol--icon.#{$ns}-iconwrapper {
		height: $xui-s-xlarge;
		min-width: $xui-s-xlarge;
	}
	.#{$ns}-pickitem--submenucontrol:checked ~ .#{$ns}-submenu-layout {
		@include xui-padding-vertical($xui-s-2xsmall);
	}
}

.#{$ns}-pickitem-standard {
	.#{$ns}-pickitem--body {
		@include xui-text-standard;
		min-height: $xui-s-3xlarge;
	}
	.#{$ns}-pickitem--body .#{$ns}-pickitem--input {
		margin: ($xui-s-xsmall + 2);
	}
	.#{$ns}-submenu & .#{$ns}-pickitem--body {
		padding-left: $xui-s-large;
	}
	.#{$ns}-pickitem--text,
	&:not(.#{$ns}-pickitem-multiselect) .#{$ns}-pickitem--pinned {
		@include xui-padding-vertical($xui-s-xsmall);
	}
	&.#{$ns}-pickitem-split + .#{$ns}-submenu-uicontrol {
		margin-right: $xui-s-small;
	}
}
.#{$ns}-pickitem-small {
	.#{$ns}-pickitem--body {
		@include xui-text-small;
		min-height: $xui-s-2xlarge;
	}
	.#{$ns}-pickitem--body .#{$ns}-pickitem--input {
		margin: $xui-s-xsmall;
	}
	.#{$ns}-submenu & .#{$ns}-pickitem--body {
		padding-left: $xui-s-standard;
	}
	.#{$ns}-pickitem--text,
	&:not(.#{$ns}-pickitem-multiselect) .#{$ns}-pickitem--pinned {
		@include xui-padding-vertical($pickitem-small-padding);
	}
	&.#{$ns}-pickitem-split + .#{$ns}-submenu-uicontrol {
		margin-right: $xui-s-xsmall;
	}
}
.#{$ns}-pickitem-xsmall {
	.#{$ns}-pickitem--body {
		@include xui-text-xsmall;
		min-height: $xui-s-xlarge;
	}
	.#{$ns}-submenu & .#{$ns}-pickitem--body {
		padding-left: $xui-s-small;
	}
	.#{$ns}-pickitem--text,
	.#{$ns}-pickitem--pinned {
		@include xui-padding-vertical($xui-s-2xsmall);
	}
	&.#{$ns}-pickitem-split + .#{$ns}-submenu-uicontrol {
		margin-right: $xui-s-2xsmall;
	}
}

// Size-specific vertical
.#{$ns}-pickitem-standard:not(.#{$ns}-pickitem-is-horizontal),
.#{$ns}-picklist-standard .#{$ns}-submenu-uicontrol:nth-child(2) {
	@include xui-padding-horizontal($xui-s-small);
	.#{$ns}-pickitem--sideelement,
	{
		height: $xui-s-3xlarge;
		min-width: $xui-s-3xlarge;
	}
	&.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body::before {
		border-left-width: 3px;
		width: 3px;
	}
	.#{$ns}-pickitem--secondary,
	.#{$ns}-pickitem--pinned {
		margin-left: $xui-s-standard;
	}
}
.#{$ns}-pickitem-small:not(.#{$ns}-pickitem-is-horizontal),
.#{$ns}-picklist-small .#{$ns}-submenu-uicontrol:nth-child(2) {
	@include xui-padding-horizontal($xui-s-xsmall);
	.#{$ns}-pickitem--sideelement {
		height: $xui-s-2xlarge;
		min-width: $xui-s-2xlarge;
	}
	&.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body::before {
		border-left-width: 2px;
		width: 2px;
	}
	.#{$ns}-pickitem--secondary,
	.#{$ns}-pickitem--pinned {
		margin-left: $xui-s-small;
	}
}
.#{$ns}-pickitem-xsmall:not(.#{$ns}-pickitem-is-horizontal),
.#{$ns}-picklist-xsmall .#{$ns}-submenu-uicontrol:nth-child(2) {
	@include xui-padding-horizontal($xui-s-2xsmall);
	.#{$ns}-pickitem--sideelement {
		height: $xui-s-xlarge;
		min-width: $xui-s-xlarge;
	}
	&.#{$ns}-pickitem-is-selected > .#{$ns}-pickitem--body::before {
		border-left-width: 1px;
		width: 1px;
	}
	.#{$ns}-pickitem--secondary,
	.#{$ns}-pickitem--pinned {
		margin-left: $xui-s-xsmall;
	}
}

// Size-specific horizontal
.#{$ns}-pickitem-standard.#{$ns}-pickitem-is-horizontal {
	@include xui-padding-horizontal($xui-s-large);
	&:not(.#{$ns}-pickitem-text-truncated) > .#{$ns}-pickitem--body {
		@include xui-padding-vertical($xui-s-xsmall);
	}
	&.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body:before {
		border-bottom-width: 3px;
	}
	.#{$ns}-pickitem--text:nth-child(n+2),
	.#{$ns}-pickitem--secondary {
		padding-left: $xui-s-xsmall;
	}
	.#{$ns}-pickitem--text:nth-last-child(n+2) {
		padding-right: $xui-s-xsmall;
	}
	.#{$ns}-pickitem--body::after {
		min-height: $xui-line-height-standard;
	}
}
.#{$ns}-pickitem-small.#{$ns}-pickitem-is-horizontal {
	@include xui-padding-horizontal($xui-s-standard);
	&:not(.#{$ns}-pickitem-text-truncated) > .#{$ns}-pickitem--body {
		@include xui-padding-vertical($pickitem-small-padding);
	}
	&.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body:before {
		border-bottom-width: 2px;
	}
	.#{$ns}-pickitem--text:nth-child(n+2),
	.#{$ns}-pickitem--secondary {
		padding-left: $pickitem-small-padding;
	}
	.#{$ns}-pickitem--text:nth-last-child(n+2) {
		padding-right: $pickitem-small-padding;
	}
	.#{$ns}-pickitem--body::after {
		min-height: $xui-line-height-small;
	}
}
.#{$ns}-pickitem-xsmall.#{$ns}-pickitem-is-horizontal {
	@include xui-padding-horizontal($xui-s-small);
	&:not(.#{$ns}-pickitem-text-truncated) > .#{$ns}-pickitem--body {
		@include xui-padding-vertical($xui-s-2xsmall);
	}
	&.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) > .#{$ns}-pickitem--body:before {
		border-bottom-width: 1px;
	}
	.#{$ns}-pickitem--text:nth-child(n+2),
	.#{$ns}-pickitem--secondary {
		padding-left: $xui-s-2xsmall;
	}
	.#{$ns}-pickitem--text:nth-last-child(n+2) {
		padding-right: $xui-s-2xsmall;
	}
	.#{$ns}-pickitem--body::after {
		min-height: $xui-line-height-xsmall;
	}
}

// State-specific
.#{$ns}-pickitem-is-invalid .#{$ns}-pickitem--body {
	color: $xui-invalid-color;
}

.#{$ns}-pickitem-is-hovered {
	background: $xui-pickitem-focus-bg-color;
	&:hover,
	&:focus {
		background: $xui-pickitem-focus-bg-color;
	}

	&:active {
		background: $xui-pickitem-active-bg-color;
	}
	// Specificity exists to encapsulate the style update and eliminate nested menus
	// also receiving these styles.
	> .#{$ns}-pickitem--body {
		background: transparent;
		&:focus,
		&:hover,
		&:active {
			background: transparent;
		}
	}
}

.#{$ns}-pickitem-is-selected:not(.#{$ns}-pickitem-multiselect) {
	&:not(.#{$ns}-pickitem-is-invalid):not(.#{$ns}-pickitem-is-disabled) > .#{$ns}-pickitem--body {
		color: $xui-pickitem-selected-color;
	}
	> .#{$ns}-pickitem--body::before {
		border-color: currentColor;
		border-right-width: 0px;
		border-style: solid;
		bottom: 0;
		content: " ";
		display: block;
		left: 0;
		position: absolute;
		top: 0;
		z-index: 1;
	}
	&:hover, &:focus {
		color: $xui-pickitem-selected-hover-color;
	}
	&:active {
		color: $xui-pickitem-selected-active-color;
	}
}

// Utility style that can be applied to pickitems and sub-elements.
.#{$ns}-pickitem-text-truncated {
	@include xui-text-truncated
}

.#{$ns}-pickitem-is-disabled {
	.#{$ns}-pickitem--body,
	.#{$ns}-pickitem-multiselect--label .#{$ns}-pickitem--text {
		color: $xui-color-grey-3;
		cursor: not-allowed;
	}
	&:hover {
		background-color: transparent;
		cursor: not-allowed;
	}
}
