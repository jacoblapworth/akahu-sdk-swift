@use "sass:list";

@import '../vars';
@import '../mixins';

$xui-progress-circular-min-width: $xui-s-large;
$xui-progress-linear-min-height: $xui-s-2xsmall;

@mixin xui-stepper-add-total-track-color($color: $xui-progress-total-bg-color) {
  &:not(.#{$ns}-progress-overflow) .#{$ns}-progress-linear-track {
    background: $color;
  }

  &:not(.#{$ns}-progress-overflow) .#{$ns}-progress-circular-track {
    stroke: $color;
  }
}

@mixin xui-stepper-add-current-track-color($color: $xui-progress-current-bg-color) {
  &.#{$ns}-progress-complete .#{$ns}-progress-icon,
  &:not(.#{$ns}-progress-error-soft) .#{$ns}-progress-linear-current {
    background: $color;
  }

  &:not(.#{$ns}-progress-error-soft) .#{$ns}-progress-circular-current {
    stroke: $color;
  }
}

.#{$ns}-progress {
  outline: 0;
  position: relative;

  @include xui-stepper-add-total-track-color();
  @include xui-stepper-add-current-track-color();
}

.#{$ns}-progress-circular {
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  height: auto;
  justify-content: center;
  width: $xui-progress-circular-min-width;
}

.#{$ns}-progress--fragment {
  position: relative;
}

.#{$ns}-progress-circular.#{$ns}-progress-grow {
  min-width: $xui-progress-circular-min-width;
  width: 100%;
}

.#{$ns}-progress-circular-scaler {
  display: block;
  height: auto;
  width: 100%;
}

// TODO go through this file and rename classes to match our conventions (-- rather than - for subcomponents)
.#{$ns}-progress-circular-wrapper {
  display: block;
  height: 100%;
  transform: rotate(-90deg);
  width: 100%;
}

.#{$ns}-progress-circular-track,
.#{$ns}-progress-circular-current {
  fill: none;
}

.#{$ns}-progress-overflow .#{$ns}-progress-circular-track,
.#{$ns}-progress-error-soft .#{$ns}-progress-circular-current {
  stroke: $xui-progress-error-color;
}

.#{$ns}-progress-circular-current {
  transition: {
    duration: $xui-motion-speed-medium;
    property: background, stroke-dashoffset;
  }
}

.#{$ns}-progress-circular-mask {
  fill: black;
  stroke: white;
}

.#{$ns}-progress-circular-content {
  border-radius: $xui-radius-circle;
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.#{$ns}-progress-linear {
  min-width: $xui-minimum-touch-target;
  width: 100%;
}

.#{$ns}-progress-linear-wrapper,
.#{$ns}-progress-linear-track,
.#{$ns}-progress-linear-current {
  border-radius: $xui-radius-max;
  width: 100%;
}

.#{$ns}-progress-linear-wrapper {
  align-items: center;
  display: flex;
  justify-content: space-between;
  overflow: hidden;
}

.#{$ns}-progress-linear-track,
.#{$ns}-progress-linear-current {
  height: $xui-progress-linear-min-height;
}

.#{$ns}-progress-linear.#{$ns}-progress-grow {
  &,
  & [class*='progress'] {
    height: 100%;
  }
}

.#{$ns}-progress-overflow .#{$ns}-progress-linear-track,
.#{$ns}-progress-error-soft .#{$ns}-progress-linear-current,
.#{$ns}-progress-error-hard .#{$ns}-progress-linear-current {
  background: $xui-progress-error-color;
}

.#{$ns}-progress-linear-current {
  will-change: width;
  transition: {
    duration: $xui-motion-speed-medium;
    property: background, width;
  }
}

.#{$ns}-progress-linear-segment {
  margin: 0 $xui-progress-linear-min-height;

  &:first-child {
    margin-left: 0;
  }

  &:last-child {
    margin-right: 0;
  }
}

.#{$ns}-progress-linear-dot {
  position: relative;
  width: 0;
}

.#{$ns}-progress-linear-dot .#{$ns}-progress-linear-current,
.#{$ns}-progress-linear-dot .#{$ns}-progress-linear-track {
  height: 100%;
  position: absolute;
  top: 0;
}

.#{$ns}-progress-linear .#{$ns}-progress-icon {
  display: none;
}

.#{$ns}-progress-roundcap {
  stroke-linecap: round;
}

.#{$ns}-progress-hitbox {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

// Specificity exists here to match that of the tooltip classes
.#{$ns}-progress .#{$ns}-progress--tooltip {
  display: block;
  height: 100%;
  line-height: 1;
  width: 100%;
}

.#{$ns}-progress-complete .#{$ns}-progress-icon,
.#{$ns}-progress-error-hard .#{$ns}-progress-icon {
  opacity: 1;
  transform: scale(1);
}

.#{$ns}-progress-error-hard .#{$ns}-progress-icon {
  background: $xui-progress-error-color;
}

.#{$ns}-progress-icon {
  align-items: center;
  border-radius: $xui-radius-circle;
  color: $xui-progress-icon-color;
  display: flex;
  height: 100%;
  justify-content: center;
  left: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  transform: scale(0.5);
  transition: {
    duration: $xui-motion-speed-medium;
    property: opacity, transform;
  }
  width: 100%;
}

.#{$ns}-progress-icon-complete,
.#{$ns}-progress-icon-error {
  display: block;
  fill: currentColor;
}

.#{$ns}-progress-icon-complete {
  height: 8px;
  width: 10px;
}

.#{$ns}-progress-grow .#{$ns}-progress-icon-complete {
  height: auto;
  width: 50%;
}

.#{$ns}-progress-grow .#{$ns}-progress-icon-error {
  height: 30%;
  width: auto;
}

@for $i from 1 through list.length($xui-progress-colors) {
  $color: list.nth($xui-progress-colors, $i);
  $key: list.nth($color, 1);
  $value: list.nth($color, 2);

  [data-#{$ns}-progress-total-color='#{"" + $key}'] {
    @include xui-stepper-add-total-track-color($value);
  }

  [data-#{$ns}-progress-current-color='#{"" + $key}'] {
    @include xui-stepper-add-current-track-color($value);
  }
}
