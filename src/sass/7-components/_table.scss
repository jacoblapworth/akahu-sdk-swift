@import '../vars';
@import '../mixins';

$xui-table-action-offset: $xui-s-4xlarge;
$xui-table-z-pinned-shadow: 1;
$xui-table-z-pinned-column: 2;
$xui-table-z-pinned-appendages: 3;
$xui-table-z-alert: 4;

.#{$ns}-table {
  border-radius: $xui-radius;
  overflow: hidden;
  position: relative;
}

.#{$ns}-table-wrapper {
  .#{$ns}-table-responsive & {
    overflow-x: auto;
  }

  .#{$ns}-table-pinleft & {
    margin-left: $xui-table-action-offset;
  }

  .#{$ns}-table-pinright & {
    margin-right: $xui-table-action-offset;
  }
}

.#{$ns}-table-element {
  width: 100%;
}

// The following blocks of nth-* selectors create rounded corners on the four
// corner cells (top left, top right, bottom left, bottom right). If we do not
// round the corners then some background color will bleed over the tables panel
// border.

// Originally we created a simple "overflow: hidden" on the table itself which
// although simple had VERY bad performance in older browsers (IE11 for instance).
// This is a more convoluted solution but is performant for 1000's or rows instead
// of 10's in IE11.
.#{$ns}-table-element > *:nth-child(1) > tr:nth-child(1) {
  > *:nth-child(1) {
    border-top-left-radius: $xui-radius;
  }

  > *:nth-last-child(1) {
    border-top-right-radius: $xui-radius;
  }
}

.#{$ns}-table-element > *:nth-last-child(1) > tr:nth-last-child(1) {
  > *:nth-child(1) {
    border-bottom-left-radius: $xui-radius;
  }

  > *:nth-last-child(1) {
    border-bottom-right-radius: $xui-radius;
  }
}

.#{$ns}-table-pinleft .#{$ns}-table-element:before,
.#{$ns}-table-pinright .#{$ns}-table-element:after {
  background: $xui-table-bg-color;
  content: '';
  display: block;
  height: 100%;
  position: absolute;
  top: 0;
  width: $xui-table-action-offset;
  z-index: $xui-table-z-pinned-shadow;
}

.#{$ns}-table-pinleft .#{$ns}-table-element:before {
  border-radius: $xui-radius 0 0 $xui-radius;
  border-right: 1px solid transparent;
  left: 0;
}

.#{$ns}-table-pinright .#{$ns}-table-element:after {
  border-left: 1px solid transparent;
  border-radius: 0 $xui-radius $xui-radius 0;
  right: 0;
}

.#{$ns}-table-overflowleft .#{$ns}-table-element:before,
.#{$ns}-table-overflowright .#{$ns}-table-element:after {
  border-color: $xui-table-divider-bg-color;
  box-sizing: content-box;
}

.#{$ns}-table-withtruncation .#{$ns}-table-element {
  table-layout: fixed;
}

.#{$ns}-table--row {
  background: $xui-table-bg-color;
  transition: {
    duration: $xui-motion-speed-fast;
    property: background;
  }
}

.#{$ns}-table--row-link {
  cursor: pointer;
  outline: 0;

  &:focus {
    background: $xui-table-link-focus-bg-color;
  }
}

// Here we are creating the "row link" visual interaction. When the interface has
// pinned columns we need to ensure that they to change their background color
// while overlapping the content below.
.#{$ns}-table-nopointerevents .#{$ns}-table--row-link,
.#{$ns}-table--row-hasprecedence.#{$ns}-table--row-link {
  @at-root {
    &:hover,
    .#{$ns}-table-pinleft#{&}:hover .#{$ns}-table--cell-action,
    .#{$ns}-table-pinright#{&}:hover .#{$ns}-table--cell-action {
      background: $xui-table-link-hover-bg-color;
    }

    &:active,
    .#{$ns}-table-pinleft#{&}:active .#{$ns}-table--cell-action,
    .#{$ns}-table-pinright#{&}:active .#{$ns}-table--cell-action {
      background: $xui-table-link-active-bg-color;
    }

    &:focus,
    .#{$ns}-table-pinleft#{&}:focus .#{$ns}-table--cell-action,
    .#{$ns}-table-pinright#{&}:focus .#{$ns}-table--cell-action {
      outline: 0;
    }
  }
}

.#{$ns}-table--sortbutton {
  background: $xui-table-bg-color;
  cursor: pointer;
  height: $xui-s-4xlarge;
  min-width: $xui-minimum-touch-target;
  outline: 0;
  overflow: hidden;
  text-align: left;
  transition: {
    duration: $xui-motion-speed-fast;
    property: background;
  }
  width: 100%;

  &:hover {
    color: $xui-table-sortbutton-hover-color;
  }

  &:focus {
    background: $xui-table-sortbutton-focus-bg-color;
  }

  &:active {
    background: $xui-table-sortbutton-active-bg-color;
  }
}

.#{$ns}-table--cell-last.#{$ns}-table--sortbutton:not(.#{$ns}-table--sortbutton-active) > * {
  transform: translateX(#{$xui-s-standard});
}

.#{$ns}-table--sortbutton * {
  transition: {
    duration: $xui-motion-speed-fast;
    property: color, transform;
  }
}

.#{$ns}-table--sortbutton-icon {
  margin-left: $xui-s-xsmall;
  opacity: 0;
  vertical-align: middle;
}

.#{$ns}-table--sortbutton-active .#{$ns}-table--sortbutton-icon {
  opacity: 1;
}

.#{$ns}-table-withtruncation .#{$ns}-table--cell {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.#{$ns}-table-pinleft .#{$ns}-table--cell-first,
.#{$ns}-table-pinright .#{$ns}-table--cell-last {
  position: absolute;
  z-index: $xui-table-z-pinned-column;
}

.#{$ns}-table-pinleft .#{$ns}-table--cell-first {
  left: 0;
}

.#{$ns}-table-pinright .#{$ns}-table--cell-last {
  right: 0;
}

.#{$ns}-table--checkbox-body,
.#{$ns}-table--checkbox-head {
  margin: 2px;
  position: absolute;
}

.#{$ns}-table--checkbox-body {
  left: $xui-s-small;
  top: $xui-s-small;
}

.#{$ns}-table--checkbox-head {
  left: 0;
  padding: 0;
  top: 0;
}

.#{$ns}-table--overflowmenu-body {
  position: absolute;
  right: $xui-s-2xsmall;
  top: $xui-s-2xsmall;
}

.#{$ns}-table--customheader,
.#{$ns}-table--customfooter {
  position: relative;
  z-index: $xui-table-z-pinned-appendages;
}

.#{$ns}-table--customheader {
  border-bottom: $xui-border-standard;
}

.#{$ns}-table--customfooter {
  border-top: $xui-border-standard;
}

.#{$ns}-table--alert {
  align-items: center;
  display: flex;
  justify-content: center;
  min-height: 140px;
  position: relative;
  z-index: $xui-table-z-alert;
}

.#{$ns}-table-hasheader .#{$ns}-table--alert {
  border-top: $xui-border-muted;
}

.#{$ns}-table--cell-divider:after {
  background: $xui-table-divider-bg-color;
  content: '';
  display: block;
  height: 1px;
  left: 0;
  pointer-events: none;
  position: absolute;
  top: 0;
  width: 100%;
}

.#{$ns}-table--cell {
  background: inherit;
  position: relative;
  text-align: left;
  vertical-align: middle;
}

.#{$ns}-table--cell > * {
  text-align: left;
}

.#{$ns}-table--cell-last,
.#{$ns}-table--cell-last > * {
  text-align: right;
}

.#{$ns}-table--body .#{$ns}-table--cell {
  height: $xui-s-4xlarge;
  min-height: $xui-s-4xlarge;
}

.#{$ns}-table--head .#{$ns}-table--cell {
  height: $xui-s-3xlarge;
  min-height: $xui-s-3xlarge;
  padding: 0;
}

.#{$ns}-table--head .#{$ns}-table--cell > * {
  padding: $xui-s-xsmall $xui-s-small;
  white-space: nowrap;
}

.#{$ns}-table--cell-singleline {
  white-space: nowrap;
}

.#{$ns}-table--cell:not(.#{$ns}-table--cell-singleline) {
  max-width: 300px;
  overflow-wrap: break-word;
}

.#{$ns}-table--cell-link {
  cursor: pointer;
  outline: 0;
  transition: {
    duration: $xui-motion-speed-fast;
    property: background;
  }

  &:focus {
    background: $xui-table-link-focus-bg-color;
  }
}

.#{$ns}-table-nopointerevents .#{$ns}-table--cell-link,
.#{$ns}-table--cell-hasprecedence.#{$ns}-table--cell-link {
  &:hover {
    background: $xui-table-link-hover-bg-color;
  }
  &:active {
    background: $xui-table-link-active-bg-color;
  }
}

.#{$ns}-table--cell-action {
  min-width: $xui-table-action-offset;
  width: $xui-table-action-offset;
}

.#{$ns}-table--cell-layout {
  padding: $xui-s-small;
}

.#{$ns}-table--emptystate {
  align-items: center;
  color: $xui-color-grey-alpha-2;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
