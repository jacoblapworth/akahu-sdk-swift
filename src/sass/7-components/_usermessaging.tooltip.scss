@import '../vars';
@import '../mixins';

// Tooltip
//
// Teaser: To provide clarification for ambiguous actions or non-interactive elements.
//
// Introduction: Tooltips provide additional information in-line with page elements.
//
// Components: Tooltip
//
// Language: https://docs.google.com/document/d/1YDv-SISe90GmHcnmy24A5KauSQHSbfivP9DXtkCZygI/edit#bookmark=id.enb2yzwzbg4
//
// Styleguide: Building Blocks.Alerts.Tooltip

// Best practice
//
// Tips:
// Do: Use tooltips to display content that would live in an element's 'title' tag (icon-buttons, truncated items)
// Do: Use a dedicated icon-button to trigger supportive, non-essential tips
// Dont: Don't use tooltips for validation and error messaging
// Dont: Don't use content other than text inside a tooltip
// Warning: Styles directly affecting the trigger or its classes may need to be duplicated on the wrapping `.xui-tooltip` DOM element. For example, fixed/absolute positioning or some flexbox styling.
//
// Styleguide: Building Blocks.Alerts.Tooltip.1

// Anatomy
//
// To create a tooltip, use the following classes.
// Note that the trigger and tip need to be wrapped together for positioning purposes.
//
// Classes:
// xui-tooltip: Container class for both tooltip and trigger
// xui-tooltip-tipopen: Allows the tooltip to overflow its wrapper, when visible
// xui-positioningInline: Wrapper for the purpose of positioning the tooltip
// xui-tooltip--tip: The class for the tip itself
// xui-tooltip--tip-open: Sets the tooltip to be visible
//
// ExampleClass: ds-example-transparent
//
// Markup:
// <span class="xui-tooltip xui-tooltip-tipopen">
//   <button aria-label="Info" class="xui-button xui-button-icon xui-button-icon-small xui-button-fullwidth" tabindex="0" type="button">
//     <svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//     <div class="xui-touchtarget"></div>
//   </button>
//   <span class="xui-positioningInline" style="flex-direction: column; top: -30px;">
//     <span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-righttop">
//       Tooltip content goes here
//     </span>
//   </span>
// </span>
//
// Styleguide: Building Blocks.Alerts.Tooltip.2

// Positioning
//
// Then, add an additional `xui-positioningInline--content-*` modifier to specify the preferred position of the tooltip, relative to the trigger. Format is `sidealignment` for example, `topright` would attempt to place the tooltip above the trigger and aligned to the right edge of the trigger. Side options are `top`, `bottom`, `left`, and `right`, and alignment options are `left`, `right`, `top`, `bottom`, and `center`, as appropriate.
//
// Tips:
// Warning: If done with React, the tooltip will automatically reposition when there is not sufficient space for the tip to appear in the preferred location.
//
// ExampleClass: ds-example-transparent
//
// Classes:
// -topleft: Above the trigger, aligned to the left edge
// -rightcenter: To the right of the trigger, vertically centered
// -leftbottom: To the left of the trigger, aligned to the bottom edge
// -bottomcenter: Below the trigger, centered horizontally
//
// Markup:
// <span class="xui-tooltip xui-tooltip-tipopen">
// 	<button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
// 		<svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//     <div class="xui-touchtarget"></div>
// 	</button>
// 	<span class="xui-positioningInline" style="flex-direction: row; top: -50px;">
// 		<span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-topleft">
// 			top-left
// 		</span>
// 	</span>
// </span>
// <span class="xui-tooltip xui-tooltip-tipopen">
// 	<button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
// 		<svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//    <div class="xui-touchtarget"></div>
// 	</button>
// 	<span class="xui-positioningInline" style="flex-direction: column; top: -20px;">
// 		<span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-rightcenter">
// 			right-center
// 		</span>
// 	</span>
// </span>
// <br />
// <span class="xui-tooltip xui-tooltip-tipopen">
// 	<button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
// 		<svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//    <div class="xui-touchtarget"></div>
// 	</button>
// 	<span class="xui-positioningInline" style="flex-direction: column; top: auto;">
// 		<span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-leftbottom">
// 			left-bottom
// 		</span>
// 	</span>
// </span>
// <span class="xui-tooltip xui-tooltip-tipopen">
//   <button aria-haspopup="true" class="xui-button xui-button-icon-medium xui-button-icon" tabindex="0" type="button">
//     <svg focusable="false" class="xui-icon"><use xlink:href="#xui-icon-info" role="presentation" /></svg>
//     <div class="xui-touchtarget"></div>
//   </button>
//   <span class="xui-positioningInline" style="flex-direction: row; top: 10px;">
//     <span class="xui-tooltip--tip xui-tooltip--tip-open xui-positioningInline--content-bottomcenter">
//       bottomCenter
//     </span>
//   </span>
// </span>
//
// Styleguide: Building Blocks.Alerts.Tooltip.3

.#{$ns}-tooltip {
  cursor: pointer;
  display: inline-block;
  overflow: hidden;

  &.#{$ns}-tooltip-inline-flex {
    display: inline-flex;

    &.#{$ns}-tooltip-tipopen,
    &.#{$ns}-tooltip-tipanimating,
    &.#{$ns}-has-focused-trigger {
      display: inline-block;
    }

    .#{$ns}-positioningInline {
      display: block;
    }
  }

  &.#{$ns}-tooltip-tipopen,
  &.#{$ns}-tooltip-tipanimating,
  &.#{$ns}-has-focused-trigger {
    overflow: visible;
  }
  &.#{$ns}-has-inline-trigger {
    vertical-align: bottom;

    & > *:first-child {
      display: flex;
    }
  }

  &-is-block {
    display: block;
  }
}

.#{$ns}-positioningInline {
  align-content: center;
  display: flex;
  height: 0;
  justify-content: center;
  position: relative;
  width: 100%;
}

.#{$ns}-tooltip--tip {
  @include xui-text-small;
  background-color: $xui-tooltip-bg-color;
  border-radius: $xui-radius;
  bottom: 0;
  box-shadow: 0 0 0 1px $xui-tooltip-outline-shadow-color, 0 3px 6px 0 $xui-tooltip-shadow-color;
  color: $xui-tooltip-color;
  cursor: auto;
  display: block;
  line-height: $xui-line-height;
  opacity: 0;
  overflow-wrap: break-word;
  padding: $xui-s-2xsmall $xui-s-xsmall;
  pointer-events: none;
  position: absolute;
  right: 0;
  text-align: center;
  transition: opacity $xui-motion-speed-fast linear;
  width: max-content;
  width: intrinsic; // Safari's non-standard implementation of max-content.
  z-index: 3;
  > * {
    box-sizing: border-box;
  }

  &.#{$ns}-tooltip--tip-open {
    opacity: 1;
    pointer-events: auto;
  }
  &.#{$ns}-tooltip--tip-animating {
    pointer-events: auto;
  }

  &:after {
    background: $xui-tooltip-bg-color;
    box-shadow: 1px 1px 0 0 $xui-tooltip-shadow-color;
    content: '';
    height: 10px;
    position: absolute;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transform-origin: center;
    width: 10px;
    z-index: -1;
  }
}

// Vertically placed popups
.#{$ns}-positioningInline--content-topleft,
.#{$ns}-positioningInline--content-topcenter,
.#{$ns}-positioningInline--content-topright {
  bottom: 100%;
  &:after {
    bottom: -10px;
  }
}
.#{$ns}-positioningInline--content-bottomleft,
.#{$ns}-positioningInline--content-bottomcenter,
.#{$ns}-positioningInline--content-bottomright {
  bottom: auto;
  top: 100%;
  &:after {
    box-shadow: -1px -1px 0 0 $xui-tooltip-shadow-color;
    top: 0px;
  }
}
.#{$ns}-positioningInline--content-topleft,
.#{$ns}-positioningInline--content-bottomleft {
  left: 0;
  right: auto;
  &:after {
    left: 15px;
  }
}
.#{$ns}-positioningInline--content-topcenter,
.#{$ns}-positioningInline--content-bottomcenter {
  left: 50%; // See notes below.
  right: auto;
  transform: translateX(-50%); // See notes below.
  &:after {
    left: 50%;
  }
}
.#{$ns}-positioningInline--content-topright,
.#{$ns}-positioningInline--content-bottomright {
  right: 0px;
  &:after {
    right: 5px;
  }
}

// Horizontally placed tooltips
.#{$ns}-positioningInline--content-righttop,
.#{$ns}-positioningInline--content-rightcenter,
.#{$ns}-positioningInline--content-rightbottom {
  left: calc(100% + 10px);
  right: auto;
  &:after {
    box-shadow: -1px 1px 0 0 $xui-tooltip-shadow-color;
    left: 0px;
  }
}
.#{$ns}-positioningInline--content-lefttop,
.#{$ns}-positioningInline--content-leftcenter,
.#{$ns}-positioningInline--content-leftbottom {
  right: calc(100% + 10px);
  &:after {
    box-shadow: 1px -1px 0 0 $xui-tooltip-shadow-color;
    right: -10px;
  }
}
.#{$ns}-positioningInline--content-righttop,
.#{$ns}-positioningInline--content-lefttop {
  bottom: auto;
  top: 0;
  &:after {
    top: 15px;
  }
}
.#{$ns}-positioningInline--content-rightcenter,
.#{$ns}-positioningInline--content-leftcenter {
  bottom: auto;
  top: 50%; // See notes below.
  transform: translateY(-50%); // See notes below.
  &:after {
    top: 50%;
  }
}
.#{$ns}-positioningInline--content-rightbottom,
.#{$ns}-positioningInline--content-leftbottom {
  bottom: -100%;
  &:after {
    bottom: 5px;
  }
}

// NB: These are largely for IE, but appear harmless in Chrome, at least for now. No text blurriness observed,
// even at high zoom.
