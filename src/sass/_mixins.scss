@import "tools/mixins.layout";
@import "tools/mixins.elements";
@import "tools/mixins.selectors";
@import "tools/mixins.states";
@import "tools/mixins.buttons";
@import "tools/mixins.components";
@import "tools/mixins.typography";
@import "tools/mixins.utilities";

// Variables & Mixins
//
// Introduction: These variables and mixins are the lowest level building blocks
// and are provided as a reference to developers who are working on XUI core,
// authoring components or need fine grained control inside applications.
//
// Styleguide: Building Blocks.Variables & Mixins

// Best Practice
//
// Tips:
// Warning: Considered as an advanced feature, they should generally not be required by product design and development teams.
//
// Styleguide: Building Blocks.Variables & Mixins.Best Practice

// Buttons
//
// Provides utilities for styling buttons with XUI.
//
// Styleguide: Building Blocks.Variables & Mixins.Buttons

// Components
//
// Provides mixins required for building out classes related to specific components
//
// Styleguide: Building Blocks.Variables & Mixins.Components

// Elements
//
// Provides mixins used for creating element level css
//
// Styleguide: Building Blocks.Variables & Mixins.Elements

// Breakpoints
//
// Can be used to conditionally show/hide elements based on screen width
//
// Styleguide: Building Blocks.Variables & Mixins.Breakpoints

// Margin & Padding
//
// Set of mixins used to generate the margin and padding classes
//
// Styleguide: Building Blocks.Variables & Mixins.Margin & Padding

// Selectors
//
// Can be used to apply styles to items based on position in DOM
//
// Styleguide: Building Blocks.Variables & Mixins.Selectors

// States
//
// Provides standard and inverted mixins for adding focus styling to elements
//
// Styleguide: Building Blocks.Variables & Mixins.States

// Utilities
//
// Styleguide: Building Blocks.Variables & Mixins.Utilities
