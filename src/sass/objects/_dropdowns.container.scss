@import "../vars";
@import "../mixins";

@keyframes #{ns}-dropdown-mobile-show {
	0% {
		transform: translateY(100%);
	}
	100% {
		transform: translateY(0);
	}
}

@keyframes #{ns}-dropdown-mobile-hide {
	0% {
		transform: translateY(0);
	}
	100% {
		transform: translateY(100%);
	}
}

// Dropdowns
//
// ### Behaviour
//
// Correct dropdown behaviour comes default with using the Dropdown react component. However,
// if you need to implement your own for some reason, please use the following guidelines.
//
// Implementations should make the most of the screen space available when showing dropdowns.
// Scrollbars can be used when there is not enough screen space to fit all menu items. When there
// is more space above than below the dropdown trigger, the menu should be positioned above the
// trigger. The same applies for whether the menu should be left-aligned or right-aligned against
// the trigger.
//
// Components: Dropdown
//
// Classes:
// xui-dropdown-layout: Parent dropdown layout container
// xui-dropdown--mask: Mask that is displayed when dropdown takes on narrow screen responsive behaviour.
// xui-dropdown--body: Container for the content section of a drop down
// xui-dropdown--footer: Footer class for the dropdown.
// xui-dropdown-small: Style for a small width dropdown
// xui-dropdown-medium: Style for a medium width dropdown
// xui-dropdown-large: Style for a large width dropdown
// xui-dropdown-xlarge: Style for an extra large width dropdown
// xui-dropdown-fixed-small: Style for a small fixed-width dropdown
// xui-dropdown-fixed-medium: Style for a medium fixed-width dropdown
// xui-dropdown-fixed-large: Style for a large fixed-width dropdown
// xui-dropdown-fixed-xlarge: Style for an extra large fixed-width dropdown
// xui-dropdown-positionright: Style for aligning the right of dropdown with the right of its nearest explictly positioned parent
// xui-dropdown-positionleft: Style for aligning the left of the dropdown to the left of its nearest explictly positioned parent
// xui-dropdown-positionabove: Style for positioning the dropdown above its nearest explictly positioned parent
// xui-dropdown-positionbelow: Style for positioning the dropdown below its nearest explictly positioned parent
//
// Styleguide: Dropdowns.1

// State Transitions
//
// Classes:
// xui-dropdown-is-open: Style for an open, visible dropdown
// xui-dropdown-is-opening: Style for animating the opening of a dropdown
// xui-dropdown-is-closing: Style for animating the closing of a dropdown
//
// The following classes are involved in setting the state of the dropdown, which is closed by default:
// * `xui-dropdown-is-open`
// * `xui-dropdown-is-opening`
// * `xui-dropdown-is-closing`
//
// #### Closed
// None of the above classes should be applied.
//
// #### Opening
// Apply `xui-dropdown-is-open`, then, after a brief delay (enough for a repaint), apply `xui-dropdown-is-opening`.
// If you apply both classes without giving the browser a chance to repaint, then there will be no animation.
//
// #### Open
// While the dropdown is open, it should have both `xui-dropdown-is-open` and `xui-dropdown-is-opening` applied.
//
// #### Closing
// Remove `xui-dropdown-is-opening` and apply `xui-dropdown-is-closing`.
// Set a timeout for 200ms and then remove both `xui-dropdown-is-closing` and `xui-dropdown-is-open`.
//
// Styleguide: Dropdowns.1.2

// Narrow Dropdown
//
// Markup:
// <div class="xui-dropdown-layout xui-dropdown-small xui-dropdown-is-open xui-dropdown-is-opening">
//   <div class="xui-dropdown--mask"></div>
//   <div class="xui-dropdown--body">
//		<div class="xui-dropdown--scrollable-content">
//     <ul class="xui-picklist">
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">All Reports</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Budget Manager</button>
//       </li>
//       <li class="xui-pickitem xui-pickitem-is-selected" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Account Transactions</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Aged Payables</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Aged Receivables</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Aged Receivables Detail</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Balance Sheet</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Cash Summary</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">GST Reconciliation</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">GST Return</button>
//       </li>
//     </ul>
//		</div>
//		<div class="xui-dropdown--footer">
//			<ul class="xui-picklist">
//				<li class="xui-pickitem" aria-selected="false" tabindex="-1" role="option" id="footer1">
//					<button type="button" class="xui-pickitem--body xui-pickitem--text" tabindex="-1">Footer Item</button>
//				</li>
//				<li class="xui-pickitem" aria-selected="false" tabindex="-1" role="option" id="footer2">
//					<button type="button" class="xui-pickitem--body xui-pickitem--text" tabindex="-1">This is a secondary footer item</button>
//				</li>
//			</ul>
//		</div>
//   </div>
// </div>
//
// Styleguide: Dropdowns.1.3

// Full width dropdown
//
// Markup:
// <div class="xui-dropdown-layout xui-u-fullwidth xui-dropdown-is-open xui-dropdown-is-opening">
//   <div class="xui-dropdown--mask"></div>
//   <div class="xui-dropdown--body">
//		<div class="xui-dropdown--scrollable-content">
//     <ul class="xui-picklist">
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Monthly</button>
//       </li>
//       <li class="xui-pickitem xui-pickitem-is-selected" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Two-monthly</button>
//       </li>
//       <li class="xui-pickitem" tabindex="0">
//         <button class="xui-pickitem--body" tabindex="-1">Six-monthly</button>
//       </li>
//     </ul>
//		</div>
//   </div>
// </div>
//
// Styleguide: Dropdowns.1.4


.#{$ns}-dropdown-layout {
	display: none;
	flex-direction: column;
	min-width: $xui-starting-width;
	outline: none;
	position: absolute;

	@include xui-breakpoint-narrow-up {
		z-index: 1000;

		.#{$ns}-dropdown--body {
			max-height: inherit;
			overflow: hidden;
			transform-origin: top;
		}
	}
	&.#{$ns}-dropdown--force-desktop {
		z-index: 1000;

		.#{$ns}-dropdown--body {
			overflow: hidden;
			transform-origin: top;
		}
	}

	@include xui-breakpoint-narrow {
		&:not(.#{$ns}-dropdown--force-desktop) {
			height: 100%;
			left: 0;
			position: fixed;
			width: 100%;
			z-index: 9999;

			.#{$ns}-dropdown--body {
				bottom: 0;
				left: 0;
				max-width: 100%;
				position: absolute;
				transform: translateY(0);
				width: 100%;
			}

			.#{$ns}-dropdown--header {
				display: block;
				flex-grow: 0;
			}
		}
		// I know this is dumb, but it makes the linter happy.  Linter doesn't like nesting,
		// but apparently doesn't care about specificity, so just un-indenting this and
		// making it harder to read is apparently better...
		//
		// @author dev-johnsanders
		&.#{$ns}-dropdown-fullheight:not(.#{$ns}-dropdown--force-desktop) {
			height: 100%;

			.#{$ns}-dropdown--body {
				height: 100%;
				max-height: 100%;
			}
		}
	}

	.#{$ns}-dropdown--header-container {
		align-items: center;
		border-bottom: $xui-shadow-border-bottom;
		display: flex;
		height: $xui-navigation-height;
		justify-content: space-between;
		min-height: $xui-s-6xlarge;
		padding-left: $xui-s-small;
		padding-right: $xui-s-small;
	}

	.#{$ns}-dropdown--header-leftcontent {
		align-items: center;
		display: flex;
		flex: 1;
		overflow: hidden;
		padding-right: $xui-s-small;
	}

	.#{$ns}-dropdown--header-rightcontent {
		align-items: center;
		display: flex;
	}

	.#{$ns}-dropdown--mask {
		/*
		Top and bottom are supposed to be -60px;  If they're not, unmasked content may become visible
		while the address bar slides out of view on Android Chrome, Android Opera, and iOS Safari.

		@author dev-johnsanders
		*/
		bottom: -60px;
		left: 0;
		position: absolute;
		top: -60px;
		transition: opacity $xui-motion-speed-fast $xui-motion-curve-standard;
		width: 100%;
	}

	.#{$ns}-dropdown--footer {
		border-top: $xui-shadow-border-top;
		flex-grow: 0;
		width: 100%;
	}
}

.#{$ns}-dropdown--mask {
	background-color: transparentize($xui-color-grey-1, 0.5);
	opacity: 0;
	pointer-events: none;
}

.#{$ns}-dropdown--body {
	background-color: $xui-color-white;
	display: flex;
	flex-direction: column;

	@include xui-breakpoint-narrow-up {
		border-radius: $xui-radius;
		box-shadow: $xui-shadow-depth-lift;
	}
	.#{$ns}-dropdown--force-desktop & {
		border-radius: $xui-radius;
		box-shadow: $xui-shadow-depth-lift;
	}

	.#{$ns}-dropdown--scrollable-content {
		flex-grow: 1;
		-webkit-overflow-scrolling: touch;
		overflow-y: auto;
		transform: translate3d(0, 0, 0);
	}
}

.#{$ns}-dropdown-is-open {
	display: flex;

	@include xui-breakpoint-narrow {
		&:not(.#{$ns}-dropdown--force-desktop) {
			.#{$ns}-dropdown--mask {
				flex-grow: 1;
				opacity: 1;
				pointer-events: auto;
				width: 100vw;
			}

			.#{$ns}-dropdown--body {
				flex-grow: 0;
				max-height: 100%;
				opacity: 1;
			}
		}
	}
}

.#{$ns}-dropdown-is-opening {
	@include xui-breakpoint-narrow {
		&:not(.#{$ns}-dropdown--force-desktop) {
			.#{$ns}-dropdown--body {
				animation: #{ns}-dropdown-mobile-show $xui-motion-speed-medium $xui-motion-curve-standard forwards;
			}
		}
	}
}

.#{$ns}-dropdown-is-closing {
	display: flex;

	@include xui-breakpoint-narrow {
		&:not(.#{$ns}-dropdown--force-desktop) {
			.#{$ns}-dropdown--mask {
				opacity: 0;
			}

			.#{$ns}-dropdown--body {
				animation: #{ns}-dropdown-mobile-hide $xui-motion-speed-medium $xui-motion-curve-standard forwards;
			}
		}
	}
}

@each $number, $variant in $xui-width-variants-dropdown{
	.#{$ns}-dropdown-#{$variant} {
		max-width: $xui-starting-width + ($xui-base-width * $number);
	}

	.#{$ns}-dropdown-fixed-#{$variant} {
		width: $xui-starting-width + ($xui-base-width * $number);
	}
}

.#{$ns}-dropdown-positionright {
	right: 0;
}

.#{$ns}-dropdown-positionleft {
	left: 0;
}

.#{$ns}-dropdown-positionabove {
	bottom: 100%;
}

.#{$ns}-dropdown-positionunder {
	top: 100%;
}
