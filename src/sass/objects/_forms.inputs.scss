/**
 * Styles for form inputs.
 */

@import "../vars";
@import "../mixins";

$xui-radius-iconwrapper: 2px;
$xui-input-icon-height: $xui-input-height - 2px; // height minus top and bottom borders
$xui-input-icon-width: $xui-input-height - 4px; // need to ensure enough spacing between icon wrapper and placeholder
$xui-input-icon-offset: ($xui-input-icon-width - $xui-icon-standard) / 2;
$xui-input-icon-zindex: 3; // focused inputs have zindex: 2, so icons need to have a bigger z-index



.#{$ns}-input {
	@extend %#{$ns}-commoninput;
}

// Icons within inputs

.#{$ns}-inputwrapper {
	position: relative;

	.#{$ns}-input--icon-right ~ .#{$ns}-input,
	.#{$ns}-input--iconwrapper-right ~ .#{$ns}-input {
		padding-right: $xui-input-height + 1;
	}

	.#{$ns}-input--icon-left ~ .#{$ns}-input,
	.#{$ns}-input--iconwrapper-left ~ .#{$ns}-input {
		padding-left: $xui-input-height + 1;
	}

	.#{$ns}-icon {
		z-index: $xui-input-icon-zindex;
	}

	.#{$ns}-input--icon-left,
	.#{$ns}-input--icon-right {
		color: $xui-color-grey-3;
		height: $xui-input-icon-height; // Do not supply width so that the icon does not scale (achieves vertical centering)
		position: absolute;
		z-index: $xui-input-icon-zindex;
	}

	.#{$ns}-input--icon-left {
		left: $xui-input-icon-offset;
		top: 1px; // Border offset
	}

	.#{$ns}-input--icon-right {
		right: $xui-input-icon-offset;
		top: 1px; // Border offset
	}
}

.#{$ns}-input--iconwrapper {
	align-items: center;
	display: inline-flex;
	height: $xui-input-icon-height;
	justify-content: center;
	line-height: $xui-input-icon-height;
	position: absolute;
	text-align: center; // If text is used instead of an icon, center it
	top: 1px;
	width: $xui-input-icon-width;
	z-index: $xui-input-icon-zindex;
}

.#{$ns}-input--iconwrapper-left {
	border-radius: $xui-radius-iconwrapper 0 0 $xui-radius-iconwrapper;
	left: 1px;
}

.#{$ns}-input--iconwrapper-right {
	border-radius: 0 $xui-radius-iconwrapper $xui-radius-iconwrapper 0;
	right: 1px;
}

.#{$ns}-input--iconwrapper-twitter {
	background-color: $xui-color-twitter;
}

.#{$ns}-input--iconwrapper-facebook {
	background-color: $xui-color-facebook;
}

.#{$ns}-input--iconwrapper-linkedin {
	background-color: $xui-color-linkedin;
}

// Borderless inputs

.#{$ns}-input-borderless {
	border: 0;

	&:focus {
		box-shadow: none;
	}
}

.#{$ns}-input-borderless-transparent {
	background-color: transparent;

	&:focus {
		background-color: rgba($xui-color-black, 0.05);
	}

	&.#{$ns}-input-borderless-inverted {
		&:focus {
			background-color: rgba($xui-color-white, 0.1);
		}
	}
}

.#{$ns}-input-borderless-solid {
	background-color: rgba($xui-color-black, 0.05);

	&:focus {
		background-color: rgba($xui-color-black, 0.1);
	}

	&.#{$ns}-input-borderless-inverted {
		background-color: rgba($xui-color-white, 0.1);

		&:focus {
			background-color: rgba($xui-color-white, 0.2);
		}
	}
}

.#{$ns}-input-borderless-inverted {
	color: $xui-color-white;

	&::placeholder {
		color: $xui-color-white;
		opacity: .5;
	}
}

.#{$ns}-inputwrapper-borderless {

	.#{$ns}-input--icon-left {
		left: $xui-s-xsmall + $xui-input-icon-offset;
	}

	.#{$ns}-input--icon-right {
		right: $xui-s-xsmall + $xui-input-icon-offset;
	}
}



.#{$ns}-verticalinputgroup {
	// Only add top border radius to the first element
	.#{$ns}-input:first-of-type,
	.#{$ns}-inputwrapper:first-of-type > .#{$ns}-input {
		border-radius: 3px 3px 0 0;
	}

	// Add the margin adjustment to all elements but the first
	.#{$ns}-input:nth-of-type(n+2),
	.#{$ns}-inputwrapper:nth-of-type(n+2) > .#{$ns}-input {
		margin-top: -1px;
	}

	// On all elements except the first and last one, border radius 0 is required
	.#{$ns}-input:nth-of-type(n+2):nth-last-of-type(n+2),
	.#{$ns}-inputwrapper:nth-of-type(n+2):nth-last-of-type(n+2) > .#{$ns}-input {
		border-radius: 0;
	}

	// Only add bottom border radius to the last element
	.#{$ns}-input:last-of-type,
	.#{$ns}-inputwrapper:last-of-type > .#{$ns}-input {
		border-radius: 0 0 3px 3px;
	}
}



.#{$ns}-inputgroup {
	@include xui-clearfix;

	.#{$ns}-input-is-invalid:nth-child(n+2),
	.#{$ns}-select:nth-child(n+2) > .#{$ns}-select--control.#{$ns}-input-is-invalid {
		border-left: 1px solid $xui-color-xero-red;
		margin-left: -1px;
	}
}

.#{$ns}-inputgroup > .#{$ns}-input,
.#{$ns}-inputgroup > .#{$ns}-button,
.#{$ns}-inputgroup .#{$ns}-select--control {
	border-radius: 0;

	// All but the first child have a left border
	// There is an exception for invalid styling further down
	&:nth-child(n+2) {
		border-left: 0;
	}
}

// This is excluded from the list above to prevent the nth-child selector kicking in unnecessarily on the wrong element
.#{$ns}-inputgroup > .#{$ns}-inputwrapper > .#{$ns}-input {
	border-radius: 0;
}

.#{$ns}-inputgroup > .#{$ns}-inputwrapper:nth-child(n+2) > .#{$ns}-input {
	border-left: 0;
}

.#{$ns}-inputgroup > .#{$ns}-select:nth-child(n+2) {
	.#{$ns}-select--control {
		border-left: 0;
	}
}

.#{$ns}-inputgroup > .#{$ns}-input:first-child,
.#{$ns}-inputgroup > .#{$ns}-inputwrapper:first-child > .#{$ns}-input,
.#{$ns}-inputgroup > .#{$ns}-button:first-child,
.#{$ns}-inputgroup > .#{$ns}-select:first-child > .#{$ns}-select--control {
	border-bottom-left-radius: $xui-radius;
	border-top-left-radius: $xui-radius;
}

.#{$ns}-inputgroup > .#{$ns}-input:last-child,
.#{$ns}-inputgroup > .#{$ns}-inputwrapper:last-child > .#{$ns}-input,
.#{$ns}-inputgroup > .#{$ns}-button:last-child,
.#{$ns}-inputgroup > .#{$ns}-select:last-child > .#{$ns}-select--control {
	border-bottom-right-radius: $xui-radius;
	border-top-right-radius: $xui-radius;
}
