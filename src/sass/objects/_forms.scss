@import "../mixins";

/**
 * An aggregator stylesheet of input elements that can be found in forms.
 */

// Forms
//
// ### Accessibility
// All form elements should have labels to ensure the purpose of each element is clear.
// This can be done by using the `<label>` tag or by adding `aria-label` or `aria-labelledby` attributes to each element.
//
// If there are instructions or context information associated with the form element, `aria-describedby` should be used to ensure it is not missed by the assistive technology.
//
// Styleguide: Forms

%#{$ns}-commoninput {
	appearance: none; // For removing drop-shadow on iOS and select arrows in Firefox
	background-color: $xui-color-white;
	border: $xui-border-standard;
	border-radius: $xui-radius;
	box-shadow: none;
	color: inherit;
	font-family: inherit;
	font-size: inherit;
	outline: none;
	padding: 9px 0.5em;
	width: 100%;

	@include xui-breakpoint-narrow {
		padding: 12px 0.5em;
	}

	&:hover {
		// TODO: I don't like how we specify this directly instead of an alias.
		//       Either we decide on some hover colours, or have a scheme where
		//       hover colours are some percentage darker than a base colour.
		border-color: $xui-color-grey-3;
	}

	&:disabled {
		background-color: $xui-color-background;
		border-color: $xui-color-border;
		color: $xui-color-secondary-text;
	}

	&:focus {
		border-color: $xui-color-xero-blue;
		box-shadow: $xui-shadow-focus;
		transition: box-shadow $xui-transition-duration-short;
	}

	&::placeholder {
		color: $xui-color-placeholder;
		opacity: 1;
	}
}

@import "forms.layout";
@import "forms.labels";
@import "forms.inputs";
@import "forms.checkboxesradios";
@import "forms.switch";
@import "forms.selects";
@import "forms.validationmessages";
