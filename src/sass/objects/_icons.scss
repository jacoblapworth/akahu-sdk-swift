@import "../vars";
@import "../mixins";

// Icons
//
// Introduction: An overview of all our icons and how to use them in your project.
//
// Teaser: An extensive set of icons for use inside buttons and other UI elements.
//
// Components: Icon
//
// Styleguide: Fundamentals.Icons

// Usage
//
// The classes outlined here are only responsible for styling the icons, and do not contain the SVG data themselves.
// To include these, you will need to import the icons into your page using the following script, and then reference their name via the `xlink:href` attribute.
// If you are using React, this is not required. For more information, visit the <a href='https://github.dev.xero.com/UXE/xui-icon'>XUI icon repository</a>.
//
// @xuiIconBlobURL
//
// Definitions:
// Class: Apply to `<svg>` tag: `.xui-icon`
// Name: Apply to `<use>` tag: `#xui-icon-*`
//
// Styleguide: Fundamentals.Icons.1

// Size
//
// Icons are available in a number of sizes.
// The default size is optimised for use inside buttons and form controls.
// The additional sizes are intended mainly for read only contexts such as empty states or success screens.
// To define size, use the following modifiers.
//
// Definitions:
// Default:  30px viewbox: none
// Large: : 40px viewbox: `.xui-icon-large`
// xLarge: 60px viewbox: `.xui-icon-xlarge`
//
// Markup:
//  <svg focusable="false" class="xui-icon xui-blobicon">
//		<use xlink:href="#xui-icon-search" role="presentation"/>
//	</svg>
//  <svg focusable="false" class="xui-icon xui-blobicon xui-icon-large">
//		<use xlink:href="#xui-icon-search" role="presentation"/>
//	</svg>
//  <svg focusable="false" class="xui-icon xui-blobicon xui-icon-xlarge">
//		<use xlink:href="#xui-icon-search" role="presentation"/>
//	</svg>
//
// Styleguide: Fundamentals.Icons.2

// Placement
//
// By default, icons are centered within a 30px viewbox, to enable easier tabular alignment.
// However, if you are intending to place icons alongside text, such as in [buttons](section-building-blocks-controls-button.html#building-blocks-controls-button-7), use the following modifier to ensure lineheight is not affected.
//
// Definitions:
// Inline: Alongside text: `.xui-icon-inline`
//
// Markup:
//  <button class='xui-button xui-button-main'>
//  	Button
//  	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-inline">
//			<use xlink:href="#xui-icon-caret" role="presentation"/>
//		</svg>
// 	</button>
//  <p class='xui-button xui-margin-left'>
//  	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-inline">
//			<use xlink:href="#xui-icon-tag" role="presentation"/>
//		</svg>
//  	Text
// 	</p>
//
// Styleguide: Fundamentals.Icons.3

// Color
//
// By default, icons inherit the color of the parent element.
// However, there are a number of color modifiers available to specify your own, when this is not desired.
//
// Definitions:
// Inherit:  		none
// Standard:		`.xui-icon-color-standard` <br /><small class="small"><span class="xui-textcolor-negative">(deprecated in XUI13 remove in XUI 14)</span> Black muted is equivalent</small>
// Black: 			`.xui-icon-color-black`
// White: 			`.xui-icon-color-white`
// Blue: 				`.xui-icon-color-blue`
// Dark Blue: 	`.xui-icon-color-dark-blue`
// Red: 				`.xui-icon-color-red`
// Green: 			`.xui-icon-color-green`
// Orange: 			`.xui-icon-color-orange`
// Yellow: 			`.xui-icon-color-yellow`
// Mint: 				`.xui-icon-color-mint`
// Turquoise: 	`.xui-icon-color-turquoise`
// Voilet: 			`.xui-icon-color-violet`
// Grape: 			`.xui-icon-color-grape`
// Pink: 				`.xui-icon-color-pink`
// PDF: 				`.xui-icon-color-file-pdf`
// Spreadsheet: `.xui-icon-color-file-spreadsheet`
// White muted: `.xui-icon-color-white-muted`
// White faint: `.xui-icon-color-white-faint`
// Black muted: `.xui-icon-color-black-muted`
// Black faint: `.xui-icon-color-black-faint`
//
// Markup:
//	<svg focusable="false" class="xui-icon xui-blobicon">
// 		<use xlink:href="#xui-icon-filter" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-standard">
// 		<use xlink:href="#xui-icon-contact" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-blue">
// 		<use xlink:href="#xui-icon-xero" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-red">
// 		<use xlink:href="#xui-icon-stop" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-green">
// 		<use xlink:href="#xui-icon-checkbox-check" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-file-pdf">
// 		<use xlink:href="#xui-icon-file-pdf" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-file-spreadsheet">
// 		<use xlink:href="#xui-icon-file-spreadsheet" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-white xui-background-grey-1">
// 		<use xlink:href="#xui-icon-notification" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-white-muted xui-background-grey-1">
// 		<use xlink:href="#xui-icon-link" role="presentation"/>
// 	</svg>
//	<svg focusable="false" class="xui-icon xui-blobicon xui-icon-color-white-faint xui-background-grey-1">
// 		<use xlink:href="#xui-icon-print" role="presentation"/>
// 	</svg>
//
// Styleguide: Fundamentals.Icons.4

// Rotation
//
// To rotate any icon in increments of 90 degrees, use one of the following utilities.
//
// Definitions:
// Default: 	none
// 90deg: 		`.xui-u-rotate-90`
// 180deg: 		`.xui-u-rotate-180`
// 270deg: 		`.xui-u-rotate-270`
//
// Markup:
// <svg focusable="false" class="xui-icon xui-blobicon">
// 	<use xlink:href="#xui-icon-arrow" role="presentation"/>
// </svg>
// <svg focusable="false" class="xui-icon xui-blobicon xui-u-rotate-90">
// 	<use xlink:href="#xui-icon-arrow" role="presentation"/>
// </svg>
// <svg focusable="false" class="xui-icon xui-blobicon xui-u-rotate-180">
// 	<use xlink:href="#xui-icon-arrow" role="presentation"/>
// </svg>
// <svg focusable="false" class="xui-icon xui-blobicon xui-u-rotate-270">
// 	<use xlink:href="#xui-icon-arrow" role="presentation"/>
// </svg>
//
// Styleguide: Fundamentals.Icons.5

// Accessibility
//
// We highly encourage you to add <a href='https://www.sitepoint.com/tips-accessible-svg/'>screen reader information</a> to SVGs. This can be done by adding the `<title>` and `<desc>` tags.
//
// Styleguide: Fundamentals.Icons.6

// Available icons
//
// <div id="xuiIconShowcase" class="prettyprint"></div>
//
// Styleguide: Fundamentals.Icons.7

/* xui-iconsymbol is added to the icon blob produced by the xui-icon repository */
.#{$ns}-iconsymbol {
	fill-rule: evenodd;
	shape-rendering: auto;
}

.#{$ns}-iconwrapper {
	align-items: center;
	display: inline-flex;
	height: $xui-icon-standard;
	justify-content: center;
	width: $xui-icon-standard;
}

.#{$ns}-icon {
	display: inline-block;
	fill: currentColor;
	fill-rule: evenodd;
	flex: none; // Prevent distortion if parent has display: flex
	pointer-events: none; // Don't hog the cursor if inside buttons/links
}

.#{$ns}-blobicon {
	height: $xui-icon-standard;
	width: $xui-icon-standard;

	&.#{$ns}-icon-inline {
		margin: -10px -8px -6px;
		vertical-align: middle;
	}
}

.#{$ns}-blobicon-large,
.#{$ns}-iconwrapper-large {
	height: $xui-icon-large;
	width: $xui-icon-large;
}

.#{$ns}-blobicon-xlarge,
.#{$ns}-iconwrapper-xlarge {
	height: $xui-icon-xlarge;
	width: $xui-icon-xlarge;
}

$icon-colours:
	(
		standard: $xui-color-black-muted,
		black: $xui-color-grey-1,
		black-muted: $xui-color-black-muted,
		black-faint: $xui-color-black-faint,
		white: $xui-color-white,
		white-muted: $xui-color-white-muted,
		white-faint: $xui-color-white-faint,
		blue: $xui-color-blue,
		dark-blue: $xui-color-xero-dark-blue,
		red: $xui-color-red,
		green: $xui-color-green,
		orange: $xui-color-orange,
		yellow: $xui-color-yellow,
		mint: $xui-color-mint,
		turquoise: $xui-color-turquoise,
		violet: $xui-color-violet,
		grape: $xui-color-grape,
		pink: $xui-color-pink,
		file-spreadsheet: $xui-color-file-spreadsheet,
		file-pdf: $xui-color-file-pdf
	);

@each $colourName, $colorHex in $icon-colours {
	.#{$ns}-icon-color-#{$colourName} {
		fill: $colorHex;
	}
}
