@import "../mixins";

// Layout and Structure
//
// XUI provides two grid systems:
// * **Fixed percentage width**, where the developer specifies at least one of the column widths based on a 12 column grid.
// * **Fluid width**, where the developer does not specify any column widths. The columns will fill the available space evenly, regardless of their contents.
//
// ### Accessibility
// If the use of these grids in your application is to create an interactive control which contains columns of tabular
// data arranged in rows and columns, then using the `grid` role would be appropriate.
// Using the `grid` role means that the table is considered editable unless otherwise specified by setting the
// `aria-readonly` attribute on the grid to `true`.
// Each row in the grid must have the role `row` and each cell within the rows must have the role `gridcell`.
// The columns of the grid must able to be either active, selectable or editable in order to apply the `gridcell` role.
// The grid must also be keyboard accessible, as described in the
// [W3C documentation on managing focus](https://www.w3.org/TR/wai-aria/usage#managingfocus).
//
// Refer to the [W3C Documentation on grids](https://www.w3.org/TR/wai-aria/roles#grid) for further information about
// using the `grid` role and its associated roles and attributes.
//
// Styleguide: Grid Layout

// Typical Page Layouts
//
// These opinionated component classes are designed to let you easily create typical page layouts used in Xero.
// They provide both margins and responsive handlers. The reason they exist is because it is impossible
// to achieve this type of responsive margin / change layout by composing the current set of utilities
// provided by XUI.
//
// Markup:
// <div class="xui-page-width-standard">
//  <div class="xui-panel">Hello</div>
// </div>
// <div class="xui-page-width-standard xui-page-layout-sidebar-right">
//  <div class="xui-panel xui-page-layout-sidebar-right--main">Hello</div>
//  <div class="xui-panel xui-page-layout-sidebar-right--sidebar">Hello two</div>
// </div>
// <div class="xui-page-width-standard xui-page-layout-sidebar-right-small">
//  <div class="xui-panel xui-page-layout-sidebar-right--main-small">Hello</div>
//  <p class="xui-page-layout-sidebar-right--sidebar-small">I'm a bit of text that can exist floating next to my main content, it's pretty easy to replicate this type of display</p>
// </div>
// <div class="xui-page-width-standard xui-page-layout-sidebar-left">
//  <div class="xui-panel xui-page-layout-sidebar-left--sidebar">Hello</div>
//  <div class="xui-panel xui-page-layout-sidebar-left--main">Hello two</div>
// </div>
// <div class="xui-page-width-standard xui-page-layout-sidebar-left-small">
//  <div class="xui-panel xui-page-layout-sidebar-left--sidebar-small">Hello</div>
//  <div class="xui-panel xui-page-layout-sidebar-left--main-small">Hello two</div>
// </div>
// <div class="xui-page-width-standard xui-page-layout-split">
//  <div class="xui-panel xui-page-layout-split-left">Left Box</div>
//  <div class="xui-panel xui-page-layout-split-right">Hello two</div>
// </div>
//
// Styleguide: Grid Layout.1

.#{$ns}-page-width-standard {
	@include xui-clearfix;
	@include xui-page-width-and-spacing-standard;
}

.#{$ns}-page-width-large {
	@include xui-clearfix;
	@include xui-page-width-and-spacing-large;
}

@include xui-page-layout-sidebar-right;
@include xui-page-layout-sidebar-right(9, 7, "-small");
@include xui-page-layout-sidebar-left;
@include xui-page-layout-sidebar-left(9, 7, "-small");
@include xui-page-layout-split;

// Fixed percentage width columns
//
// Use these classes when you want to control the width of a column in your specific layout.
// These classes provide percentage widths based on the width of their parent container.
// They act in a grid-like fashion without forcing you into specific pixel widths, which are bad for responsive
// designs.
//
// To begin using these classes you need to use the wrapper `.xui-row` class. The wrapper class provides the
// clearfix required to properly layout subsequent sections of content.
//
// ### Example
//
// Markup:
// <div class="xui-row">
//   <div class="xui-column-4-of-12">
//     .xui-column-4-of-12
//   </div>
//   <div class="xui-column-4-of-12">
//     .xui-column-4-of-12
//   </div>
//   <div class="xui-column-4-of-12">
//     .xui-column-4-of-12
//   </div>
// </div>
//
// Styleguide: Grid Layout.2

.#{$ns}-row, .#{$ns}-row-grid {
	@include xui-clearfix;
}

.#{$ns}-row-flex {
	display: flex;
	flex-flow: row wrap;
}

/*
 Generate Regular columns, 1 to 12 with responsive variants
 Responsive variants are : -medium, -wide
 */
@include xui-column-width-generator2();

// Fixed percentage width columns with gutters (grid)
//
// Use these classes when you want to layout your page. These are helpful as they provide a 20px gutter between the
// columns. As a result, the column widths are calculated to include this gutter and appear using the full space
// of the parent container.
//
// To begin using these classes you need to use the wrapper `.xui-row-grid` class. The wrapper class provides the
// clearfix required to properly layout subsequent sections of content. It's important that all elements within
// `.xui-row-grid` have a `.xui-column-*` class applied to be properly aligned.
//
// ### Example
//
// Markup:
// <div class="xui-row-grid">
//   <div class="xui-column-4-of-12">
//     .xui-column-4-of-12
//   </div>
//   <div class="xui-column-8-of-12">
//     .xui-column-8-of-12
//   </div>
// </div>
// <div class="xui-row-grid">
//   <div class="xui-column-6-of-12">
//     .xui-column-6-of-12
//   </div>
//   <div class="xui-column-6-of-12">
//     .xui-column-6-of-12
//   </div>
// </div>
//
// Styleguide: Grid Layout.3

// Setting up the parent class for padded columns
// This is our "Grid" since we want a nice even space between the columns
.#{$ns}-row-grid {
	margin-left: - $xui-s-small;
	margin-right: - $xui-s-small;

	> [class*="xui-column"] {
		margin-left: $xui-s-small;
		margin-right: $xui-s-small;
	}
}

/*
 Generate padded columns, 1 to 12 with responsive variants
 Responsive variants are : -medium, -wide
 */
@include xui-column-width-generator2(true);

// Flexible column layout
//
// Use these classes when you want to layout your content within a row, where your row is likely to be bigger than
// the combined sizes of your content
//
// To begin using these classes you need to use the wrapper `.xui-row-flex` class. The wrapper class provides the
// clearfix required to properly layout subsequent sections of content.
//
// Additional classes give flavour to the positioning of content.
//
// `xui-space-between` : Even space between the columns, takes up the full width of the row container
//
// `xui-space-around` : Even space between and around the columns
//
// `xui-justify-center` : Group and center the columns within the row container
//
// `xui-justify-left` : Group and align the columns within the row container to the left hand side
//
// `xui-justify-right` : Group and align the columns within the row container to the right hand side
//
// ### Example
//
// Markup:
// <h4 class="xui-section-title">Space between columns</h4>
// <div class="xui-row-flex xui-space-between">
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
// </div>
// <h4 class="xui-section-title">Space around columns</h4>
// <div class="xui-row-flex xui-space-around">
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
// </div>
// <h4 class="xui-section-title">Group and align center</h4>
// <div class="xui-row-flex xui-justify-center">
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
// </div>
// <h4 class="xui-section-title">Group and align left</h4>
// <div class="xui-row-flex xui-justify-left">
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
// </div>
// <h4 class="xui-section-title">Group and align right</h4>
// <div class="xui-row-flex xui-justify-right">
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
//   <div class="xui-column-3-of-12">
//     .xui-column-3-of-12
//   </div>
// </div>
//
// Styleguide: Grid Layout.4

// Flex row utilities
// Should these live in a utility somewhere?
.#{$ns}-space-between {
	justify-content: space-between;
}

.#{$ns}-space-around {
	justify-content: space-around;
}

.#{$ns}-justify-left {
	justify-content: flex-start;
}

.#{$ns}-justify-right {
	justify-content: flex-end;
}

.#{$ns}-justify-center {
	justify-content: center;
}

// Flex row responsive utilities
@include xui-breakpoint-medium {
	.#{$ns}-space-between-medium {
		justify-content: space-between;
	}

	.#{$ns}-space-around-medium {
		justify-content: space-around;
	}

	.#{$ns}-justify-left-medium {
		justify-content: flex-start;
	}

	.#{$ns}-justify-right-medium {
		justify-content: flex-end;
	}

	.#{$ns}-justify-center-medium {
		justify-content: center;
	}
}

@include xui-breakpoint-wide {
	.#{$ns}-space-between-wide {
		justify-content: space-between;
	}

	.#{$ns}-space-around-wide {
		justify-content: space-around;
	}

	.#{$ns}-justify-left-wide {
		justify-content: flex-start;
	}

	.#{$ns}-justify-right-wide {
		justify-content: flex-end;
	}

	.#{$ns}-justify-center-wide {
		justify-content: center;
	}
}

// Responsive Layout
//
// Columns all have responsive layout variants that come into effect when the browser is of a certain width.
//
// Change your browser width to see an example of how these columns adjust based on your screen width.
//
// **Note:** Modifiers are available on ALL `.xui-column-*-of-*` classes.
//
// <table class="xui-contentblock xui-margin-bottom">
//  <thead>
//   <tr class="xui-sectionheading">
//    <th class="xui-text-sectionheading xui-padding-small">Viewport size</th>
//    <th class="xui-text-sectionheading xui-padding-vertical-small">Modifier</th>
//    <th class="xui-text-sectionheading xui-padding-vertical-small">Example</th>
//   </tr>
//  </thead>
//  <tbody>
//   <tr class="xui-contentblock--item">
//    <td class="xui-text-cell xui-padding-small">Always</td>
//    <td class="xui-text-cell">n/a</td>
//    <td class="xui-text-cell">`.xui-column-1-of-12`</td>
//   </tr>
//   <tr class="xui-contentblock--item">
//    <td class="xui-text-cell xui-padding-small">Medium viewport widths (&gt; 940px &lt; 1160px)</td>
//    <td class="xui-text-cell">`-medium`</td>
//    <td class="xui-text-cell">`.xui-column-1-of-12-medium`</td>
//   </tr>
//   <tr class="xui-contentblock--item">
//    <td class="xui-text-cell xui-padding-small">Wide viewport widths (&gt; 1160px)</td>
//    <td class="xui-text-cell">`-wide`</td>
//    <td class="xui-text-cell">`.xui-column-1-of-12-wide`</td>
//   </tr>
//  </tbody>
// </table>
//
// Markup:
// <div class="xui-row">
//   <div class="xui-column-12-of-12 xui-column-6-of-12-wide">
//     <p>12 of 12 by default <br />6 of 12 wide</p>
//   </div>
//   <div class="xui-column-12-of-12 xui-column-6-of-12-wide">
//     <p>12 of 12 by default <br />6 of 12 wide</p>
//   </div>
// </div>
//
// Styleguide: Grid Layout.7

@include xui-column-responsive-generator();
@include xui-column-responsive-generator(true);

// Parent Utility to stretch the boxes to full height of the box with the biggest height
.#{$ns}-align-stretch {
	> [class*='xui-column'] {
		align-items: stretch;
	}
}

// Parent utility to flip the order of the columns in a row
.#{$ns}-columns-reverse {
	flex-direction: row-reverse;
}

// Nesting
//
// You can nest any type of column with any responsive variant to achieve a large possible number of layouts
//
// This example illustrates some combinations.
//
// Markup:
// <div class="xui-row-grid">
//   <div class="xui-column-12-of-12">
//     <div class="xui-row-grid">
//       <div class="xui-column-6-of-12">half</div>
//       <div class="xui-column-6-of-12">
//         <div class="xui-row-flex xui-space-between">
//           <div class="xui-column-3-of-12">space</div>
//           <div class="xui-column-3-of-12">between</div>
//         </div>
//       </div>
//     </div>
//   </div>
// </div>
//
// Styleguide: Grid Layout.8
