@import "../vars";

// Steps
//
// Flag: Under review
//
// Teaser: Creating a step by step process
//
// Introduction: Steps are used to break up linear flows into more manageable sections.
//
// Styleguide: Building Blocks.Steps

// Best practice
//
// Tips:
// Do: Use steps for introducing or setting up new features
// Do: Additional steps may be added or removed based on choices within each step
// Warning: Avoid validating across multiple steps, isolate to each step instead
// Warning: Avoid steps for non-linear flows, use a sidebar instead
//
// Styleguide: Building Blocks.Steps.1

// Anatomy
//
// To create a series of steps, use the following classes.
// Make sure to wrap them inside a `<nav>` element for greater accessibility.
//
// Classes:
// xui-steps: Container for a group of steps
// xui-steps-interactive: Modifier to provide interactive styling
//
// Styleguide: Building Blocks.Steps.2

// Steps
//
// To create the steps themselves, use the following classes.
// Text content must precede icons to provide the correct positioning.
//
// Classes:
// xui-step: Container for an individual step
// xui-step-layout: Recommended layout for an individual step
// xui-step--body: Text content for a step
// xui-step--icon: Trailing icon for all but the last step
//
// Markup:
// <nav class="xui-panel">
//    <ol class="xui-steps xui-steps-interactive">
//      <li class="xui-step xui-step-layout">
//        <span class="xui-step--body">One</span>
//        <svg focusable="false" class="xui-step--icon xui-icon xui-u-rotate-270"><use xlink:href="#xui-icon-arrow-small" role="presentation" /></svg>
//      </li>
//      <li class="xui-step xui-step-layout">
//        <span class="xui-step--body">Two</span>
//        <svg focusable="false" class="xui-step--icon xui-icon xui-u-rotate-270"><use xlink:href="#xui-icon-arrow-small" role="presentation" /></svg>
//      </li>
//      <li class="xui-step xui-step-layout">
//        <span class="xui-step--body">Three</span>
//      </li>
//    </ol>
// </nav>
//
// Styleguide: Building Blocks.Steps.3

// xui-step-is-complete: Modifier for a completed step
// xui-step-is-selected: Modifier for the current step

// States
//
// To indicate which steps are complete, selected, or not yet selectable, use the following modifiers.
// Use `<a>` elements for completed steps, and `<span>` elements for all others.
//
// Classes:
// xui-step-is-complete: Modifier for a completed step
// xui-step-is-selected: Modifier for the current step
//
// Markup:
// <nav class="xui-panel">
//    <ol class="xui-steps xui-steps-interactive">
//      <li class="xui-step xui-step-layout xui-step-is-complete">
//        <a class="xui-step--body" href="#">Past</a>
//        <svg focusable="false" class="xui-step--icon xui-icon xui-u-rotate-270"><use xlink:href="#xui-icon-arrow-small" role="presentation" /></svg>
//      </li>
//      <li class="xui-step xui-step-layout xui-step-is-selected">
//        <span class="xui-step--body">Present</span>
//        <svg focusable="false" class="xui-step--icon xui-icon xui-u-rotate-270"><use xlink:href="#xui-icon-arrow-small" role="presentation" /></svg>
//      </li>
//      <li class="xui-step xui-step-layout">
//        <span class="xui-step--body">Future</span>
//      </li>
//    </ol>
// </nav>
//
// Styleguide: Building Blocks.Steps.4

.#{$ns}-steps {
	color: $xui-color-grey-alpha-2;
	cursor: default;
	display: flex;
	justify-content: center;
	list-style: none;
	margin: 0;
	padding: 0;
}

.#{$ns}-step {
	align-items: center;
	display: flex;
	position: relative;

	@include xui-all-but-last() {
		margin-right: 30px; // Offset .xui-step--icon
	}

	&::after {
		background-color: transparent;
		bottom: 0;
		content: "";
		display: block;
		height: 3px;
		left: 10px; // Offset $xui-s-actionlink
		position: absolute;
		width: calc(100% - 20px); // (100%) - (20px offset $xui-s-actionlink)
	}
}

.#{$ns}-step-layout {
	@include xui-padding-vertical($xui-s-standard);
}

// Step icon
.#{$ns}-step--icon {
	position: absolute;
	right: -30px;
	top: calc(50% - 15px);
}

// Step text
.#{$ns}-step--body {
	@include xui-text-line-height-compact;

	color: currentColor;
	outline: none;
	padding: $xui-s-actionlink;
	text-align: center;
}

// Completed step
.#{$ns}-step-is-complete {
	.#{$ns}-step--body {
		color: $xui-color-black;
	}
}

// Selected step
.#{$ns}-step-is-selected {
	.#{$ns}-step--body {
		color: $xui-color-xero-blue;
	}

	&::after {
		background-color: $xui-color-xero-blue;
	}
}

// Interactive completed step
.#{$ns}-steps-interactive {
	.#{$ns}-step-is-complete .#{$ns}-step--body {
		&:hover {
			color: $xui-color-xero-blue;
		}

		&:focus {
			background-color: rgba($xui-color-grey-1, 0.05);
			border-radius: $xui-radius;
		}

		&:active {
			background-color: rgba($xui-color-grey-1, 0.1);
			border-radius: $xui-radius;
		}
	}
}

.#{$ns}-stepper {


}

@mixin bigScreen() {

	// @media (min-width: 800px) {
		@content;
	// }
}

@mixin suportsGrid() {

	@supports (display: grid) {
		@content;
	}
}

.Placeholder-link {
	border-radius: 9999px;
	color: red;
	display: block;
	padding: 10px 20px;
	text-decoration: none;

	&--active {
		background: red;
		color: white;
	}
}

.#{$ns}-stepper {
	display: flex;
	flex-direction: column;

	&--inline {

		@include bigScreen {
			display: flex;
			flex-flow: row wrap;
			justify-content: center;
		}
	}

	&--columns {

		@include bigScreen {
			@include suportsGrid {
				display: grid;
				grid-template-columns: auto 1fr;
				// grid-template-rows: auto auto auto 1fr;
			}
		}
	}
}

.#{$ns}-stepper-tests {
	height: 0;
	overflow: hidden;
	visibility: hidden;

}

.#{$ns}-stepper-testinline {

}

.#{$ns}-stepper-testcolumns {

}

.#{$ns}-stepper {

	&-tab {
		// background: gray;
		padding: 0 30px;
		position: relative;

		&:before,
		&:after {
			background: red;
			content: '';
			display: block;
			position: absolute;
		}
	}

	&--inline #{&}-tab {
		@include bigScreen {
			order: 0 !important;
		}
}

&--columns #{&}-tab {
	@include bigScreen {
		@include suportsGrid {
			order: 0 !important;
		}
	}
}

// &:not(#{&}--inline) #{&}-tab {
&-tab {
	padding: 30px 0;

	&--first {
		padding-top: 0;
	}

	&--last {
		padding-bottom: 0;
	}

	&:before,
	&:after {
		height: 30px;
		left: 30px;
		top: 0;
		width: 1px;
	}

	&:after {
		bottom: 0;
		top: initial;
	}
}

&--inline #{&}-tab {

	@include bigScreen {
		padding: 0 30px;

		&--first {
			padding-left: 0;
		}

		&--last {
			padding-right: 0;
		}

		&:before,
		&:after {
			height: 1px;
			left: 0;
			top: 50%;
			width: 30px;
		}

		&:after {
			left: inherit;
			right: 0;
		}
	}
}

&-tab#{&}-tab--first:before {
	display: none;
}


&-tab#{&}-tab--last:after {
	display: none;
}
}

.#{$ns}-stepper {

	&-section {
		order: 0;
		padding-left: 60px;
		position: relative;
		width: 100%;

		&:before {
			background: red;
			bottom: 0;
			content: '';
			display: block;
			left: 30px;
			position: absolute;
			top: 0;
			width: 1px;
		}
	}

	&--columns &-section {

		@include bigScreen {
			@include suportsGrid {
			grid-column-start: 2;
			grid-column-end: -1;
			grid-row-start: 1;
			grid-row-end: -1;
			}
		}
	}

	&--columns &-section {

		@include bigScreen {
			@include suportsGrid {
			padding: 0 0 0 30px;

			&:before {
				display: none;
			}
			}
		}
	}

	&--inline &-section {

		@include bigScreen {
			padding: 30px 0 0;

			&:before {
				display: none;
			}
		}
	}
}
