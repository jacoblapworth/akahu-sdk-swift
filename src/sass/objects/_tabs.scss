/**
 * Styles for the tabbed elements.  These typically sit above <section>
 * elements, controlling the display of them.
 */

@import "../tools/mixins";
@import "../settings/colours";

// Tabs
//
// Applied to sections that have tabs in them, removes the padding so that the
// bottom of the tabs are flush with the top of the section they manage.
// NOTE: Keep an eye on this one... there might be a better way to declare a
//       tab section without having to undo existing section padding.
//
// Markup:
//	<div class="xui-tabbed-navigation">
//		<div class="xui-tabgroup">
//			<div class="xui-tab">Default</div>
//			<div class="xui-tab-is-selected">Default Selected</div>
//			<div class="xui-tab-pageheader">Global Header</div>
//			<div class="xui-tab-pageheader-is-selected">Global Header Selected</div>
//		</div>
//	</div>
//
// Styleguide: Tabs
.#{$ns}-tabbed-navigation {
	padding-bottom: 0;
}

.#{$ns}-tabgroup {
	color: $color-secondary-text;
	display: flex;
	justify-content: center;
	list-style: none;
	margin: 0;
	padding: 0;
}

// Put all the variations of tabs you need in here
// Makes for an easy place to store and create new variations of tabs with different colours.
$variations: (
	"#{$ns}-tab":($color-secondary-text, $color-primary-text, transparent),
	"#{$ns}-tab-is-selected":($color-primary-text, $color-primary-text, $color-primary-text),
	"#{$ns}-tab-pagenav":($color-reversed-text, $color-xero-light-blue, transparent),
	"#{$ns}-tab-pagenav-is-selected":($color-xero-light-blue, $color-xero-light-blue, $color-xero-light-blue)
);

@mixin children ($classname) {

	.#{$classname} {
		&:first-of-type {
			padding-left: 0;
		}

		&:last-of-type {
			padding-right: 0;
		}
	}

}

.#{$ns}-tabgroup-start {
	justify-content: flex-start;

	@each $variation, $colors in $variations {
		@include children(#{$variation});
	}

}

// Individual tabs
// -----------------------------------------------------------------------------

@mixin xuitab ($color: $color-secondary-text, $hover-color: $color-primary-text, $border-color: transparent) {
	color: $color;
	cursor: pointer;
	margin: 0;
	padding: 0.5em 1em 0;
	text-align: center;

	&:after {
		background-color: $border-color;
		content: " ";
		display: block;
		height: 3px;
		margin-top: 6px;
	}

	&:hover {
		color: $hover-color;
	}

	&:hover:after {
		background-color: $hover-color;
	}
}

@each $variation, $colors in $variations {
	.#{$variation} {
		@include xuitab(nth($colors, 1), nth($colors, 2), nth($colors, 3));
	}
}
