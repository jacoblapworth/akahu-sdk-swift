/* eslint-disable import/no-extraneous-dependencies */
/* eslint-disable react/react-in-jsx-scope */
/* eslint-disable react/prop-types */
import { h, render, Component } from 'preact';
import 'unfetch/polyfill/index.js';
import './styles.scss';

const reactIconPath =
  'M16.4440865,5.83411461 C18.604153,6.58630542 20,7.76459743 20,8.98291197 C20,10.2535155 18.5082937,11.4958256 16.2154579,12.2642224 C16.0942838,12.3048717 15.9701004,12.3439093 15.8435271,12.3816935 C15.8886686,12.5654211 15.9289419,12.7458358 15.9634619,12.9224901 C16.4161164,15.2352911 16.067553,17.1362271 14.9947777,17.7644107 C13.9560799,18.3726278 12.277346,17.775155 10.5775461,16.2955748 C10.3927856,16.1343608 10.2125035,15.9679684 10.0369098,15.7965914 C9.89750217,15.9329546 9.75827152,16.0630502 9.61957195,16.1857143 C7.86471702,17.7373709 6.06259626,18.3811338 4.98884739,17.7548304 C3.94926446,17.1482249 3.62256368,15.3787275 4.04087521,13.1501798 C4.0865836,12.9079844 4.13897413,12.6671285 4.19798545,12.427894 C4.01633779,12.3754434 3.83601071,12.3184212 3.65717219,12.2568805 C1.45161005,11.494393 0,10.2367722 0,8.98291197 C0,7.76898469 1.35229868,6.59857184 3.46970207,5.85184271 C3.70638531,5.76839528 3.95377861,5.68996186 4.20993468,5.61636338 C4.15505968,5.39430377 4.10577165,5.17086952 4.06211829,4.94627695 C3.6233603,2.67833345 3.93209297,0.865858896 4.9744198,0.255492892 C6.06144559,-0.381017584 7.87179805,0.302499222 9.67790189,1.92471006 C9.79024641,2.02583623 9.90072935,2.12905895 10.0092938,2.23432508 C10.1714096,2.07601604 10.3374536,1.92187563 10.5072669,1.7720514 C12.2306113,0.255045213 13.9369612,-0.379585011 14.9802616,0.229079812 C16.0684381,0.863710035 16.3870842,2.79159632 15.8997327,5.18471096 C15.8692804,5.33338134 15.8361119,5.48146915 15.8002443,5.6288984 C16.0165282,5.69182286 16.2312104,5.76024998 16.4440865,5.83411461 Z M15.946733,11.4438948 L15.9468215,11.4438948 C17.9264105,10.7803445 19.1456744,9.76500776 19.1456744,8.98291197 C19.1456744,8.24871786 18.016782,7.29578763 16.1659792,6.651398 C15.9746145,6.58469378 15.7759918,6.52157099 15.5714387,6.46158196 C15.3253731,7.26695708 14.9969906,8.11781642 14.5980633,8.98720969 C15.0160208,9.87764388 15.3576803,10.7396057 15.6108269,11.5501739 C15.7251854,11.5158816 15.8374197,11.480515 15.946733,11.4438948 Z M15.1253341,13.0903699 L15.1253341,13.0903699 C15.0940891,12.9307274 15.0577989,12.7675035 15.017083,12.6009668 C14.1886916,12.7946329 13.2752394,12.9365472 12.3083255,13.0233075 C11.758661,13.8282349 11.195454,14.5531173 10.6318929,15.1766451 C10.8002443,15.3404957 10.9681531,15.4953928 11.1348227,15.6404409 C12.58838,16.9057617 13.9363416,17.3854949 14.5666413,17.0164281 C14.8628051,16.8429971 15.1023208,16.4100016 15.221459,15.7605085 C15.3540512,15.0376854 15.3254616,14.1130485 15.1253341,13.0903699 Z M6.81840712,16.9526785 L6.81849564,16.9526785 C7.50376179,16.7077979 8.28134681,16.221081 9.0573386,15.5348781 C9.18721471,15.4197526 9.31426909,15.30141 9.43838623,15.1799579 C8.85437873,14.5459544 8.27488538,13.8219674 7.72159181,13.0343204 C6.75237657,12.9548126 5.84556285,12.8229262 5.02637682,12.6396463 C4.9715654,12.8621368 4.92286463,13.0861223 4.88033068,13.3113444 C4.52265043,15.2171153 4.78482536,16.6380495 5.41574466,17.0060419 C5.71217405,17.1789357 6.20262352,17.1726682 6.81840712,16.9526785 Z M3.93350918,11.4390599 L3.93350918,11.4390599 C4.09679285,11.495254 4.26141739,11.5473797 4.42723362,11.5953895 C4.67984917,10.7622582 5.01283436,9.88758236 5.41415143,9.0039529 C5.0179681,8.13330613 4.6896741,7.27232923 4.43935988,6.44886787 C4.20784076,6.5150887 3.97828774,6.58815141 3.75099577,6.66796213 C1.94011223,7.30662147 0.854325621,8.24630039 0.854325621,8.98291197 C0.854325621,9.32914716 1.10481687,9.75578557 1.60084264,10.1855577 C2.15289702,10.6636793 2.95827506,11.1018678 3.93350918,11.4390599 Z M4.90060012,4.78027745 L4.90060012,4.78018792 C4.94123567,4.98910606 4.98707035,5.19695496 5.03806051,5.40353662 C5.86583229,5.21381012 6.76627308,5.07216438 7.70689869,4.98397155 C8.25541256,4.20089086 8.82959514,3.48236553 9.41059321,2.85122721 C9.3103082,2.75425986 9.21020022,2.66051581 9.11053479,2.57097994 C7.55111615,1.17037038 6.07162456,0.61166657 5.40246774,1.00347552 C4.77429234,1.37128886 4.52468622,2.83708054 4.90060012,4.78027745 Z M13.527678,6.93513716 L13.527678,6.93513716 C13.7263643,7.28214908 13.9181803,7.63313996 14.1030112,7.98789988 C14.3559808,7.38890493 14.5708014,6.80459387 14.7431358,6.24580052 C14.1690418,6.1131979 13.5576838,6.0048595 12.9195065,5.92338186 C13.1293891,6.25617677 13.33216,6.5935068 13.527678,6.93513716 Z M10.0095594,3.46884561 L10.0095594,3.46884561 C9.60930447,3.90569111 9.21126237,4.387215 8.82269114,4.90553813 C9.61020528,4.86825342 10.3990167,4.86843269 11.1865142,4.90607535 C10.798297,4.38291728 10.4036184,3.9006771 10.0095594,3.46884561 Z M6.46887005,6.94104653 L6.46887005,6.94104653 C6.66533101,6.59648004 6.86976343,6.2566276 7.08199827,5.92177022 C6.44798102,6.00190482 5.83945547,6.10746761 5.2688134,6.23666786 C5.44265255,6.8034299 5.65552585,7.39033751 5.90433536,7.98727313 C6.08444185,7.63413586 6.27267132,7.28529868 6.46887005,6.94104653 Z M7.1002319,12.1057439 L7.1002319,12.1057439 C6.88279577,11.7645162 6.673433,11.418093 6.47232204,11.0667697 C6.27523138,10.722363 6.08617476,10.3733154 5.905309,10.0199164 C5.65118873,10.6296556 5.43362425,11.2291878 5.25704119,11.8059778 C5.82750624,11.9315967 6.44523713,12.0317873 7.1002319,12.1057439 Z M10.0331923,14.5580418 C10.4245959,14.1220916 10.8178583,13.6325095 11.2073147,13.097085 C10.8106888,13.1149922 10.40769,13.1242144 10,13.1242144 C9.60319708,13.1242144 9.21276709,13.1165143 8.82986068,13.1012932 C9.22436227,13.6271374 9.62824621,14.1160032 10.0331923,14.5580418 Z M14.1111544,9.98884743 L14.1111544,9.98884743 C13.9256988,10.350464 13.7323094,10.7078603 13.53113,11.0607708 C13.3332279,11.4080168 13.1285163,11.7512458 12.9171166,12.0902542 C13.5768026,12.0102092 14.2028537,11.902408 14.7827896,11.7685519 C14.6038167,11.2015212 14.3784631,10.6052123 14.1111544,9.98884743 Z M12.7909859,10.6290289 L12.7910744,10.6290289 C13.0966592,10.0936516 13.3832978,9.54743504 13.6504452,8.99141787 C13.3805212,8.44100852 13.0929681,7.89962712 12.788242,7.36813261 C12.4852277,6.8380272 12.1638147,6.31890351 11.824603,5.81173064 C11.229974,5.76588828 10.6193241,5.74189266 10.0000885,5.74189266 C9.38359681,5.74189266 8.77374356,5.7657092 8.17893749,5.81119342 C7.83625967,6.31914794 7.51277775,6.84008495 7.20919117,7.37287801 L7.20919117,7.37269894 C6.90550931,7.90537856 6.62174317,8.44942497 6.35849457,9.00368429 C6.62241445,9.5577776 6.90704069,10.1015327 7.21175804,10.6337743 C7.51790637,11.1688547 7.84395514,11.6920287 8.18920498,12.2021741 C8.77223884,12.2404059 9.37766645,12.2600142 10,12.2600142 C10.6249004,12.2600142 11.2381172,12.2378989 11.831507,12.1950112 C12.1680288,11.6836753 12.4880242,11.1614052 12.7909859,10.6290289 Z M14.5535414,0.977778729 L14.5535414,0.977778729 C13.9247464,0.610950283 12.5447432,1.12416987 11.0681726,2.42405158 C10.9113985,2.5624195 10.758047,2.70470605 10.60826,2.85077953 C11.1798757,3.47377009 11.7492786,4.19354892 12.2988546,4.98513552 C13.2422241,5.07467138 14.1432845,5.21882413 14.9730036,5.41249021 C15.0053708,5.27898369 15.0353521,5.14489679 15.0629326,5.0102951 C15.4837225,2.9440759 15.2232293,1.36851325 14.5535414,0.977778729 Z M10,7.17634678 C10.9863867,7.17634678 11.7859229,7.9852138 11.7859229,8.98291197 C11.7859229,9.98069967 10.9863867,10.7895667 10,10.7895667 C9.01370178,10.7895667 8.21407708,9.98069967 8.21407708,8.98291197 C8.21407708,7.9852138 9.01370178,7.17634678 10,7.17634678 Z';
const gitIconPath =
  'M18.6585672,4.98045815 C17.7643394,3.44830417 16.5513766,2.23529573 15.0193594,1.34115919 C13.4871142,0.446977056 11.8143593,0 9.99990879,0 C8.18568634,0 6.51238411,0.447113872 4.98045815,1.34115919 C3.44830417,2.23525012 2.23538694,3.44830417 1.34115919,4.98045815 C0.447068266,6.51256653 0,8.18564073 0,9.99963516 C0,12.178654 0.635737186,14.1380836 1.90753079,15.8784255 C3.17918759,17.6189043 4.82197991,18.8232477 6.83577093,19.4915927 C7.07018192,19.5351001 7.2437099,19.504499 7.35653728,19.4005646 C7.46941028,19.2964934 7.52577837,19.1661536 7.52577837,19.0100924 C7.52577837,18.9840518 7.52354371,18.7497777 7.51921121,18.3069963 C7.5147419,17.8642149 7.51264406,17.4779385 7.51264406,17.1483493 L7.21315438,17.2001569 C7.0222052,17.2351361 6.78131827,17.2499578 6.49049359,17.2457621 C6.19980572,17.2417033 5.89803578,17.211239 5.58559421,17.1545972 C5.27301583,17.0984572 4.98228236,16.9682542 4.71316578,16.7642619 C4.44418601,16.5602696 4.25323683,16.2932509 4.14036384,15.9636161 L4.01016085,15.6639896 C3.92337406,15.4645123 3.78674073,15.2429164 3.60007844,15.0000228 C3.41341615,14.7569012 3.22465602,14.5920838 3.03370684,14.505297 L2.94254195,14.4400359 C2.88179575,14.3966653 2.82542766,14.3443561 2.77330086,14.2836555 C2.72121967,14.2229549 2.68222718,14.1622088 2.65618658,14.1013713 C2.63010038,14.0404883 2.65171727,13.9905506 2.72126527,13.9513757 C2.79081328,13.9122008 2.91650135,13.8931834 3.09887674,13.8931834 L3.35919151,13.9320847 C3.5328107,13.9668815 3.74756582,14.0708158 4.00373051,14.2445262 C4.25975838,14.4180998 4.47022661,14.6437546 4.6351808,14.9213994 C4.8349318,15.2773939 5.0755907,15.548654 5.35784159,15.7353162 C5.63986446,15.9219785 5.9242132,16.0151501 6.21061417,16.0151501 C6.49701514,16.0151501 6.74437801,15.993442 6.95279401,15.9502538 C7.16098197,15.9068376 7.35630926,15.8415765 7.53868465,15.7548353 C7.61680645,15.1730035 7.82950933,14.7260265 8.17661089,14.4135849 C7.68188514,14.3615949 7.23709713,14.2832907 6.84201885,14.1791739 C6.4471686,14.0749203 6.03913843,13.9057248 5.61820197,13.6711314 C5.19703748,13.4368573 4.84765566,13.1459414 4.56996529,12.7988854 C4.29222932,12.451647 4.06429428,11.995777 3.88647941,11.4316856 C3.70857333,10.8673663 3.61959749,10.2163969 3.61959749,9.47859518 C3.61959749,8.42807824 3.96254897,7.53412413 4.64831511,6.79623118 C4.32707173,6.00643946 4.35739922,5.12105914 4.7393888,4.14018142 C4.99112978,4.06196841 5.36445436,4.12066237 5.85918011,4.31589845 C6.35399707,4.51122573 6.71628518,4.67855139 6.94640927,4.81728257 C7.17653336,4.95596813 7.36091539,5.07349286 7.49982898,5.16880783 C8.30726993,4.94319866 9.14052346,4.83037127 9.99981758,4.83037127 C10.8591117,4.83037127 11.6925476,4.94319866 12.5000342,5.16880783 L12.9948056,4.85645748 C13.3331509,4.64804148 13.7326985,4.4570467 14.1924906,4.28342751 C14.6525564,4.10989953 15.0043553,4.06210523 15.2475225,4.14031823 C15.6379946,5.12124156 15.6727915,6.00657628 15.3514569,6.796368 C16.0371774,7.53426094 16.3802657,8.42844308 16.3802657,9.47873199 C16.3802657,10.2165337 16.2909706,10.8695553 16.1133382,11.4382072 C15.9354777,12.0069502 15.7055816,12.4623643 15.4235588,12.805407 C15.1412167,13.148404 14.7896002,13.4370397 14.3686637,13.6712682 C13.9476361,13.9056792 13.5394691,14.0748747 13.1446188,14.1791283 C12.7495861,14.2833819 12.3047981,14.3617317 11.8100724,14.4138129 C12.2612907,14.8042851 12.4869455,15.42064 12.4869455,16.2626042 L12.4869455,19.0097276 C12.4869455,19.1657888 12.5412157,19.296083 12.6498475,19.4001998 C12.7583423,19.5041341 12.9296813,19.5347352 13.1640923,19.4911822 C15.1781569,18.8229285 16.8209492,17.6185394 18.0925604,15.8780607 C19.3640348,14.1377187 20,12.1782892 20,9.99927032 C19.9995439,8.18550392 19.5522477,6.51256653 18.6585672,4.98045815 Z';
const figmaIconPath =
  'M0 3.6C0 1.61178 1.61178 0 3.6 0H6.39974H7.2H9.99974C11.988 0 13.5997 1.61178 13.5997 3.6C13.5997 4.99315 12.8084 6.20147 11.6507 6.79997C12.8084 7.39847 13.5997 8.60679 13.5997 9.99994C13.5997 11.9882 11.988 13.5999 9.99974 13.5999C8.86898 13.5999 7.85999 13.0786 7.2 12.2632V12.8001V13.5999V16.4001C7.2 18.3883 5.58823 20.0001 3.6 20.0001C1.61178 20.0001 0 18.3883 0 16.4001C0 15.0069 0.791443 13.7985 1.94926 13.2C0.791443 12.6016 0 11.3932 0 9.99994C0 8.60679 0.791353 7.39847 1.94907 6.79997C0.791353 6.20147 0 4.99315 0 3.6ZM6.4 9.95615C6.39983 9.97073 6.39974 9.98533 6.39974 9.99994C6.39974 10.0146 6.39983 10.0292 6.4 10.0437V12.7999H3.6C2.0536 12.7999 0.8 11.5463 0.8 9.99994C0.8 8.45807 2.04627 7.20728 3.58643 7.19998L3.6 7.2H6.39974H6.4V9.95615ZM7.2 10.0385V9.96136C7.22056 8.43877 8.45644 7.20965 9.98165 7.2H9.99974C10.0043 7.2 10.0088 7.19999 10.0133 7.19998C11.5535 7.20728 12.7997 8.45807 12.7997 9.99994C12.7997 11.5463 11.5461 12.7999 9.99974 12.7999C8.46622 12.7999 7.22064 11.5671 7.2 10.0385ZM7.73673 7.2C7.53956 7.35956 7.35958 7.53953 7.2 7.73669V7.2H7.73673ZM10.0134 6.39997C10.0088 6.39995 10.0043 6.39994 9.99974 6.39994C9.99287 6.39994 9.986 6.39996 9.97914 6.4H7.2V6.39994V0.8H9.99974C11.5461 0.8 12.7997 2.0536 12.7997 3.6C12.7997 5.14185 11.5535 6.39263 10.0134 6.39997ZM6.39974 6.39994H3.6L3.58637 6.39997C2.04625 6.39263 0.8 5.14185 0.8 3.6C0.8 2.0536 2.0536 0.8 3.6 0.8H6.39974V6.39994ZM3.6 13.6001C2.0536 13.6001 0.8 14.8537 0.8 16.4001C0.8 17.9465 2.0536 19.2001 3.6 19.2001C5.1464 19.2001 6.4 17.9465 6.4 16.4001V13.6001H3.6Z';
const kssIconPath =
  'M15.7501766,27 L23.4001766,16.8 C24.3942891,15.4745166 24.12566,13.5941125 22.8001766,12.6 C21.4746932,11.6058875 19.5942891,11.8745166 18.6001766,13.2 L12.0001766,22 L5.40017656,13.2 C4.40606401,11.8745166 2.52565995,11.6058875 1.20017656,12.6 C-0.125306844,13.5941125 -0.393935994,15.4745166 0.600176555,16.8 L8.25017656,27 L0.600176555,37.2 C-0.393935994,38.5254834 -0.125306844,40.4058875 1.20017656,41.4 C2.52565995,42.3941125 4.40606401,42.1254834 5.40017656,40.8 L12.0001766,32 L18.6001766,40.8 C19.5942891,42.1254834 21.4746932,42.3941125 22.8001766,41.4 C24.12566,40.4058875 24.3942891,38.5254834 23.4001766,37.2 L15.7501766,27 Z M58.0001766,15 C58.0001766,13.3431458 59.3433223,12 61.0001766,12 C62.6570308,12 64.0001766,13.3431458 64.0001766,15 L64.0001766,39 C64.0001766,40.6568542 62.6570308,42 61.0001766,42 C59.3433223,42 58.0001766,40.6568542 58.0001766,39 L58.0001766,15 Z M28.0001766,15 C28.0001766,13.3431458 29.3433223,12 31.0001766,12 C32.6570308,12 34.0001766,13.3431458 34.0001766,15 L34.0001766,28 C34.0001766,33.7505612 35.7792252,36.5 40.0001766,36.5 C44.2211279,36.5 46.0001766,33.7505612 46.0001766,28 L46.0001766,15 C46.0001766,13.3431458 47.3433223,12 49.0001766,12 C50.6570308,12 52.0001766,13.3431458 52.0001766,15 L52.0001766,28 C52.0001766,36.6585297 48.2204017,42.5 40.0001766,42.5 C31.7799514,42.5 28.0001766,36.6585297 28.0001766,28 L28.0001766,15 Z M58.1717494,6.82842712 C56.6096523,5.26632996 56.6096523,2.73367004 58.1717494,1.17157288 C59.7338466,-0.390524292 62.2665065,-0.390524292 63.8286037,1.17157288 C65.3907008,2.73367004 65.3907008,5.26632996 63.8286037,6.82842712 C62.2665065,8.39052429 59.7338466,8.39052429 58.1717494,6.82842712 Z';

// Determines based on our routing system (xui.xero.com/<semver version>/)
// Whether or not to add the `version-selector-is-pre-14` class to the version selector.
// Since we're using non-namespaced XUI in this case to style the selector
// Even though it's a completely custom impelementation of it
// We are impacted by changes between versions of XUI.
function isPreXui14() {
  const currentVersionOfXUI = window.location.pathname.substr(1).split('/')[0];
  const majorXUIVersion = parseInt(currentVersionOfXUI.split('.')[0]);
  return !isNaN(majorXUIVersion) && majorXUIVersion < 14;
}

/*
 * When a user swaps between versions, either one of two scenarios will happen
 * 1. If the same page exists with the target version, the user will be redirected to the same page with the target version.
 * 2. If the same page does not exist, the user will be redirected to the home page of the target version.
 */
const keepPathAndSwapVersion = version => {
  const regexToSelectSemanticVersion = /\/(\d+\.){2}\d+((-\w+)+\.\d+)?\//g;
  const urlWithSwappedVersion = window.location.href.replace(
    regexToSelectSemanticVersion,
    `/${version.target.value}/`,
  );

  fetch(urlWithSwappedVersion).then(response => {
    window.location = response.status === 200 ? urlWithSwappedVersion : `/${version.target.value}/`;
  });
};

class VersionSelector extends Component {
  constructor() {
    super();
    this.state = {
      versions: [],
      loadingVersions: true,
    };
  }

  async componentDidMount() {
    // Homepage sets tags in session storage
    // If they exist, prefer those otherwise
    // Will will get a fresh set of tags
    if (window.sessionStorage.tags != null) {
      this.setState({
        versions: JSON.parse(window.sessionStorage.tags),
        loadingVersions: false,
      });
    } else {
      await fetch('/tags.json')
        .then(response => response.json())
        .then(json => {
          window.sessionStorage.setItem('tags', JSON.stringify(json));
          this.setState({
            versions: json,
            loadingVersions: false,
          });
        });
    }
  }

  render() {
    const { selectedVersion, isReactDocs, hasReactDocs } = this.props;
    const { versions, loadingVersions } = this.state;
    const linkClasses = 'version-selector-icon xui-button xui-button-icon';
    const footerClasses = `version-selector-footer xui-container${
      isPreXui14() ? ' version-selector-is-pre-14' : ''
    }`;

    const majorVersions = {};
    const semverRegex = /^(\d+)\.(\d+)\.(\d+)$/;
    const prereleaseSemverRegex = /^(\d+)\.(\d+)\.(\d+)-.*$/;

    const filteredVersions = versions
      .filter(version => version)
      .map(version => {
        const semverVersion = version.match(semverRegex);

        if (!semverVersion) {
          return version;
        }

        const [_, __, minorVersion, patchVersion] = semverVersion;
        const majorVersion = Number(semverVersion[1]);

        /**
         * From XUI 19 onwards we changed the docs strategy to only surface major versions of XUI
         * because users should be able to upgrade to the latest minor or patch anyway.
         */
        if (majorVersion < 19) {
          return version;
        }

        if (!majorVersions[majorVersion]) {
          majorVersions[majorVersion] = version;
        } else {
          const [___, ____, minorVersionToCompare, patchVersionToCompare] =
            majorVersions[majorVersion].match(semverRegex);

          if (
            Number(minorVersion) > Number(minorVersionToCompare) ||
            (Number(minorVersion) === Number(minorVersionToCompare) &&
              Number(patchVersion) > Number(patchVersionToCompare))
          ) {
            majorVersions[majorVersion] = version;
          }
        }

        return majorVersion;
      })
      .filter(
        (version, i, filteredList) =>
          !(typeof version === 'number' && filteredList.indexOf(version) !== i),
      )
      .filter(version => {
        if (typeof version === 'number' || version === 'breaking-changes') {
          return true;
        }

        const prereleaseSemverVersion = version.match(prereleaseSemverRegex);

        if (!prereleaseSemverVersion) {
          return true;
        }

        const [_, prereleaseMajorVersion, prereleaseMinorVersion, prereleasePatchVersion] =
          version.match(prereleaseSemverRegex);

        if (!majorVersions[prereleaseMajorVersion]) {
          return true;
        }

        const [__, ___, minorVersionToCompare, patchVersionToCompare] =
          majorVersions[prereleaseMajorVersion].match(semverRegex);

        if (prereleaseMinorVersion > minorVersionToCompare) {
          return true;
        }

        if (
          prereleaseMinorVersion === minorVersionToCompare &&
          prereleasePatchVersion > patchVersionToCompare
        ) {
          return true;
        }

        return false;
      });

    const selectedSubVersion = Object.entries(majorVersions).find(
      ([_, latestSubVersion]) => selectedVersion === latestSubVersion,
    )?.[0];

    const cssReactSelector =
      hasReactDocs &&
      (isReactDocs ? (
        <a className={linkClasses} href={`/${selectedVersion}/`}>
          <svg className="xui-icon xui-iconwrapper" focusable="false" viewBox="0 0 80 50">
            <path d={kssIconPath} role="presentation" />
          </svg>
        </a>
      ) : (
        <a className={linkClasses} href={`/${selectedVersion}/react/`}>
          <svg className="xui-icon xui-iconwrapper" focusable="false" viewBox="0 0 30 30">
            <path d={reactIconPath} role="presentation" transform="translate(5, 5.62)" />
          </svg>
        </a>
      ));
    return (
      <div className={footerClasses}>
        <div className="version-selector-icon-wrapper">
          <a className={linkClasses} href="https://github.dev.xero.com/UXE/xui/">
            <svg className="xui-icon xui-iconwrapper" focusable="false" viewBox="0 0 30 30">
              <path d={gitIconPath} role="presentation" transform="translate(5.23, 5)" />
            </svg>
          </a>
          <a
            className={linkClasses}
            href="https://www.figma.com/file/Xj2cicSECPYLtBcbMg9jar/XUI-18-%7C-Design-Systems"
          >
            <svg className="xui-icon xui-iconwrapper" focusable="false" viewBox="-4 0 30 30">
              <path d={figmaIconPath} role="presentation" transform="translate(4.44, 5.755)" />
            </svg>
          </a>
          {cssReactSelector}
        </div>

        {loadingVersions ? (
          <div aria-valuetext="Loading versions" className="xui-loader" role="progressbar">
            <div className="xui-loader--dot" />
            <div className="xui-loader--dot" />
            <div className="xui-loader--dot" />
          </div>
        ) : (
          <div className="xui-select">
            {/* eslint-disable-next-line jsx-a11y/no-onchange */}
            <select
              className="xui-select--control version-selector"
              id="version-select"
              onChange={keepPathAndSwapVersion}
            >
              {filteredVersions &&
                filteredVersions.map(version => {
                  if (typeof version === 'number') {
                    return (
                      <option
                        key={`xui-${version}`}
                        selected={selectedVersion === majorVersions[version]}
                        value={majorVersions[version]}
                      >
                        XUI {version}
                      </option>
                    );
                  }
                  return (
                    <option key={version} selected={selectedVersion === version} value={version}>
                      {version}
                    </option>
                  );
                })}
            </select>
            <label
              className="xui-text-deemphasis xui-text-truncated xui-padding-xsmall version-selector-label"
              htmlFor="version-select"
            >
              {selectedSubVersion ? `XUI ${selectedSubVersion}` : selectedVersion}
            </label>
            <svg
              className="xui-icon xui-iconwrapper xui-icon xui-iconwrapper-color-standard xui-select--caret"
              focusable="false"
              viewBox="0 0 30 30"
            >
              <path d="M10,13L15 18 20 13z" role="presentation" />
            </svg>
          </div>
        )}
      </div>
    );
  }
}

window.renderVersionSelector = (selectedVersion, isReactDocs, hasReactDocs) => {
  const renderTo =
    document.getElementById('versionSelectorContainer') ||
    document.getElementById('navigation-primary') ||
    document.body;
  const selector = (
    <VersionSelector
      hasReactDocs={hasReactDocs}
      isReactDocs={isReactDocs}
      selectedVersion={selectedVersion}
    />
  );
  const elementToRender =
    renderTo === document.body ? (
      selector
    ) : (
      <div style={{ position: 'absolute', bottom: 0, left: 0 }}>{selector}</div>
    );
  render(elementToRender, renderTo);
};

// Google Tag Manager
/* eslint-disable */
(function (w, d, s, l, i) {
  w[l] = w[l] || [];
  w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
  const f = d.getElementsByTagName(s)[0];
  const j = d.createElement(s);
  const dl = l != 'dataLayer' ? `&l=${l}` : '';
  j.async = true;
  j.src = `https://www.googletagmanager.com/gtm.js?id=${i}${dl}`;
  f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-TNB6JVN');
/* eslint-enable */
